[
[5,"a","Architecture","A short string identifying the architecture of the local system. A string such as `x86`, `x86-64` or `arm64`. See the architectures defined for `ConditionArchitecture=` above for a full list."],
[5,"A","Operating system image version","The operating system image version identifier of the running system, as read from the `IMAGE_VERSION=` field of `/etc/os-release`. If not set, resolves to an empty string. See [os-release(5)](os-release.html#) for more information."],
[5,"b","Boot ID","The boot ID of the running system, formatted as string. See [random(4)](http://man7.org/linux/man-pages/man4/random.4.html) for more information."],
[5,"B","Operating system build ID","The operating system build identifier of the running system, as read from the `BUILD_ID=` field of `/etc/os-release`. If not set, resolves to an empty string. See [os-release(5)](os-release.html#) for more information."],
[5,"C","Cache directory root","This is either `/var/cache` (for the system manager) or the path \"`$XDG_CACHE_HOME`\" resolves to (for user managers)."],
[5,"E","Configuration directory root","This is either `/etc/` (for the system manager) or the path \"`$XDG_CONFIG_HOME`\" resolves to (for user managers)."],
[5,"f","Unescaped filename","This is either the unescaped instance name (if applicable) with `/` prepended (if applicable), or the unescaped prefix name prepended with `/`. This implements unescaping according to the rules for escaping absolute file system paths discussed above."],
[5,"g","User group","This is the name of the group running the service manager instance. In case of the system manager this resolves to \"`root`\"."],
[5,"G","User GID","This is the numeric GID of the user running the service manager instance. In case of the system manager this resolves to \"`0`\"."],
[5,"h","User home directory","This is the home directory of the _user running the service manager instance_. In case of the system manager this resolves to \"`/root`\". Note that this setting is _not_ influenced by the `User=` setting configurable in the \\[Service\\] section of the service unit."],
[5,"H","Host name","The hostname of the running system at the point in time the unit configuration is loaded."],
[5,"i","Instance name","For instantiated units this is the string between the first \"`@`\" character and the type suffix. Empty for non-instantiated units."],
[5,"I","Unescaped instance name","Same as \"`%i`\", but with escaping undone."],
[5,"j","Final component of the prefix","This is the string between the last \"`-`\" and the end of the prefix name. If there is no \"`-`\", this is the same as \"`%p`\"."],
[5,"J","Unescaped final component of the prefix","Same as \"`%j`\", but with escaping undone."],
[5,"l","Short host name","The hostname of the running system at the point in time the unit configuration is loaded, truncated at the first dot to remove any domain component."],
[5,"L","Log directory root","This is either `/var/log` (for the system manager) or the path \"`$XDG_CONFIG_HOME`\" resolves to with `/log` appended (for user managers)."],
[5,"m","Machine ID","The machine ID of the running system, formatted as string. See [machine-id(5)](machine-id.html#) for more information."],
[5,"M","Operating system image identifier","The operating system image identifier of the running system, as read from the `IMAGE_ID=` field of `/etc/os-release`. If not set, resolves to an empty string. See [os-release(5)](os-release.html#) for more information."],
[5,"n","Full unit name",""],
[5,"N","Full unit name","Same as \"`%n`\", but with the type suffix removed."],
[5,"o","Operating system ID","The operating system identifier of the running system, as read from the `ID=` field of `/etc/os-release`. See [os-release(5)](os-release.html#) for more information."],
[5,"p","Prefix name","For instantiated units, this refers to the string before the first \"`@`\" character of the unit name. For non-instantiated units, same as \"`%N`\"."],
[5,"P","Unescaped prefix name","Same as \"`%p`\", but with escaping undone."],
[5,"s","User shell","This is the shell of the user running the service manager instance. In case of the system manager this resolves to \"`/bin/sh`\"."],
[5,"S","State directory root","This is either `/var/lib` (for the system manager) or the path \"`$XDG_CONFIG_HOME`\" resolves to (for user managers)."],
[5,"t","Runtime directory root","This is either `/run/` (for the system manager) or the path \"`$XDG_RUNTIME_DIR`\" resolves to (for user managers)."],
[5,"T","Directory for temporary files","This is either `/tmp` or the path \"`$TMPDIR`\", \"`$TEMP`\" or \"`$TMP`\" are set to. (Note that the directory may be specified without a trailing slash.)"],
[5,"u","User name","This is the name of the _user running the service manager instance_. In case of the system manager this resolves to \"`root`\". Note that this setting is _not_ influenced by the `User=` setting configurable in the \\[Service\\] section of the service unit."],
[5,"U","User UID","This is the numeric UID of the _user running the service manager instance_. In case of the system manager this resolves to \"`0`\". Note that this setting is _not_ influenced by the `User=` setting configurable in the \\[Service\\] section of the service unit."],
[5,"v","Kernel release","Identical to **uname -r** output."],
[5,"V","Directory for larger and persistent temporary files","This is either `/var/tmp` or the path \"`$TMPDIR`\", \"`$TEMP`\" or \"`$TMP`\" are set to. (Note that the directory may be specified without a trailing slash.)"],
[5,"w","Operating system version ID","The operating system version identifier of the running system, as read from the `VERSION_ID=` field of `/etc/os-release`. If not set, resolves to an empty string. See [os-release(5)](os-release.html#) for more information."],
[5,"W","Operating system variant ID","The operating system variant identifier of the running system, as read from the `VARIANT_ID=` field of `/etc/os-release`. If not set, resolves to an empty string. See [os-release(5)](os-release.html#) for more information."],
[5,"%","Single percent sign","Use \"`%%`\" in place of \"`%`\" to specify a single percent sign."],
[3,1,"systemd.socket(5)","systemd.socket â€” Socket unit configuration","systemd.socket.html"],
[4,1,"Specifies an address to listen on for a stream (`SOCK_STREAM`), datagram (`SOCK_DGRAM`), or sequential packet (`SOCK_SEQPACKET`) socket, respectively. The address can be written in various formats:\n\nIf the address starts with a slash (\"`/`\"), it is read as file system socket in the `AF_UNIX` socket family.\n\nIf the address starts with an at symbol (\"`@`\"), it is read as abstract namespace socket in the `AF_UNIX` family. The \"`@`\" is replaced with a `NUL` character before binding. For details, see [unix(7)](http://man7.org/linux/man-pages/man7/unix.7.html).\n\nIf the address string is a single number, it is read as port number to listen on via IPv6. Depending on the value of `BindIPv6Only=` (see below) this might result in the service being available via both IPv6 and IPv4 (default) or just via IPv6.\n\nIf the address string is a string in the format \"``_`v.w.x.y`_:_`z`_``\", it is interpreted as IPv4 address _`v.w.x.y`_ and port _`z`_.\n\nIf the address string is a string in the format \"``[_`x`_]:_`y`_``\", it is interpreted as IPv6 address _`x`_ and port _`y`_. An optional interface scope (interface name or number) may be specified after a \"`%`\" symbol: \"``[_`x`_]:_`y`_%_`dev`_``\". Interface scopes are only useful with link-local addresses, because the kernel ignores them in other cases. Note that if an address is specified as IPv6, it might still make the service available via IPv4 too, depending on the `BindIPv6Only=` setting (see below).\n\nIf the address string is a string in the format \"``vsock:_`x`_:_`y`_``\", it is read as CID _`x`_ on a port _`y`_ address in the `AF_VSOCK` family. The CID is a unique 32-bit integer identifier in `AF_VSOCK` analogous to an IP address. Specifying the CID is optional, and may be set to the empty string.\n\nNote that `SOCK_SEQPACKET` (i.e. `ListenSequentialPacket=`) is only available for `AF_UNIX` sockets. `SOCK_STREAM` (i.e. `ListenStream=`) when used for IP sockets refers to TCP sockets, `SOCK_DGRAM` (i.e. `ListenDatagram=`) to UDP.\n\nThese options may be specified more than once, in which case incoming traffic on any of the sockets will trigger service activation, and all listed sockets will be passed to the service, regardless of whether there is incoming traffic on them or not. If the empty string is assigned to any of these options, the list of addresses to listen on is reset, all prior uses of any of these options will have no effect.\n\nIt is also possible to have more than one socket unit for the same service when using `Service=`, and the service will receive all the sockets configured in all the socket units. Sockets configured in one unit are passed in the order of configuration, but no ordering between socket units is specified.\n\nIf an IP address is used here, it is often desirable to listen on it before the interface it is configured on is up and running, and even regardless of whether it will be up and running at any point. To deal with this, it is recommended to set the `FreeBind=` option described below."],
[4,2,"Specifies a file system FIFO (see [fifo(7)](http://man7.org/linux/man-pages/man7/fifo.7.html) for details) to listen on. This expects an absolute file system path as argument. Behavior otherwise is very similar to the `ListenDatagram=` directive above."],
[4,3,"Specifies a special file in the file system to listen on. This expects an absolute file system path as argument. Behavior otherwise is very similar to the `ListenFIFO=` directive above. Use this to open character device nodes as well as special files in `/proc/` and `/sys/`."],
[4,4,"Specifies a Netlink family to create a socket for to listen on. This expects a short string referring to the `AF_NETLINK` family name (such as `audit` or `kobject-uevent`) as argument, optionally suffixed by a whitespace followed by a multicast group integer. Behavior otherwise is very similar to the `ListenDatagram=` directive above."],
[4,5,"Specifies a POSIX message queue name to listen on (see [mq\\_overview(7)](http://man7.org/linux/man-pages/man7/mq_overview.7.html) for details). This expects a valid message queue name (i.e. beginning with \"`/`\"). Behavior otherwise is very similar to the `ListenFIFO=` directive above. On Linux message queue descriptors are actually file descriptors and can be inherited between processes."],
[4,6,"Specifies a [USB FunctionFS](https://www.kernel.org/doc/Documentation/usb/functionfs.txt) endpoints location to listen on, for implementation of USB gadget functions. This expects an absolute file system path of a FunctionFS mount point as the argument. Behavior otherwise is very similar to the `ListenFIFO=` directive above. Use this to open the FunctionFS endpoint `ep0`. When using this option, the activated service has to have the `USBFunctionDescriptors=` and `USBFunctionStrings=` options set."],
[4,7,"Takes one of `udplite` or `sctp`. The socket will use the UDP-Lite (`IPPROTO_UDPLITE`) or SCTP (`IPPROTO_SCTP`) protocol, respectively."],
[4,8,"Takes one of `default`, `both` or `ipv6-only`. Controls the IPV6\\_V6ONLY socket option (see [ipv6(7)](http://linux.die.net/man/7/ipv6) for details). If `both`, IPv6 sockets bound will be accessible via both IPv4 and IPv6. If `ipv6-only`, they will be accessible via IPv6 only. If `default` (which is the default, surprise!), the system wide default setting is used, as controlled by `/proc/sys/net/ipv6/bindv6only`, which in turn defaults to the equivalent of `both`."],
[4,9,"Takes an unsigned integer argument. Specifies the number of connections to queue that have not been accepted yet. This setting matters only for stream and sequential packet sockets. See [listen(2)](http://man7.org/linux/man-pages/man2/listen.2.html) for details. Defaults to SOMAXCONN (128)."],
[4,10,"Specifies a network interface name to bind this socket to. If set, traffic will only be accepted from the specified network interfaces. This controls the `SO_BINDTODEVICE` socket option (see [socket(7)](http://man7.org/linux/man-pages/man7/socket.7.html) for details). If this option is used, an implicit dependency from this socket unit on the network interface device unit is created (see [systemd.device(5)](systemd.device.html#)). Note that setting this parameter might result in additional dependencies to be added to the unit (see above)."],
[4,11,"Takes a UNIX user/group name. When specified, all `AF_UNIX` sockets and FIFO nodes in the file system are owned by the specified user and group. If unset (the default), the nodes are owned by the root user/group (if run in system context) or the invoking user/group (if run in user context). If only a user is specified but no group, then the group is derived from the user's default group."],
[4,12,"If listening on a file system socket or FIFO, this option specifies the file system access mode used when creating the file node. Takes an access mode in octal notation. Defaults to 0666."],
[4,13,"If listening on a file system socket or FIFO, the parent directories are automatically created if needed. This option specifies the file system access mode used when creating these directories. Takes an access mode in octal notation. Defaults to 0755."],
[4,14,"Takes a boolean argument. If yes, a service instance is spawned for each incoming connection and only the connection socket is passed to it. If no, all listening sockets themselves are passed to the started service unit, and only one service unit is spawned for all connections (also see above). This value is ignored for datagram sockets and FIFOs where a single service unit unconditionally handles all incoming traffic. Defaults to `no`. For performance reasons, it is recommended to write new daemons only in a way that is suitable for `Accept=no`. A daemon listening on an `AF_UNIX` socket may, but does not need to, call [close(2)](http://man7.org/linux/man-pages/man2/close.2.html) on the received socket before exiting. However, it must not unlink the socket from a file system. It should not invoke [shutdown(2)](http://man7.org/linux/man-pages/man2/shutdown.2.html) on sockets it got with `Accept=no`, but it may do so for sockets it got with `Accept=yes` set. Setting `Accept=yes` is mostly useful to allow daemons designed for usage with [inetd(8)](https://www.freebsd.org/cgi/man.cgi?inetd(8)) to work unmodified with systemd socket activation.\n\nFor IPv4 and IPv6 connections, the `REMOTE_ADDR` environment variable will contain the remote IP address, and `REMOTE_PORT` will contain the remote port. This is the same as the format used by CGI. For `SOCK_RAW`, the port is the IP protocol.\n\nIt is recommended to set `CollectMode=inactive-or-failed` for service instances activated via `Accept=yes`, to ensure that failed connection services are cleaned up and released from memory, and do not accumulate."],
[4,15,"Takes a boolean argument. May only be used in conjunction with `ListenSpecial=`. If true, the specified special file is opened in read-write mode, if false, in read-only mode. Defaults to false."],
[4,16,"Takes a boolean argument. May only be used when `Accept=no`. If yes, the socket's buffers are cleared after the triggered service exited. This causes any pending data to be flushed and any pending incoming connections to be rejected. If no, the socket's buffers won't be cleared, permitting the service to handle any pending connections after restart, which is the usually expected behaviour. Defaults to `no`."],
[4,17,"The maximum number of connections to simultaneously run services instances for, when `Accept=yes` is set. If more concurrent connections are coming in, they will be refused until at least one existing connection is terminated. This setting has no effect on sockets configured with `Accept=no` or datagram sockets. Defaults to 64."],
[4,18,"The maximum number of connections for a service per source IP address. This is very similar to the `MaxConnections=` directive above. Disabled by default."],
[4,19,"Takes a boolean argument. If true, the TCP/IP stack will send a keep alive message after 2h (depending on the configuration of `/proc/sys/net/ipv4/tcp_keepalive_time`) for all TCP streams accepted on this socket. This controls the `SO_KEEPALIVE` socket option (see [socket(7)](http://man7.org/linux/man-pages/man7/socket.7.html) and the [TCP Keepalive HOWTO](http://www.tldp.org/HOWTO/html_single/TCP-Keepalive-HOWTO/) for details.) Defaults to `false`."],
[4,20,"Takes time (in seconds) as argument. The connection needs to remain idle before TCP starts sending keepalive probes. This controls the TCP\\_KEEPIDLE socket option (see [socket(7)](http://man7.org/linux/man-pages/man7/socket.7.html) and the [TCP Keepalive HOWTO](http://www.tldp.org/HOWTO/html_single/TCP-Keepalive-HOWTO/) for details.) Defaults value is 7200 seconds (2 hours)."],
[4,21,"Takes time (in seconds) as argument between individual keepalive probes, if the socket option `SO_KEEPALIVE` has been set on this socket. This controls the `TCP_KEEPINTVL` socket option (see [socket(7)](http://man7.org/linux/man-pages/man7/socket.7.html) and the [TCP Keepalive HOWTO](http://www.tldp.org/HOWTO/html_single/TCP-Keepalive-HOWTO/) for details.) Defaults value is 75 seconds."],
[4,22,"Takes an integer as argument. It is the number of unacknowledged probes to send before considering the connection dead and notifying the application layer. This controls the TCP\\_KEEPCNT socket option (see [socket(7)](http://man7.org/linux/man-pages/man7/socket.7.html) and the [TCP Keepalive HOWTO](http://www.tldp.org/HOWTO/html_single/TCP-Keepalive-HOWTO/) for details.) Defaults value is 9."],
[4,23,"Takes a boolean argument. TCP Nagle's algorithm works by combining a number of small outgoing messages, and sending them all at once. This controls the TCP\\_NODELAY socket option (see [tcp(7)](http://linux.die.net/man/7/tcp)). Defaults to `false`."],
[4,24,"Takes an integer argument controlling the priority for all traffic sent from this socket. This controls the `SO_PRIORITY` socket option (see [socket(7)](http://man7.org/linux/man-pages/man7/socket.7.html) for details.)."],
[4,25,"Takes time (in seconds) as argument. If set, the listening process will be awakened only when data arrives on the socket, and not immediately when connection is established. When this option is set, the `TCP_DEFER_ACCEPT` socket option will be used (see [tcp(7)](http://linux.die.net/man/7/tcp)), and the kernel will ignore initial ACK packets without any data. The argument specifies the approximate amount of time the kernel should wait for incoming data before falling back to the normal behavior of honoring empty ACK packets. This option is beneficial for protocols where the client sends the data first (e.g. HTTP, in contrast to SMTP), because the server process will not be woken up unnecessarily before it can take any action.\n\nIf the client also uses the `TCP_DEFER_ACCEPT` option, the latency of the initial connection may be reduced, because the kernel will send data in the final packet establishing the connection (the third packet in the \"three-way handshake\").\n\nDisabled by default."],
[4,26,"Takes an integer argument controlling the receive or send buffer sizes of this socket, respectively. This controls the `SO_RCVBUF` and `SO_SNDBUF` socket options (see [socket(7)](http://man7.org/linux/man-pages/man7/socket.7.html) for details.). The usual suffixes K, M, G are supported and are understood to the base of 1024."],
[4,27,"Takes an integer argument controlling the IP Type-Of-Service field for packets generated from this socket. This controls the `IP_TOS` socket option (see [ip(7)](http://linux.die.net/man/7/ip) for details.). Either a numeric string or one of `low-delay`, `throughput`, `reliability` or `low-cost` may be specified."],
[4,28,"Takes an integer argument controlling the IPv4 Time-To-Live/IPv6 Hop-Count field for packets generated from this socket. This sets the `IP_TTL`/`IPV6_UNICAST_HOPS` socket options (see [ip(7)](http://linux.die.net/man/7/ip) and [ipv6(7)](http://linux.die.net/man/7/ipv6) for details.)"],
[4,29,"Takes an integer value. Controls the firewall mark of packets generated by this socket. This can be used in the firewall logic to filter packets from this socket. This sets the `SO_MARK` socket option. See [iptables(8)](http://linux.die.net/man/8/iptables) for details."],
[4,30,"Takes a boolean value. If true, allows multiple [bind(2)](http://man7.org/linux/man-pages/man2/bind.2.html)s to this TCP or UDP port. This controls the `SO_REUSEPORT` socket option. See [socket(7)](http://man7.org/linux/man-pages/man7/socket.7.html) for details."],
[4,31,"Takes a string value. Controls the extended attributes \"`security.SMACK64`\", \"`security.SMACK64IPIN`\" and \"`security.SMACK64IPOUT`\", respectively, i.e. the security label of the FIFO, or the security label for the incoming or outgoing connections of the socket, respectively. See [Smack.txt](https://www.kernel.org/doc/Documentation/security/Smack.txt) for details."],
[4,32,"Takes a boolean argument. When true, systemd will attempt to figure out the SELinux label used for the instantiated service from the information handed by the peer over the network. Note that only the security level is used from the information provided by the peer. Other parts of the resulting SELinux context originate from either the target binary that is effectively triggered by socket unit or from the value of the `SELinuxContext=` option. This configuration option applies only when activated service is passed in single socket file descriptor, i.e. service instances that have standard input connected to a socket or services triggered by exactly one socket unit. Also note that this option is useful only when MLS/MCS SELinux policy is deployed. Defaults to \"`false`\"."],
[4,33,"Takes a size in bytes. Controls the pipe buffer size of FIFOs configured in this socket unit. See [fcntl(2)](http://man7.org/linux/man-pages/man2/fcntl.2.html) for details. The usual suffixes K, M, G are supported and are understood to the base of 1024."],
[4,34,"These two settings take integer values and control the mq\\_maxmsg field or the mq\\_msgsize field, respectively, when creating the message queue. Note that either none or both of these variables need to be set. See [mq\\_setattr(3)](http://linux.die.net/man/3/mq_setattr) for details."],
[4,35,"Takes a boolean value. Controls whether the socket can be bound to non-local IP addresses. This is useful to configure sockets listening on specific IP addresses before those IP addresses are successfully configured on a network interface. This sets the `IP_FREEBIND`/`IPV6_FREEBIND` socket option. For robustness reasons it is recommended to use this option whenever you bind a socket to a specific IP address. Defaults to `false`."],
[4,36,"Takes a boolean value. Controls the `IP_TRANSPARENT`/`IPV6_TRANSPARENT` socket option. Defaults to `false`."],
[4,37,"Takes a boolean value. This controls the `SO_BROADCAST` socket option, which allows broadcast datagrams to be sent from this socket. Defaults to `false`."],
[4,38,"Takes a boolean value. This controls the `SO_PASSCRED` socket option, which allows `AF_UNIX` sockets to receive the credentials of the sending process in an ancillary message. Defaults to `false`."],
[4,39,"Takes a boolean value. This controls the `SO_PASSSEC` socket option, which allows `AF_UNIX` sockets to receive the security context of the sending process in an ancillary message. Defaults to `false`."],
[4,40,"Takes a boolean value. This controls the `IP_PKTINFO`, `IPV6_RECVPKTINFO`, `NETLINK_PKTINFO` or `PACKET_AUXDATA` socket options, which enable reception of additional per-packet metadata as ancillary message, on `AF_INET`, `AF_INET6`, `AF_UNIX` and `AF_PACKET` sockets. Defaults to `false`."],
[4,41,"Takes one of \"`off`\", \"`us`\" (alias: \"`usec`\", \"`Âµs`\") or \"`ns`\" (alias: \"`nsec`\"). This controls the `SO_TIMESTAMP` or `SO_TIMESTAMPNS` socket options, and enables whether ingress network traffic shall carry timestamping metadata. Defaults to `off`."],
[4,42,"Takes a string value. Controls the TCP congestion algorithm used by this socket. Should be one of \"`westwood`\", \"`veno`\", \"`cubic`\", \"`lp`\" or any other available algorithm supported by the IP stack. This setting applies only to stream sockets."],
[4,43,"Takes one or more command lines, which are executed before or after the listening sockets/FIFOs are created and bound, respectively. The first token of the command line must be an absolute filename, then followed by arguments for the process. Multiple command lines may be specified following the same scheme as used for `ExecStartPre=` of service unit files."],
[4,44,"Additional commands that are executed before or after the listening sockets/FIFOs are closed and removed, respectively. Multiple command lines may be specified following the same scheme as used for `ExecStartPre=` of service unit files."],
[4,45,"Configures the time to wait for the commands specified in `ExecStartPre=`, `ExecStartPost=`, `ExecStopPre=` and `ExecStopPost=` to finish. If a command does not exit within the configured time, the socket will be considered failed and be shut down again. All commands still running will be terminated forcibly via `SIGTERM`, and after another delay of this time with `SIGKILL`. (See `KillMode=` in [systemd.kill(5)](systemd.kill.html#).) Takes a unit-less value in seconds, or a time span value such as \"5min 20s\". Pass \"`0`\" to disable the timeout logic. Defaults to `DefaultTimeoutStartSec=` from the manager configuration file (see [systemd-system.conf(5)](systemd-system.conf.html#))."],
[4,46,"Specifies the service unit name to activate on incoming traffic. This setting is only allowed for sockets with `Accept=no`. It defaults to the service that bears the same name as the socket (with the suffix replaced). In most cases, it should not be necessary to use this option. Note that setting this parameter might result in additional dependencies to be added to the unit (see above)."],
[4,47,"Takes a boolean argument. If enabled, any file nodes created by this socket unit are removed when it is stopped. This applies to `AF_UNIX` sockets in the file system, POSIX message queues, FIFOs, as well as any symlinks to them configured with `Symlinks=`. Normally, it should not be necessary to use this option, and is not recommended as services might continue to run after the socket unit has been terminated and it should still be possible to communicate with them via their file system node. Defaults to off."],
[4,48,"Takes a list of file system paths. The specified paths will be created as symlinks to the `AF_UNIX` socket path or FIFO path of this socket unit. If this setting is used, only one `AF_UNIX` socket in the file system or one FIFO may be configured for the socket unit. Use this option to manage one or more symlinked alias names for a socket, binding their lifecycle together. Note that if creation of a symlink fails this is not considered fatal for the socket unit, and the socket unit may still start. If an empty string is assigned, the list of paths is reset. Defaults to an empty list."],
[4,49,"Assigns a name to all file descriptors this socket unit encapsulates. This is useful to help activated services identify specific file descriptors, if multiple fds are passed. Services may use the [sd\\_listen\\_fds\\_with\\_names(3)](sd_listen_fds_with_names.html#) call to acquire the names configured for the received file descriptors. Names may contain any ASCII character, but must exclude control characters and \"`:`\", and must be at most 255 characters in length. If this setting is not used, the file descriptor name defaults to the name of the socket unit, including its `.socket` suffix."],
[4,50,"Configures a limit on how often this socket unit my be activated within a specific time interval. The `TriggerLimitIntervalSec=` may be used to configure the length of the time interval in the usual time units \"`us`\", \"`ms`\", \"`s`\", \"`min`\", \"`h`\", â€¦ and defaults to 2s (See [systemd.time(7)](systemd.time.html#) for details on the various time units understood). The `TriggerLimitBurst=` setting takes a positive integer value and specifies the number of permitted activations per time interval, and defaults to 200 for `Accept=yes` sockets (thus by default permitting 200 activations per 2s), and 20 otherwise (20 activations per 2s). Set either to 0 to disable any form of trigger rate limiting. If the limit is hit, the socket unit is placed into a failure mode, and will not be connectible anymore until restarted. Note that this limit is enforced before the service activation is enqueued."],
[2,"Accept","",14,1],
[2,"Backlog","",9,1],
[2,"BindIPv6Only","",8,1],
[2,"BindToDevice","",10,1],
[2,"Broadcast","",37,1],
[2,"DeferAcceptSec","",25,1],
[2,"DirectoryMode","",13,1],
[2,"ExecStartPost","",43,1],
[2,"ExecStartPre","",43,1],
[2,"ExecStopPost","",44,1],
[2,"ExecStopPre","",44,1],
[2,"FileDescriptorName","",49,1],
[2,"FlushPending","",16,1],
[2,"FreeBind","",35,1],
[2,"IPTOS","",27,1],
[2,"IPTTL","",28,1],
[2,"KeepAlive","",19,1],
[2,"KeepAliveIntervalSec","",21,1],
[2,"KeepAliveProbes","",22,1],
[2,"KeepAliveTimeSec","",20,1],
[2,"ListenDatagram","",1,1],
[2,"ListenFIFO","",2,1],
[2,"ListenMessageQueue","",5,1],
[2,"ListenNetlink","",4,1],
[2,"ListenSequentialPacket","",1,1],
[2,"ListenSpecial","",3,1],
[2,"ListenStream","",1,1],
[2,"ListenUSBFunction","",6,1],
[2,"Mark","",29,1],
[2,"MaxConnections","",17,1],
[2,"MaxConnectionsPerSource","",18,1],
[2,"MessageQueueMaxMessages","",34,1],
[2,"MessageQueueMessageSize","",34,1],
[2,"NoDelay","",23,1],
[2,"PassCredentials","",38,1],
[2,"PassPacketInfo","",40,1],
[2,"PassSecurity","",39,1],
[2,"PipeSize","",33,1],
[2,"Priority","",24,1],
[2,"ReceiveBuffer","",26,1],
[2,"RemoveOnStop","",47,1],
[2,"ReusePort","",30,1],
[2,"SELinuxContextFromNet","",32,1],
[2,"SendBuffer","",26,1],
[2,"Service","",46,1],
[2,"SmackLabel","",31,1],
[2,"SmackLabelIPIn","",31,1],
[2,"SmackLabelIPOut","",31,1],
[2,"SocketGroup","",11,1],
[2,"SocketMode","",12,1],
[2,"SocketProtocol","",7,1],
[2,"SocketUser","",11,1],
[2,"Symlinks","",48,1],
[2,"TCPCongestion","",42,1],
[2,"TimeoutSec","",45,1],
[2,"Timestamping","",41,1],
[2,"Transparent","",36,1],
[2,"TriggerLimitBurst","",50,1],
[2,"TriggerLimitIntervalSec","",50,1],
[2,"Writable","",15,1],
[3,2,"systemd.timer(5)","systemd.timer â€” Timer unit configuration","systemd.timer.html"],
[4,51,"Defines monotonic timers relative to different starting points:\n\n**TableÂ 1.Â Settings and their starting points**\n\nSetting\n\nMeaning\n\n`OnActiveSec=`\n\nDefines a timer relative to the moment the timer unit itself is activated.\n\n`OnBootSec=`\n\nDefines a timer relative to when the machine was booted up. In containers, for the system manager instance, this is mapped to `OnStartupSec=`, making both equivalent.\n\n`OnStartupSec=`\n\nDefines a timer relative to when the service manager was first started. For system timer units this is very similar to `OnBootSec=` as the system service manager is generally started very early at boot. It's primarily useful when configured in units running in the per-user service manager, as the user service manager is generally started on first login only, not already during boot.\n\n`OnUnitActiveSec=`\n\nDefines a timer relative to when the unit the timer unit is activating was last activated.\n\n`OnUnitInactiveSec=`\n\nDefines a timer relative to when the unit the timer unit is activating was last deactivated.\n\n  \n\nMultiple directives may be combined of the same and of different types, in which case the timer unit will trigger whenever any of the specified timer expressions elapse. For example, by combining `OnBootSec=` and `OnUnitActiveSec=`, it is possible to define a timer that elapses in regular intervals and activates a specific service each time. Moreover, both monotonic time expressions and `OnCalendar=` calendar expressions may be combined in the same timer unit.\n\nThe arguments to the directives are time spans configured in seconds. Example: \"OnBootSec=50\" means 50s after boot-up. The argument may also include time units. Example: \"OnBootSec=5h 30min\" means 5 hours and 30 minutes after boot-up. For details about the syntax of time spans, see [systemd.time(7)](systemd.time.html#).\n\nIf a timer configured with `OnBootSec=` or `OnStartupSec=` is already in the past when the timer unit is activated, it will immediately elapse and the configured unit is started. This is not the case for timers defined in the other directives.\n\nThese are monotonic timers, independent of wall-clock time and timezones. If the computer is temporarily suspended, the monotonic clock generally pauses, too. Note that if `WakeSystem=` is used, a different monotonic clock is selected that continues to advance while the system is suspended and thus can be used as the trigger to resume the system.\n\nIf the empty string is assigned to any of these options, the list of timers is reset (both monotonic timers and `OnCalendar=` timers, see below), and all prior assignments will have no effect.\n\nNote that timers do not necessarily expire at the precise time configured with these settings, as they are subject to the `AccuracySec=` setting below."],
[4,52,"Defines realtime (i.e. wallclock) timers with calendar event expressions. See [systemd.time(7)](systemd.time.html#) for more information on the syntax of calendar event expressions. Otherwise, the semantics are similar to `OnActiveSec=` and related settings.\n\nNote that timers do not necessarily expire at the precise time configured with this setting, as it is subject to the `AccuracySec=` setting below.\n\nMay be specified more than once, in which case the timer unit will trigger whenever any of the specified expressions elapse. Moreover calendar timers and monotonic timers (see above) may be combined within the same timer unit.\n\nIf the empty string is assigned to any of these options, the list of timers is reset (both `OnCalendar=` timers and monotonic timers, see above), and all prior assignments will have no effect."],
[4,53,"Specify the accuracy the timer shall elapse with. Defaults to 1min. The timer is scheduled to elapse within a time window starting with the time specified in `OnCalendar=`, `OnActiveSec=`, `OnBootSec=`, `OnStartupSec=`, `OnUnitActiveSec=` or `OnUnitInactiveSec=` and ending the time configured with `AccuracySec=` later. Within this time window, the expiry time will be placed at a host-specific, randomized, but stable position that is synchronized between all local timer units. This is done in order to optimize power consumption to suppress unnecessary CPU wake-ups. To get best accuracy, set this option to 1us. Note that the timer is still subject to the timer slack configured via [systemd-system.conf(5)](systemd-system.conf.html#)'s `TimerSlackNSec=` setting. See [prctl(2)](http://man7.org/linux/man-pages/man2/prctl.2.html) for details. To optimize power consumption, make sure to set this value as high as possible and as low as necessary.\n\nNote that this setting is primarily a power saving option that allows coalescing CPU wake-ups. It should not be confused with `RandomizedDelaySec=` (see below) which adds a random value to the time the timer shall elapse next and whose purpose is the opposite: to stretch elapsing of timer events over a longer period to reduce workload spikes. For further details and explanations and how both settings play together, see below."],
[4,54,"Delay the timer by a randomly selected, evenly distributed amount of time between 0 and the specified time value. Defaults to 0, indicating that no randomized delay shall be applied. Each timer unit will determine this delay randomly before each iteration, and the delay will simply be added on top of the next determined elapsing time, unless modified with `FixedRandomDelay=`, see below.\n\nThis setting is useful to stretch dispatching of similarly configured timer events over a certain time interval, to prevent them from firing all at the same time, possibly resulting in resource congestion.\n\nNote the relation to `AccuracySec=` above: the latter allows the service manager to coalesce timer events within a specified time range in order to minimize wakeups, while this setting does the opposite: it stretches timer events over an interval, to make it unlikely that they fire simultaneously. If `RandomizedDelaySec=` and `AccuracySec=` are used in conjunction, first the randomized delay is added, and then the result is possibly further shifted to coalesce it with other timer events happening on the system. As mentioned above `AccuracySec=` defaults to 1 minute and `RandomizedDelaySec=` to 0, thus encouraging coalescing of timer events. In order to optimally stretch timer events over a certain range of time, set `AccuracySec=1us` and `RandomizedDelaySec=` to some higher value."],
[4,55,"Takes a boolean argument. When enabled, the randomized offset specified by `RandomizedDelaySec=` is reused for all firings of the same timer. For a given timer unit, the offset depends on the machine ID, user identifier and timer name, which means that it is stable between restarts of the manager. This effectively creates a fixed offset for an individual timer, reducing the jitter in firings of this timer, while still avoiding firing at the same time as other similarly configured timers.\n\nThis setting has no effect if `RandomizedDelaySec=` is set to 0. Defaults to `false`."],
[4,56,"These options take boolean arguments. When true, the service unit will be triggered when the system clock (`CLOCK_REALTIME`) jumps relative to the monotonic clock (`CLOCK_MONOTONIC`), or when the local system timezone is modified. These options can be used alone or in combination with other timer expressions (see above) within the same timer unit. These options default to `false`."],
[4,57,"The unit to activate when this timer elapses. The argument is a unit name, whose suffix is not \"`.timer`\". If not specified, this value defaults to a service that has the same name as the timer unit, except for the suffix. (See above.) It is recommended that the unit name that is activated and the unit name of the timer unit are named identically, except for the suffix."],
[4,58,"Takes a boolean argument. If true, the time when the service unit was last triggered is stored on disk. When the timer is activated, the service unit is triggered immediately if it would have been triggered at least once during the time when the timer was inactive. Such triggering is nonetheless subject to the delay imposed by `RandomizedDelaySec=`. This is useful to catch up on missed runs of the service when the system was powered down. Note that this setting only has an effect on timers configured with `OnCalendar=`. Defaults to `false`.\n\nUse **systemctl clean --what=state â€¦** on the timer unit to remove the timestamp file maintained by this option from disk. In particular, use this command before uninstalling a timer unit. See [systemctl(1)](systemctl.html#) for details."],
[4,59,"Takes a boolean argument. If true, an elapsing timer will cause the system to resume from suspend, should it be suspended and if the system supports this. Note that this option will only make sure the system resumes on the appropriate times, it will not take care of suspending it again after any work that is to be done is finished. Defaults to `false`.\n\nNote that this functionality requires privileges and is thus generally only available in the system service manager.\n\nNote that behaviour of monotonic clock timers (as configured with `OnActiveSec=`, `OnBootSec=`, `OnStartupSec=`, `OnUnitActiveSec=`, `OnUnitInactiveSec=`, see above) is altered depending on this option. If false, a monotonic clock is used that is paused during system suspend (`CLOCK_MONOTONIC`), if true a different monotonic clock is used that continues advancing during system suspend (`CLOCK_BOOTTIME`), see [clock\\_getres(2)](http://man7.org/linux/man-pages/man2/clock_getres.2.html) for details."],
[4,60,"Takes a boolean argument. If true, a timer will stay loaded, and its state remains queryable even after it elapsed and the associated unit (as configured with `Unit=`, see above) deactivated again. If false, an elapsed timer unit that cannot elapse anymore is unloaded once its associated unit deactivated again. Turning this off is particularly useful for transient timer units. Note that this setting has an effect when repeatedly starting a timer unit: if `RemainAfterElapse=` is on, starting the timer a second time has no effect. However, if `RemainAfterElapse=` is off and the timer unit was already unloaded, it can be started again, and thus the service can be triggered multiple times. Defaults to `true`."],
[2,"AccuracySec","",53,2],
[2,"FixedRandomDelay","",55,2],
[2,"OnActiveSec","",51,2],
[2,"OnBootSec","",51,2],
[2,"OnCalendar","",52,2],
[2,"OnClockChange","",56,2],
[2,"OnStartupSec","",51,2],
[2,"OnTimezoneChange","",56,2],
[2,"OnUnitActiveSec","",51,2],
[2,"OnUnitInactiveSec","",51,2],
[2,"Persistent","",58,2],
[2,"RandomizedDelaySec","",54,2],
[2,"RemainAfterElapse","",60,2],
[2,"Unit","",57,2],
[2,"WakeSystem","",59,2],
[3,3,"systemd.unit(5)","systemd.unit â€” Unit configuration","systemd.unit.html"],
[4,61,"A short human readable title of the unit. This may be used by **systemd** (and other UIs) as a user-visible label for the unit, so this string should identify the unit rather than describe it, despite the name. This string also shouldn't just repeat the unit name. \"`Apache2 Web Server`\" is a good example. Bad examples are \"`high-performance light-weight HTTP server`\" (too generic) or \"`Apache2`\" (meaningless for people who do not know Apache, duplicates the unit name). **systemd** may use this string as a noun in status messages (\"``Starting _`description`_...``\", \"``Started _`description`_.``\", \"``Reached target _`description`_.``\", \"``Failed to start _`description`_.``\"), so it should be capitalized, and should not be a full sentence, or a phrase with a continuous verb. Bad examples include \"`exiting the container`\" or \"`updating the database once per day.`\"."],
[4,62,"A space-separated list of URIs referencing documentation for this unit or its configuration. Accepted are only URIs of the types \"`http://`\", \"`https://`\", \"`file:`\", \"`info:`\", \"`man:`\". For more information about the syntax of these URIs, see [uri(7)](http://man7.org/linux/man-pages/man7/uri.7.html). The URIs should be listed in order of relevance, starting with the most relevant. It is a good idea to first reference documentation that explains what the unit's purpose is, followed by how it is configured, followed by any other related documentation. This option may be specified more than once, in which case the specified list of URIs is merged. If the empty string is assigned to this option, the list is reset and all prior assignments will have no effect."],
[4,63,"Configures (weak) requirement dependencies on other units. This option may be specified more than once or multiple space-separated units may be specified in one option in which case dependencies for all listed names will be created. Dependencies of this type may also be configured outside of the unit configuration file by adding a symlink to a `.wants/` directory accompanying the unit file. For details, see above.\n\nUnits listed in this option will be started if the configuring unit is. However, if the listed units fail to start or cannot be added to the transaction, this has no impact on the validity of the transaction as a whole, and this unit will still be started. This is the recommended way to hook the start-up of one unit to the start-up of another unit.\n\nNote that requirement dependencies do not influence the order in which services are started or stopped. This has to be configured independently with the `After=` or `Before=` options. If unit `foo.service` pulls in unit `bar.service` as configured with `Wants=` and no ordering is configured with `After=` or `Before=`, then both units will be started simultaneously and without any delay between them if `foo.service` is activated."],
[4,64,"Similar to `Wants=`, but declares a stronger requirement dependency. Dependencies of this type may also be configured by adding a symlink to a `.requires/` directory accompanying the unit file.\n\nIf this unit gets activated, the units listed will be activated as well. If one of the other units fails to activate, and an ordering dependency `After=` on the failing unit is set, this unit will not be started. Besides, with or without specifying `After=`, this unit will be stopped if one of the other units is explicitly stopped.\n\nOften, it is a better choice to use `Wants=` instead of `Requires=` in order to achieve a system that is more robust when dealing with failing services.\n\nNote that this dependency type does not imply that the other unit always has to be in active state when this unit is running. Specifically: failing condition checks (such as `ConditionPathExists=`, `ConditionPathIsSymbolicLink=`, â€¦ â€” see below) do not cause the start job of a unit with a `Requires=` dependency on it to fail. Also, some unit types may deactivate on their own (for example, a service process may decide to exit cleanly, or a device may be unplugged by the user), which is not propagated to units having a `Requires=` dependency. Use the `BindsTo=` dependency type together with `After=` to ensure that a unit may never be in active state without a specific other unit also in active state (see below)."],
[4,65,"Similar to `Requires=`. However, if the units listed here are not started already, they will not be started and the starting of this unit will fail immediately. `Requisite=` does not imply an ordering dependency, even if both units are started in the same transaction. Hence this setting should usually be combined with `After=`, to ensure this unit is not started before the other unit.\n\nWhen `Requisite=b.service` is used on `a.service`, this dependency will show as `RequisiteOf=a.service` in property listing of `b.service`. `RequisiteOf=` dependency cannot be specified directly."],
[4,66,"Configures requirement dependencies, very similar in style to `Requires=`. However, this dependency type is stronger: in addition to the effect of `Requires=` it declares that if the unit bound to is stopped, this unit will be stopped too. This means a unit bound to another unit that suddenly enters inactive state will be stopped too. Units can suddenly, unexpectedly enter inactive state for different reasons: the main process of a service unit might terminate on its own choice, the backing device of a device unit might be unplugged or the mount point of a mount unit might be unmounted without involvement of the system and service manager.\n\nWhen used in conjunction with `After=` on the same unit the behaviour of `BindsTo=` is even stronger. In this case, the unit bound to strictly has to be in active state for this unit to also be in active state. This not only means a unit bound to another unit that suddenly enters inactive state, but also one that is bound to another unit that gets skipped due to a failed condition check (such as `ConditionPathExists=`, `ConditionPathIsSymbolicLink=`, â€¦ â€” see below) will be stopped, should it be running. Hence, in many cases it is best to combine `BindsTo=` with `After=`.\n\nWhen `BindsTo=b.service` is used on `a.service`, this dependency will show as `BoundBy=a.service` in property listing of `b.service`. `BoundBy=` dependency cannot be specified directly."],
[4,67,"Configures dependencies similar to `Requires=`, but limited to stopping and restarting of units. When systemd stops or restarts the units listed here, the action is propagated to this unit. Note that this is a one-way dependencyÂ â€” changes to this unit do not affect the listed units.\n\nWhen `PartOf=b.service` is used on `a.service`, this dependency will show as `ConsistsOf=a.service` in property listing of `b.service`. `ConsistsOf=` dependency cannot be specified directly."],
[4,68,"Configures dependencies similar to `Wants=`, but as long as this unit is up, all units listed in `Upholds=` are started whenever found to be inactive or failed, and no job is queued for them. While a `Wants=` dependency on another unit has a one-time effect when this units started, a `Upholds=` dependency on it has a continuous effect, constantly restarting the unit if necessary. This is an alternative to the `Restart=` setting of service units, to ensure they are kept running whatever happens.\n\nWhen `Upholds=b.service` is used on `a.service`, this dependency will show as `UpheldBy=a.service` in the property listing of `b.service`. The `UpheldBy=` dependency cannot be specified directly."],
[4,69,"A space-separated list of unit names. Configures negative requirement dependencies. If a unit has a `Conflicts=` setting on another unit, starting the former will stop the latter and vice versa.\n\nNote that this setting does not imply an ordering dependency, similarly to the `Wants=` and `Requires=` dependencies described above. This means that to ensure that the conflicting unit is stopped before the other unit is started, an `After=` or `Before=` dependency must be declared. It doesn't matter which of the two ordering dependencies is used, because stop jobs are always ordered before start jobs, see the discussion in `Before=`/`After=` below.\n\nIf unit A that conflicts with unit B is scheduled to be started at the same time as B, the transaction will either fail (in case both are required parts of the transaction) or be modified to be fixed (in case one or both jobs are not a required part of the transaction). In the latter case, the job that is not required will be removed, or in case both are not required, the unit that conflicts will be started and the unit that is conflicted is stopped."],
[4,70,"These two settings expect a space-separated list of unit names. They may be specified more than once, in which case dependencies for all listed names are created.\n\nThose two settings configure ordering dependencies between units. If unit `foo.service` contains the setting `Before=bar.service` and both units are being started, `bar.service`'s start-up is delayed until `foo.service` has finished starting up. `After=` is the inverse of `Before=`, i.e. while `Before=` ensures that the configured unit is started before the listed unit begins starting up, `After=` ensures the opposite, that the listed unit is fully started up before the configured unit is started.\n\nWhen two units with an ordering dependency between them are shut down, the inverse of the start-up order is applied. I.e. if a unit is configured with `After=` on another unit, the former is stopped before the latter if both are shut down. Given two units with any ordering dependency between them, if one unit is shut down and the other is started up, the shutdown is ordered before the start-up. It doesn't matter if the ordering dependency is `After=` or `Before=`, in this case. It also doesn't matter which of the two is shut down, as long as one is shut down and the other is started up; the shutdown is ordered before the start-up in all cases. If two units have no ordering dependencies between them, they are shut down or started up simultaneously, and no ordering takes place. It depends on the unit type when precisely a unit has finished starting up. Most importantly, for service units start-up is considered completed for the purpose of `Before=`/`After=` when all its configured start-up commands have been invoked and they either failed or reported start-up success. Note that this does includes `ExecStartPost=` (or `ExecStopPost=` for the shutdown case).\n\nNote that those settings are independent of and orthogonal to the requirement dependencies as configured by `Requires=`, `Wants=`, `Requisite=`, or `BindsTo=`. It is a common pattern to include a unit name in both the `After=` and `Wants=` options, in which case the unit listed will be started before the unit that is configured with these options.\n\nNote that `Before=` dependencies on device units have no effect and are not supported. Devices generally become available as a result of an external hotplug event, and systemd creates the corresponding device unit without delay."],
[4,71,"A space-separated list of one or more units that are activated when this unit enters the \"`failed`\" state. A service unit using `Restart=` enters the failed state only after the start limits are reached."],
[4,72,"A space-separated list of one or more units that are activated when this unit enters the \"`inactive`\" state."],
[4,73,"A space-separated list of one or more units to which reload requests from this unit shall be propagated to, or units from which reload requests shall be propagated to this unit, respectively. Issuing a reload request on a unit will automatically also enqueue reload requests on all units that are linked to it using these two settings."],
[4,74,"A space-separated list of one or more units to which stop requests from this unit shall be propagated to, or units from which stop requests shall be propagated to this unit, respectively. Issuing a stop request on a unit will automatically also enqueue stop requests on all units that are linked to it using these two settings."],
[4,75,"For units that start processes (such as service units), lists one or more other units whose network and/or temporary file namespace to join. This only applies to unit types which support the `PrivateNetwork=`, `NetworkNamespacePath=`, `PrivateIPC=`, `IPCNamespacePath=`, and `PrivateTmp=` directives (see [systemd.exec(5)](systemd.exec.html#) for details). If a unit that has this setting set is started, its processes will see the same `/tmp/`, `/var/tmp/`, IPC namespace and network namespace as one listed unit that is started. If multiple listed units are already started, it is not defined which namespace is joined. Note that this setting only has an effect if `PrivateNetwork=`/`NetworkNamespacePath=`, `PrivateIPC=`/`IPCNamespacePath=` and/or `PrivateTmp=` is enabled for both the unit that joins the namespace and the unit whose namespace is joined."],
[4,76,"Takes a space-separated list of absolute paths. Automatically adds dependencies of type `Requires=` and `After=` for all mount units required to access the specified path.\n\nMount points marked with `noauto` are not mounted automatically through `local-fs.target`, but are still honored for the purposes of this option, i.e. they will be pulled in by this unit."],
[4,77,"Takes a value of \"`fail`\", \"`replace`\", \"`replace-irreversibly`\", \"`isolate`\", \"`flush`\", \"`ignore-dependencies`\" or \"`ignore-requirements`\". Defaults to \"`replace`\". Specifies how the units listed in `OnFailure=` will be enqueued. See [systemctl(1)](systemctl.html#)'s `--job-mode=` option for details on the possible values. If this is set to \"`isolate`\", only a single unit may be listed in `OnFailure=`."],
[4,78,"Takes a boolean argument. If `true`, this unit will not be stopped when isolating another unit. Defaults to `false` for service, target, socket, timer, and path units, and `true` for slice, scope, device, swap, mount, and automount units."],
[4,79,"Takes a boolean argument. If `true`, this unit will be stopped when it is no longer used. Note that, in order to minimize the work to be executed, systemd will not stop units by default unless they are conflicting with other units, or the user explicitly requested their shut down. If this option is set, a unit will be automatically cleaned up if no other active unit requires it. Defaults to `false`."],
[4,80,"Takes a boolean argument. If `true`, this unit can only be activated or deactivated indirectly. In this case, explicit start-up or termination requested by the user is denied, however if it is started or stopped as a dependency of another unit, start-up or termination will succeed. This is mostly a safety feature to ensure that the user does not accidentally activate units that are not intended to be activated explicitly, and not accidentally deactivate units that are not intended to be deactivated. These options default to `false`."],
[4,81,"Takes a boolean argument. If `true`, this unit may be used with the **systemctl isolate** command. Otherwise, this will be refused. It probably is a good idea to leave this disabled except for target units that shall be used similar to runlevels in SysV init systems, just as a precaution to avoid unusable system states. This option defaults to `false`."],
[4,82,"Takes a boolean argument. If `yes`, (the default), a few default dependencies will implicitly be created for the unit. The actual dependencies created depend on the unit type. For example, for service units, these dependencies ensure that the service is started only after basic system initialization is completed and is properly terminated on system shutdown. See the respective man pages for details. Generally, only services involved with early boot or late shutdown should set this option to `no`. It is highly recommended to leave this option enabled for the majority of common units. If set to `no`, this option does not disable all implicit dependencies, just non-essential ones."],
[4,83,"Tweaks the \"garbage collection\" algorithm for this unit. Takes one of `inactive` or `inactive-or-failed`. If set to `inactive` the unit will be unloaded if it is in the `inactive` state and is not referenced by clients, jobs or other units â€” however it is not unloaded if it is in the `failed` state. In `failed` mode, failed units are not unloaded until the user invoked **systemctl reset-failed** on them to reset the `failed` state, or an equivalent command. This behaviour is altered if this option is set to `inactive-or-failed`: in this case the unit is unloaded even if the unit is in a `failed` state, and thus an explicitly resetting of the `failed` state is not necessary. Note that if this mode is used unit results (such as exit codes, exit signals, consumed resources, â€¦) are flushed out immediately after the unit completed, except for what is stored in the logging subsystem. Defaults to `inactive`."],
[4,84,"Configure the action to take when the unit stops and enters a failed state or inactive state. Takes one of `none`, `reboot`, `reboot-force`, `reboot-immediate`, `poweroff`, `poweroff-force`, `poweroff-immediate`, `exit`, and `exit-force`. In system mode, all options are allowed. In user mode, only `none`, `exit`, and `exit-force` are allowed. Both options default to `none`.\n\nIf `none` is set, no action will be triggered. `reboot` causes a reboot following the normal shutdown procedure (i.e. equivalent to **systemctl reboot**). `reboot-force` causes a forced reboot which will terminate all processes forcibly but should cause no dirty file systems on reboot (i.e. equivalent to **systemctl reboot -f**) and `reboot-immediate` causes immediate execution of the [reboot(2)](http://man7.org/linux/man-pages/man2/reboot.2.html) system call, which might result in data loss (i.e. equivalent to **systemctl reboot -ff**). Similarly, `poweroff`, `poweroff-force`, `poweroff-immediate` have the effect of powering down the system with similar semantics. `exit` causes the manager to exit following the normal shutdown procedure, and `exit-force` causes it terminate without shutting down services. When `exit` or `exit-force` is used by default the exit status of the main process of the unit (if this applies) is returned from the service manager. However, this may be overridden with `FailureActionExitStatus=`/`SuccessActionExitStatus=`, see below."],
[4,85,"Controls the exit status to propagate back to an invoking container manager (in case of a system service) or service manager (in case of a user manager) when the `FailureAction=`/`SuccessAction=` are set to `exit` or `exit-force` and the action is triggered. By default the exit status of the main process of the triggering unit (if this applies) is propagated. Takes a value in the range 0â€¦255 or the empty string to request default behaviour."],
[4,86,"`JobTimeoutSec=` specifies a timeout for the whole job that starts running when the job is queued. `JobRunningTimeoutSec=` specifies a timeout that starts running when the queued job is actually started. If either limit is reached, the job will be cancelled, the unit however will not change state or even enter the \"`failed`\" mode.\n\nBoth settings take a time span with the default unit of seconds, but other units may be specified, see [systemd.time(5)](systemd.time.html#). The default is \"`infinity`\" (job timeouts disabled), except for device units where `JobRunningTimeoutSec=` defaults to `DefaultTimeoutStartSec=`.\n\nNote: these timeouts are independent from any unit-specific timeouts (for example, the timeout set with `TimeoutStartSec=` in service units). The job timeout has no effect on the unit itself. Or in other words: unit-specific timeouts are useful to abort unit state changes, and revert them. The job timeout set with this option however is useful to abort only the job waiting for the unit state to change."],
[4,87,"`JobTimeoutAction=` optionally configures an additional action to take when the timeout is hit, see description of `JobTimeoutSec=` and `JobRunningTimeoutSec=` above. It takes the same values as `StartLimitAction=`. Defaults to `none`.\n\n`JobTimeoutRebootArgument=` configures an optional reboot string to pass to the [reboot(2)](http://man7.org/linux/man-pages/man2/reboot.2.html) system call."],
[4,88,"Configure unit start rate limiting. Units which are started more than _`burst`_ times within an _`interval`_ time span are not permitted to start any more. Use `StartLimitIntervalSec=` to configure the checking interval and `StartLimitBurst=` to configure how many starts per interval are allowed.\n\n_`interval`_ is a time span with the default unit of seconds, but other units may be specified, see [systemd.time(5)](systemd.time.html#). Defaults to `DefaultStartLimitIntervalSec=` in manager configuration file, and may be set to 0 to disable any kind of rate limiting. _`burst`_ is a number and defaults to `DefaultStartLimitBurst=` in manager configuration file.\n\nThese configuration options are particularly useful in conjunction with the service setting `Restart=` (see [systemd.service(5)](systemd.service.html#)); however, they apply to all kinds of starts (including manual), not just those triggered by the `Restart=` logic.\n\nNote that units which are configured for `Restart=`, and which reach the start limit are not attempted to be restarted anymore; however, they may still be restarted manually or from a timer or socket at a later point, after the _`interval`_ has passed. From that point on, the restart logic is activated again. **systemctl reset-failed** will cause the restart rate counter for a service to be flushed, which is useful if the administrator wants to manually start a unit and the start limit interferes with that. Rate-limiting is enforced after any unit condition checks are executed, and hence unit activations with failing conditions do not count towards the rate limit.\n\nWhen a unit is unloaded due to the garbage collection logic (see above) its rate limit counters are flushed out too. This means that configuring start rate limiting for a unit that is not referenced continuously has no effect.\n\nThis setting does not apply to slice, target, device, and scope units, since they are unit types whose activation may either never fail, or may succeed only a single time."],
[4,89,"Configure an additional action to take if the rate limit configured with `StartLimitIntervalSec=` and `StartLimitBurst=` is hit. Takes the same values as the `FailureAction=`/`SuccessAction=` settings. If `none` is set, hitting the rate limit will trigger no action except that the start will not be permitted. Defaults to `none`."],
[4,90,"Configure the optional argument for the [reboot(2)](http://man7.org/linux/man-pages/man2/reboot.2.html) system call if `StartLimitAction=` or `FailureAction=` is a reboot action. This works just like the optional argument to **systemctl reboot** command."],
[4,91,"A path to a configuration file this unit has been generated from. This is primarily useful for implementation of generator tools that convert configuration from an external configuration file format into native unit files. This functionality should not be used in normal units."],
[4,92,"Check whether the system is running on a specific architecture. Takes one of \"`x86`\", \"`x86-64`\", \"`ppc`\", \"`ppc-le`\", \"`ppc64`\", \"`ppc64-le`\", \"`ia64`\", \"`parisc`\", \"`parisc64`\", \"`s390`\", \"`s390x`\", \"`sparc`\", \"`sparc64`\", \"`mips`\", \"`mips-le`\", \"`mips64`\", \"`mips64-le`\", \"`alpha`\", \"`arm`\", \"`arm-be`\", \"`arm64`\", \"`arm64-be`\", \"`sh`\", \"`sh64`\", \"`m68k`\", \"`tilegx`\", \"`cris`\", \"`arc`\", \"`arc-be`\", or \"`native`\".\n\nThe architecture is determined from the information returned by [uname(2)](http://man7.org/linux/man-pages/man2/uname.2.html) and is thus subject to [personality(2)](http://man7.org/linux/man-pages/man2/personality.2.html). Note that a `Personality=` setting in the same unit file has no effect on this condition. A special architecture name \"`native`\" is mapped to the architecture the system manager itself is compiled for. The test may be negated by prepending an exclamation mark."],
[4,93,"Check whether the system's firmware is of a certain type. Possible values are: \"`uefi`\" (for systems with EFI), \"`device-tree`\" (for systems with a device tree) and \"`device-tree-compatible(xyz)`\" (for systems with a device tree that is compatible to \"`xyz`\")."],
[4,94,"Check whether the system is executed in a virtualized environment and optionally test whether it is a specific implementation. Takes either boolean value to check if being executed in any virtualized environment, or one of \"`vm`\" and \"`container`\" to test against a generic type of virtualization solution, or one of \"`qemu`\", \"`kvm`\", \"`amazon`\", \"`zvm`\", \"`vmware`\", \"`microsoft`\", \"`oracle`\", \"`powervm`\", \"`xen`\", \"`bochs`\", \"`uml`\", \"`bhyve`\", \"`qnx`\", \"`openvz`\", \"`lxc`\", \"`lxc-libvirt`\", \"`systemd-nspawn`\", \"`docker`\", \"`podman`\", \"`rkt`\", \"`wsl`\", \"`proot`\", \"`pouch`\", \"`acrn`\" to test against a specific implementation, or \"`private-users`\" to check whether we are running in a user namespace. See [systemd-detect-virt(1)](systemd-detect-virt.html#) for a full list of known virtualization technologies and their identifiers. If multiple virtualization technologies are nested, only the innermost is considered. The test may be negated by prepending an exclamation mark."],
[4,95,"`ConditionHost=` may be used to match against the hostname or machine ID of the host. This either takes a hostname string (optionally with shell style globs) which is tested against the locally set hostname as returned by [gethostname(2)](http://man7.org/linux/man-pages/man2/gethostname.2.html), or a machine ID formatted as string (see [machine-id(5)](machine-id.html#)). The test may be negated by prepending an exclamation mark."],
[4,96,"`ConditionKernelCommandLine=` may be used to check whether a specific kernel command line option is set (or if prefixed with the exclamation mark â€” unset). The argument must either be a single word, or an assignment (i.e. two words, separated by \"`=`\"). In the former case the kernel command line is searched for the word appearing as is, or as left hand side of an assignment. In the latter case, the exact assignment is looked for with right and left hand side matching. This operates on the kernel command line communicated to userspace via `/proc/cmdline`, except when the service manager is invoked as payload of a container manager, in which case the command line of `PID 1` is used instead (i.e. `/proc/1/cmdline`)."],
[4,97,"`ConditionKernelVersion=` may be used to check whether the kernel version (as reported by **uname -r**) matches a certain expression (or if prefixed with the exclamation mark does not match it). The argument must be a list of (potentially quoted) expressions. For each of the expressions, if it starts with one of \"`<`\", \"`<=`\", \"`=`\", \"`!=`\", \"`>=`\", \"`>`\" a relative version comparison is done, otherwise the specified string is matched with shell-style globs.\n\nNote that using the kernel version string is an unreliable way to determine which features are supported by a kernel, because of the widespread practice of backporting drivers, features, and fixes from newer upstream kernels into older versions provided by distributions. Hence, this check is inherently unportable and should not be used for units which may be used on different distributions."],
[4,98,"`ConditionEnvironment=` may be used to check whether a specific environment variable is set (or if prefixed with the exclamation mark â€” unset) in the service manager's environment block. The argument may be a single word, to check if the variable with this name is defined in the environment block, or an assignment (\"``_`name`_=_`value`_``\"), to check if the variable with this exact value is defined. Note that the environment block of the service manager itself is checked, i.e. not any variables defined with `Environment=` or `EnvironmentFile=`, as described above. This is particularly useful when the service manager runs inside a containerized environment or as per-user service manager, in order to check for variables passed in by the enclosing container manager or PAM."],
[4,99,"`ConditionSecurity=` may be used to check whether the given security technology is enabled on the system. Currently, the recognized values are \"`selinux`\", \"`apparmor`\", \"`tomoyo`\", \"`ima`\", \"`smack`\", \"`audit`\", \"`uefi-secureboot`\" and \"`tpm2`\". The test may be negated by prepending an exclamation mark."],
[4,100,"Check whether the given capability exists in the capability bounding set of the service manager (i.e. this does not check whether capability is actually available in the permitted or effective sets, see [capabilities(7)](http://man7.org/linux/man-pages/man7/capabilities.7.html) for details). Pass a capability name such as \"`CAP_MKNOD`\", possibly prefixed with an exclamation mark to negate the check."],
[4,101,"Check whether the system has AC power, or is exclusively battery powered at the time of activation of the unit. This takes a boolean argument. If set to \"`true`\", the condition will hold only if at least one AC connector of the system is connected to a power source, or if no AC connectors are known. Conversely, if set to \"`false`\", the condition will hold only if there is at least one AC connector known and all AC connectors are disconnected from a power source."],
[4,102,"Takes one of `/var/` or `/etc/` as argument, possibly prefixed with a \"`!`\" (to invert the condition). This condition may be used to conditionalize units on whether the specified directory requires an update because `/usr/`'s modification time is newer than the stamp file `.updated` in the specified directory. This is useful to implement offline updates of the vendor operating system resources in `/usr/` that require updating of `/etc/` or `/var/` on the next following boot. Units making use of this condition should order themselves before [systemd-update-done.service(8)](systemd-update-done.service.html#), to make sure they run before the stamp file's modification time gets reset indicating a completed update.\n\nIf the `systemd.condition-needs-update=` option is specified on the kernel command line (taking a boolean), it will override the result of this condition check, taking precedence over any file modification time checks. If the kernel command line option is used, `systemd-update-done.service` will not have immediate effect on any following `ConditionNeedsUpdate=` checks, until the system is rebooted where the kernel command line option is not specified anymore.\n\nNote that to make this scheme effective, the timestamp of `/usr/` should be explicitly updated after its contents are modified. The kernel will automatically update modification timestamp on a directory only when immediate children of a directory are modified; an modification of nested files will not automatically result in mtime of `/usr/` being updated.\n\nAlso note that if the update method includes a call to execute appropriate post-update steps itself, it should not touch the timestamp of `/usr/`. In a typical distribution packaging scheme, packages will do any required update steps as part of the installation or upgrade, to make package contents immediately usable. `ConditionNeedsUpdate=` should be used with other update mechanisms where such an immediate update does not happen."],
[4,103,"Takes a boolean argument. This condition may be used to conditionalize units on whether the system is booting up for the first time. This roughly means that `/etc/` is unpopulated (for details, see \"First Boot Semantics\" in [machine-id(5)](machine-id.html#)). This may be used to populate `/etc/` on the first boot after factory reset, or when a new system instance boots up for the first time.\n\nFor robustness, units with `ConditionFirstBoot=yes` should order themselves before `first-boot-complete.target` and pull in this passive target with `Wants=`. This ensures that in a case of an aborted first boot, these units will be re-run during the next system startup.\n\nIf the `systemd.condition-first-boot=` option is specified on the kernel command line (taking a boolean), it will override the result of this condition check, taking precedence over `/etc/machine-id` existence checks."],
[4,104,"Check for the existence of a file. If the specified absolute path name does not exist, the condition will fail. If the absolute path name passed to `ConditionPathExists=` is prefixed with an exclamation mark (\"`!`\"), the test is negated, and the unit is only started if the path does not exist."],
[4,105,"`ConditionPathExistsGlob=` is similar to `ConditionPathExists=`, but checks for the existence of at least one file or directory matching the specified globbing pattern."],
[4,106,"`ConditionPathIsDirectory=` is similar to `ConditionPathExists=` but verifies that a certain path exists and is a directory."],
[4,107,"`ConditionPathIsSymbolicLink=` is similar to `ConditionPathExists=` but verifies that a certain path exists and is a symbolic link."],
[4,108,"`ConditionPathIsMountPoint=` is similar to `ConditionPathExists=` but verifies that a certain path exists and is a mount point."],
[4,109,"`ConditionPathIsReadWrite=` is similar to `ConditionPathExists=` but verifies that the underlying file system is readable and writable (i.e. not mounted read-only)."],
[4,110,"`ConditionPathIsEncrypted=` is similar to `ConditionPathExists=` but verifies that the underlying file system's backing block device is encrypted using dm-crypt/LUKS. Note that this check does not cover ext4 per-directory encryption, and only detects block level encryption. Moreover, if the specified path resides on a file system on top of a loopback block device, only encryption above the loopback device is detected. It is not detected whether the file system backing the loopback block device is encrypted."],
[4,111,"`ConditionDirectoryNotEmpty=` is similar to `ConditionPathExists=` but verifies that a certain path exists and is a non-empty directory."],
[4,112,"`ConditionFileNotEmpty=` is similar to `ConditionPathExists=` but verifies that a certain path exists and refers to a regular file with a non-zero size."],
[4,113,"`ConditionFileIsExecutable=` is similar to `ConditionPathExists=` but verifies that a certain path exists, is a regular file, and marked executable."],
[4,114,"`ConditionUser=` takes a numeric \"`UID`\", a UNIX user name, or the special value \"`@system`\". This condition may be used to check whether the service manager is running as the given user. The special value \"`@system`\" can be used to check if the user id is within the system user range. This option is not useful for system services, as the system manager exclusively runs as the root user, and thus the test result is constant."],
[4,115,"`ConditionGroup=` is similar to `ConditionUser=` but verifies that the service manager's real or effective group, or any of its auxiliary groups, match the specified group or GID. This setting does not support the special value \"`@system`\"."],
[4,116,"Check whether given cgroup controllers (e.g. \"`cpu`\") are available for use on the system or whether the legacy v1 cgroup or the modern v2 cgroup hierarchy is used.\n\nMultiple controllers may be passed with a space separating them; in this case the condition will only pass if all listed controllers are available for use. Controllers unknown to systemd are ignored. Valid controllers are \"`cpu`\", \"`cpuacct`\", \"`io`\", \"`blkio`\", \"`memory`\", \"`devices`\", and \"`pids`\". Even if available in the kernel, a particular controller may not be available if it was disabled on the kernel command line with `cgroup_disable=controller`.\n\nAlternatively, two special strings \"`v1`\" and \"`v2`\" may be specified (without any controller names). \"`v2`\" will pass if the unified v2 cgroup hierarchy is used, and \"`v1`\" will pass if the legacy v1 hierarchy or the hybrid hierarchy are used (see the discussion of `systemd.unified_cgroup_hierarchy` and `systemd.legacy_systemd_cgroup_controller` in [systemd.service(5)](systemd.service.html#) for more information)."],
[4,117,"Verify that the specified amount of system memory is available to the current system. Takes a memory size in bytes as argument, optionally prefixed with a comparison operator \"`<`\", \"`<=`\", \"`=`\", \"`!=`\", \"`>=`\", \"`>`\". On bare-metal systems compares the amount of physical memory in the system with the specified size, adhering to the specified comparison operator. In containers compares the amount of memory assigned to the container instead."],
[4,118,"Verify that the specified number of CPUs is available to the current system. Takes a number of CPUs as argument, optionally prefixed with a comparison operator \"`<`\", \"`<=`\", \"`=`\", \"`!=`\", \"`>=`\", \"`>`\". Compares the number of CPUs in the CPU affinity mask configured of the service manager itself with the specified number, adhering to the specified comparison operator. On physical systems the number of CPUs in the affinity mask of the service manager usually matches the number of physical CPUs, but in special and virtual environments might differ. In particular, in containers the affinity mask usually matches the number of CPUs assigned to the container and not the physically available ones."],
[4,119,"Verify that a given CPU feature is available via the \"`CPUID`\" instruction. This condition only does something on i386 and x86-64 processors. On other processors it is assumed that the CPU does not support the given feature. It checks the leaves \"`1`\", \"`7`\", \"`0x80000001`\", and \"`0x80000007`\". Valid values are: \"`fpu`\", \"`vme`\", \"`de`\", \"`pse`\", \"`tsc`\", \"`msr`\", \"`pae`\", \"`mce`\", \"`cx8`\", \"`apic`\", \"`sep`\", \"`mtrr`\", \"`pge`\", \"`mca`\", \"`cmov`\", \"`pat`\", \"`pse36`\", \"`clflush`\", \"`mmx`\", \"`fxsr`\", \"`sse`\", \"`sse2`\", \"`ht`\", \"`pni`\", \"`pclmul`\", \"`monitor`\", \"`ssse3`\", \"`fma3`\", \"`cx16`\", \"`sse4_1`\", \"`sse4_2`\", \"`movbe`\", \"`popcnt`\", \"`aes`\", \"`xsave`\", \"`osxsave`\", \"`avx`\", \"`f16c`\", \"`rdrand`\", \"`bmi1`\", \"`avx2`\", \"`bmi2`\", \"`rdseed`\", \"`adx`\", \"`sha_ni`\", \"`syscall`\", \"`rdtscp`\", \"`lm`\", \"`lahf_lm`\", \"`abm`\", \"`constant_tsc`\"."],
[4,120,"Verify that a specific \"`key=value`\" pair is set in the host's [os-release(5)](os-release.html#).\n\nOther than exact matching with \"`=`\", and \"`!=`\", relative comparisons are supported for versioned parameters (e.g. \"`VERSION_ID`\"). The comparator can be one of \"`<`\", \"`<=`\", \"`=`\", \"`!=`\", \"`>=`\" and \"`>`\"."],
[4,121,"Verify that the overall system (memory, CPU or IO) pressure is below or equal to a threshold. This setting takes a threshold value as argument. It can be specified as a simple percentage value, suffixed with \"`%`\", in which case the pressure will be measured as an average over the last five minutes before the attempt to start the unit is performed. Alternatively, the average timespan can also be specified using \"`/`\" as a separator, for example: \"`10%/1min`\". The supported timespans match what the kernel provides, and are limited to \"`10sec`\", \"`1min`\" and \"`5min`\". The \"`full`\" PSI will be checked first, and if not found \"`some`\" will be checked. For more details, see the documentation on [PSI (Pressure Stall Information)](https://www.kernel.org/doc/html/latest/accounting/psi.html) .\n\nOptionally, the threshold value can be prefixed with the slice unit under which the pressure will be checked, followed by a \"`:`\". If the slice unit is not specified, the overall system pressure will be measured, instead of a particular cgroup's."],
[4,122,"Similar to the `ConditionArchitecture=`, `ConditionVirtualization=`, â€¦, condition settings described above, these settings add assertion checks to the start-up of the unit. However, unlike the conditions settings, any assertion setting that is not met results in failure of the start job (which means this is logged loudly). Note that hitting a configured assertion does not cause the unit to enter the \"`failed`\" state (or in fact result in any state change of the unit), it affects only the job queued for it. Use assertion expressions for units that cannot operate when specific requirements are not met, and when this is something the administrator or user should look into."],
[4,123,"A space-separated list of additional names this unit shall be installed under. The names listed here must have the same suffix (i.e. type) as the unit filename. This option may be specified more than once, in which case all listed names are used. At installation time, **systemctl enable** will create symlinks from these names to the unit filename. Note that not all unit types support such alias names, and this setting is not supported for them. Specifically, mount, slice, swap, and automount units do not support aliasing."],
[4,124,"This option may be used more than once, or a space-separated list of unit names may be given. A symbolic link is created in the `.wants/` or `.requires/` directory of each of the listed units when this unit is installed by **systemctl enable**. This has the effect that a dependency of type `Wants=` or `Requires=` is added from the listed unit to the current unit. The primary result is that the current unit will be started when the listed unit is started. See the description of `Wants=` and `Requires=` in the \\[Unit\\] section for details.\n\n**WantedBy=foo.service** in a service `bar.service` is mostly equivalent to **Alias=foo.service.wants/bar.service** in the same file. In case of template units, **systemctl enable** must be called with an instance name, and this instance will be added to the `.wants/` or `.requires/` list of the listed unit. E.g. **WantedBy=getty.target** in a service `getty@.service` will result in **systemctl enable getty@tty2.service** creating a `getty.target.wants/getty@tty2.service` link to `getty@.service`."],
[4,125,"Additional units to install/deinstall when this unit is installed/deinstalled. If the user requests installation/deinstallation of a unit with this option configured, **systemctl enable** and **systemctl disable** will automatically install/uninstall units listed in this option as well.\n\nThis option may be used more than once, or a space-separated list of unit names may be given."],
[4,126,"In template unit files, this specifies for which instance the unit shall be enabled if the template is enabled without any explicitly set instance. This option has no effect in non-template unit files. The specified string must be usable as instance identifier."],
[2,"After","",70,3],
[2,"Alias","",123,3],
[2,"AllowIsolate","",81,3],
[2,"Also","",125,3],
[2,"AssertACPower","",122,3],
[2,"AssertArchitecture","",122,3],
[2,"AssertCPUPressure","",122,3],
[2,"AssertCPUs","",122,3],
[2,"AssertCapability","",122,3],
[2,"AssertControlGroupController","",122,3],
[2,"AssertDirectoryNotEmpty","",122,3],
[2,"AssertEnvironment","",122,3],
[2,"AssertFileIsExecutable","",122,3],
[2,"AssertFileNotEmpty","",122,3],
[2,"AssertFirstBoot","",122,3],
[2,"AssertGroup","",122,3],
[2,"AssertHost","",122,3],
[2,"AssertIOPressure","",122,3],
[2,"AssertKernelCommandLine","",122,3],
[2,"AssertKernelVersion","",122,3],
[2,"AssertMemory","",122,3],
[2,"AssertMemoryPressure","",122,3],
[2,"AssertNeedsUpdate","",122,3],
[2,"AssertOSRelease","",122,3],
[2,"AssertPathExists","",122,3],
[2,"AssertPathExistsGlob","",122,3],
[2,"AssertPathIsDirectory","",122,3],
[2,"AssertPathIsEncrypted","",122,3],
[2,"AssertPathIsMountPoint","",122,3],
[2,"AssertPathIsReadWrite","",122,3],
[2,"AssertPathIsSymbolicLink","",122,3],
[2,"AssertSecurity","",122,3],
[2,"AssertUser","",122,3],
[2,"AssertVirtualization","",122,3],
[2,"Before","",70,3],
[2,"BindsTo","",66,3],
[2,"CollectMode","",83,3],
[2,"ConditionACPower","",101,3],
[2,"ConditionArchitecture","",92,3],
[2,"ConditionCPUFeature","",119,3],
[2,"ConditionCPUPressure","",121,3],
[2,"ConditionCPUs","",118,3],
[2,"ConditionCapability","",100,3],
[2,"ConditionControlGroupController","",116,3],
[2,"ConditionDirectoryNotEmpty","",111,3],
[2,"ConditionEnvironment","",98,3],
[2,"ConditionFileIsExecutable","",113,3],
[2,"ConditionFileNotEmpty","",112,3],
[2,"ConditionFirmware","",93,3],
[2,"ConditionFirstBoot","",103,3],
[2,"ConditionGroup","",115,3],
[2,"ConditionHost","",95,3],
[2,"ConditionIOPressure","",121,3],
[2,"ConditionKernelCommandLine","",96,3],
[2,"ConditionKernelVersion","",97,3],
[2,"ConditionMemory","",117,3],
[2,"ConditionMemoryPressure","",121,3],
[2,"ConditionNeedsUpdate","",102,3],
[2,"ConditionOSRelease","",120,3],
[2,"ConditionPathExists","",104,3],
[2,"ConditionPathExistsGlob","",105,3],
[2,"ConditionPathIsDirectory","",106,3],
[2,"ConditionPathIsEncrypted","",110,3],
[2,"ConditionPathIsMountPoint","",108,3],
[2,"ConditionPathIsReadWrite","",109,3],
[2,"ConditionPathIsSymbolicLink","",107,3],
[2,"ConditionSecurity","",99,3],
[2,"ConditionUser","",114,3],
[2,"ConditionVirtualization","",94,3],
[2,"Conflicts","",69,3],
[2,"DefaultDependencies","",82,3],
[2,"DefaultInstance","",126,3],
[2,"Description","",61,3],
[2,"Documentation","",62,3],
[2,"FailureAction","",84,3],
[2,"FailureActionExitStatus","",85,3],
[2,"IgnoreOnIsolate","",78,3],
[2,"JobRunningTimeoutSec","",86,3],
[2,"JobTimeoutAction","",87,3],
[2,"JobTimeoutRebootArgument","",87,3],
[2,"JobTimeoutSec","",86,3],
[2,"JoinsNamespaceOf","",75,3],
[2,"OnFailure","",71,3],
[2,"OnFailureJobMode","",77,3],
[2,"OnSuccess","",72,3],
[2,"PartOf","",67,3],
[2,"PropagatesReloadTo","",73,3],
[2,"PropagatesStopTo","",74,3],
[2,"RebootArgument","",90,3],
[2,"RefuseManualStart","",80,3],
[2,"RefuseManualStop","",80,3],
[2,"ReloadPropagatedFrom","",73,3],
[2,"RequiredBy","",124,3],
[2,"Requires","",64,3],
[2,"RequiresMountsFor","",76,3],
[2,"Requisite","",65,3],
[2,"SourcePath","",91,3],
[2,"StartLimitAction","",89,3],
[2,"StartLimitBurst","burst",88,3],
[2,"StartLimitIntervalSec","interval",88,3],
[2,"StopPropagatedFrom","",74,3],
[2,"StopWhenUnneeded","",79,3],
[2,"SuccessAction","",84,3],
[2,"SuccessActionExitStatus","",85,3],
[2,"Upholds","",68,3],
[2,"WantedBy","",124,3],
[2,"Wants","",63,3],
[3,4,"systemd.resource-control(5)","systemd.resource-control â€” Resource control unit settings","systemd.resource-control.html"],
[4,127,"`CPUWeight=` and `StartupCPUWeight=` replace `CPUShares=` and `StartupCPUShares=`, respectively.\n\nThe \"`cpuacct`\" controller does not exist separately on the unified hierarchy."],
[4,128,"`MemoryMax=` replaces `MemoryLimit=`. `MemoryLow=` and `MemoryHigh=` are effective only on unified hierarchy."],
[4,129,"\"`IO`\"-prefixed settings are a superset of and replace \"`BlockIO`\"-prefixed ones. On unified hierarchy, IO resource control also applies to buffered writes."],
[4,130,"Turn on CPU usage accounting for this unit. Takes a boolean argument. Note that turning on CPU accounting for one unit will also implicitly turn it on for all units contained in the same slice and for all its parent slices and the units contained therein. The system default for this setting may be controlled with `DefaultCPUAccounting=` in [systemd-system.conf(5)](systemd-system.conf.html#)."],
[4,131,"Assign the specified CPU time weight to the processes executed, if the unified control group hierarchy is used on the system. These options take an integer value and control the \"`cpu.weight`\" control group attribute. The allowed range is 1 to 10000. Defaults to 100. For details about this control group attribute, see [Control Groups v2](https://www.kernel.org/doc/html/latest/admin-guide/cgroup-v2.html) and [CFS Scheduler](https://www.kernel.org/doc/html/latest/scheduler/sched-design-CFS.html). The available CPU time is split up among all units within one slice relative to their CPU time weight. A higher weight means more CPU time, a lower weight means less.\n\nWhile `StartupCPUWeight=` applies to the startup and shutdown phases of the system, `CPUWeight=` applies to normal runtime of the system, and if the former is not set also to the startup and shutdown phases. Using `StartupCPUWeight=` allows prioritizing specific services at boot-up and shutdown differently than during normal runtime.\n\nThese settings replace `CPUShares=` and `StartupCPUShares=`."],
[4,132,"Assign the specified CPU time quota to the processes executed. Takes a percentage value, suffixed with \"%\". The percentage specifies how much CPU time the unit shall get at maximum, relative to the total CPU time available on one CPU. Use values > 100% for allotting CPU time on more than one CPU. This controls the \"`cpu.max`\" attribute on the unified control group hierarchy and \"`cpu.cfs_quota_us`\" on legacy. For details about these control group attributes, see [Control Groups v2](https://www.kernel.org/doc/html/latest/admin-guide/cgroup-v2.html) and [sched-bwc.txt](https://www.kernel.org/doc/Documentation/scheduler/sched-bwc.txt).\n\nExample: `CPUQuota=20%` ensures that the executed processes will never get more than 20% CPU time on one CPU."],
[4,133,"Assign the duration over which the CPU time quota specified by `CPUQuota=` is measured. Takes a time duration value in seconds, with an optional suffix such as \"ms\" for milliseconds (or \"s\" for seconds.) The default setting is 100ms. The period is clamped to the range supported by the kernel, which is \\[1ms, 1000ms\\]. Additionally, the period is adjusted up so that the quota interval is also at least 1ms. Setting `CPUQuotaPeriodSec=` to an empty value resets it to the default.\n\nThis controls the second field of \"`cpu.max`\" attribute on the unified control group hierarchy and \"`cpu.cfs_period_us`\" on legacy. For details about these control group attributes, see [Control Groups v2](https://www.kernel.org/doc/html/latest/admin-guide/cgroup-v2.html) and [CFS Scheduler](https://www.kernel.org/doc/html/latest/scheduler/sched-design-CFS.html).\n\nExample: `CPUQuotaPeriodSec=10ms` to request that the CPU quota is measured in periods of 10ms."],
[4,134,"Restrict processes to be executed on specific CPUs. Takes a list of CPU indices or ranges separated by either whitespace or commas. CPU ranges are specified by the lower and upper CPU indices separated by a dash.\n\nSetting `AllowedCPUs=` or `StartupAllowedCPUs=` doesn't guarantee that all of the CPUs will be used by the processes as it may be limited by parent units. The effective configuration is reported as `EffectiveCPUs=`.\n\nWhile `StartupAllowedCPUs=` applies to the startup and shutdown phases of the system, `AllowedCPUs=` applies to normal runtime of the system, and if the former is not set also to the startup and shutdown phases. Using `StartupAllowedCPUs=` allows prioritizing specific services at boot-up and shutdown differently than during normal runtime.\n\nThis setting is supported only with the unified control group hierarchy."],
[4,135,"Restrict processes to be executed on specific memory NUMA nodes. Takes a list of memory NUMA nodes indices or ranges separated by either whitespace or commas. Memory NUMA nodes ranges are specified by the lower and upper NUMA nodes indices separated by a dash.\n\nSetting `AllowedMemoryNodes=` or `StartupAllowedMemoryNodes=` doesn't guarantee that all of the memory NUMA nodes will be used by the processes as it may be limited by parent units. The effective configuration is reported as `EffectiveMemoryNodes=`.\n\nWhile `StartupAllowedMemoryNodes=` applies to the startup and shutdown phases of the system, `AllowedMemoryNodes=` applies to normal runtime of the system, and if the former is not set also to the startup and shutdown phases. Using `StartupAllowedMemoryNodes=` allows prioritizing specific services at boot-up and shutdown differently than during normal runtime.\n\nThis setting is supported only with the unified control group hierarchy."],
[4,136,"Turn on process and kernel memory accounting for this unit. Takes a boolean argument. Note that turning on memory accounting for one unit will also implicitly turn it on for all units contained in the same slice and for all its parent slices and the units contained therein. The system default for this setting may be controlled with `DefaultMemoryAccounting=` in [systemd-system.conf(5)](systemd-system.conf.html#)."],
[4,137,"Specify the memory usage protection of the executed processes in this unit. When reclaiming memory, the unit is treated as if it was using less memory resulting in memory to be preferentially reclaimed from unprotected units. Using `MemoryLow=` results in a weaker protection where memory may still be reclaimed to avoid invoking the OOM killer in case there is no other reclaimable memory.\n\nFor a protection to be effective, it is generally required to set a corresponding allocation on all ancestors, which is then distributed between children (with the exception of the root slice). Any `MemoryMin=` or `MemoryLow=` allocation that is not explicitly distributed to specific children is used to create a shared protection for all children. As this is a shared protection, the children will freely compete for the memory.\n\nTakes a memory size in bytes. If the value is suffixed with K, M, G or T, the specified memory size is parsed as Kilobytes, Megabytes, Gigabytes, or Terabytes (with the base 1024), respectively. Alternatively, a percentage value may be specified, which is taken relative to the installed physical memory on the system. If assigned the special value \"`infinity`\", all available memory is protected, which may be useful in order to always inherit all of the protection afforded by ancestors. This controls the \"`memory.min`\" or \"`memory.low`\" control group attribute. For details about this control group attribute, see [Memory Interface Files](https://www.kernel.org/doc/html/latest/admin-guide/cgroup-v2.html#memory-interface-files).\n\nThis setting is supported only if the unified control group hierarchy is used and disables `MemoryLimit=`.\n\nUnits may have their children use a default \"`memory.min`\" or \"`memory.low`\" value by specifying `DefaultMemoryMin=` or `DefaultMemoryLow=`, which has the same semantics as `MemoryMin=` and `MemoryLow=`. This setting does not affect \"`memory.min`\" or \"`memory.low`\" in the unit itself. Using it to set a default child allocation is only useful on kernels older than 5.7, which do not support the \"`memory_recursiveprot`\" cgroup2 mount option."],
[4,138,"Specify the throttling limit on memory usage of the executed processes in this unit. Memory usage may go above the limit if unavoidable, but the processes are heavily slowed down and memory is taken away aggressively in such cases. This is the main mechanism to control memory usage of a unit.\n\nTakes a memory size in bytes. If the value is suffixed with K, M, G or T, the specified memory size is parsed as Kilobytes, Megabytes, Gigabytes, or Terabytes (with the base 1024), respectively. Alternatively, a percentage value may be specified, which is taken relative to the installed physical memory on the system. If assigned the special value \"`infinity`\", no memory throttling is applied. This controls the \"`memory.high`\" control group attribute. For details about this control group attribute, see [Memory Interface Files](https://www.kernel.org/doc/html/latest/admin-guide/cgroup-v2.html#memory-interface-files).\n\nThis setting is supported only if the unified control group hierarchy is used and disables `MemoryLimit=`."],
[4,139,"Specify the absolute limit on memory usage of the executed processes in this unit. If memory usage cannot be contained under the limit, out-of-memory killer is invoked inside the unit. It is recommended to use `MemoryHigh=` as the main control mechanism and use `MemoryMax=` as the last line of defense.\n\nTakes a memory size in bytes. If the value is suffixed with K, M, G or T, the specified memory size is parsed as Kilobytes, Megabytes, Gigabytes, or Terabytes (with the base 1024), respectively. Alternatively, a percentage value may be specified, which is taken relative to the installed physical memory on the system. If assigned the special value \"`infinity`\", no memory limit is applied. This controls the \"`memory.max`\" control group attribute. For details about this control group attribute, see [Memory Interface Files](https://www.kernel.org/doc/html/latest/admin-guide/cgroup-v2.html#memory-interface-files).\n\nThis setting replaces `MemoryLimit=`."],
[4,140,"Specify the absolute limit on swap usage of the executed processes in this unit.\n\nTakes a swap size in bytes. If the value is suffixed with K, M, G or T, the specified swap size is parsed as Kilobytes, Megabytes, Gigabytes, or Terabytes (with the base 1024), respectively. If assigned the special value \"`infinity`\", no swap limit is applied. This controls the \"`memory.swap.max`\" control group attribute. For details about this control group attribute, see [Memory Interface Files](https://www.kernel.org/doc/html/latest/admin-guide/cgroup-v2.html#memory-interface-files).\n\nThis setting is supported only if the unified control group hierarchy is used and disables `MemoryLimit=`."],
[4,141,"Turn on task accounting for this unit. Takes a boolean argument. If enabled, the system manager will keep track of the number of tasks in the unit. The number of tasks accounted this way includes both kernel threads and userspace processes, with each thread counting individually. Note that turning on tasks accounting for one unit will also implicitly turn it on for all units contained in the same slice and for all its parent slices and the units contained therein. The system default for this setting may be controlled with `DefaultTasksAccounting=` in [systemd-system.conf(5)](systemd-system.conf.html#)."],
[4,142,"Specify the maximum number of tasks that may be created in the unit. This ensures that the number of tasks accounted for the unit (see above) stays below a specific limit. This either takes an absolute number of tasks or a percentage value that is taken relative to the configured maximum number of tasks on the system. If assigned the special value \"`infinity`\", no tasks limit is applied. This controls the \"`pids.max`\" control group attribute. For details about this control group attribute, see [Process Number Controller](https://www.kernel.org/doc/html/latest/admin-guide/cgroup-v1/pids.html).\n\nThe system default for this setting may be controlled with `DefaultTasksMax=` in [systemd-system.conf(5)](systemd-system.conf.html#)."],
[4,143,"Turn on Block I/O accounting for this unit, if the unified control group hierarchy is used on the system. Takes a boolean argument. Note that turning on block I/O accounting for one unit will also implicitly turn it on for all units contained in the same slice and all for its parent slices and the units contained therein. The system default for this setting may be controlled with `DefaultIOAccounting=` in [systemd-system.conf(5)](systemd-system.conf.html#).\n\nThis setting replaces `BlockIOAccounting=` and disables settings prefixed with `BlockIO` or `StartupBlockIO`."],
[4,144,"Set the default overall block I/O weight for the executed processes, if the unified control group hierarchy is used on the system. Takes a single weight value (between 1 and 10000) to set the default block I/O weight. This controls the \"`io.weight`\" control group attribute, which defaults to 100. For details about this control group attribute, see [IO Interface Files](https://www.kernel.org/doc/html/latest/admin-guide/cgroup-v2.html#io-interface-files). The available I/O bandwidth is split up among all units within one slice relative to their block I/O weight. A higher weight means more I/O bandwidth, a lower weight means less.\n\nWhile `StartupIOWeight=` applies to the startup and shutdown phases of the system, `IOWeight=` applies to the later runtime of the system, and if the former is not set also to the startup and shutdown phases. This allows prioritizing specific services at boot-up and shutdown differently than during runtime.\n\nThese settings replace `BlockIOWeight=` and `StartupBlockIOWeight=` and disable settings prefixed with `BlockIO` or `StartupBlockIO`."],
[4,145,"Set the per-device overall block I/O weight for the executed processes, if the unified control group hierarchy is used on the system. Takes a space-separated pair of a file path and a weight value to specify the device specific weight value, between 1 and 10000. (Example: \"`/dev/sda 1000`\"). The file path may be specified as path to a block device node or as any other file, in which case the backing block device of the file system of the file is determined. This controls the \"`io.weight`\" control group attribute, which defaults to 100. Use this option multiple times to set weights for multiple devices. For details about this control group attribute, see [IO Interface Files](https://www.kernel.org/doc/html/latest/admin-guide/cgroup-v2.html#io-interface-files).\n\nThis setting replaces `BlockIODeviceWeight=` and disables settings prefixed with `BlockIO` or `StartupBlockIO`.\n\nThe specified device node should reference a block device that has an I/O scheduler associated, i.e. should not refer to partition or loopback block devices, but to the originating, physical device. When a path to a regular file or directory is specified it is attempted to discover the correct originating device backing the file system of the specified path. This works correctly only for simpler cases, where the file system is directly placed on a partition or physical block device, or where simple 1:1 encryption using dm-crypt/LUKS is used. This discovery does not cover complex storage and in particular RAID and volume management storage devices."],
[4,146,"Set the per-device overall block I/O bandwidth maximum limit for the executed processes, if the unified control group hierarchy is used on the system. This limit is not work-conserving and the executed processes are not allowed to use more even if the device has idle capacity. Takes a space-separated pair of a file path and a bandwidth value (in bytes per second) to specify the device specific bandwidth. The file path may be a path to a block device node, or as any other file in which case the backing block device of the file system of the file is used. If the bandwidth is suffixed with K, M, G, or T, the specified bandwidth is parsed as Kilobytes, Megabytes, Gigabytes, or Terabytes, respectively, to the base of 1000. (Example: \"/dev/disk/by-path/pci-0000:00:1f.2-scsi-0:0:0:0 5M\"). This controls the \"`io.max`\" control group attributes. Use this option multiple times to set bandwidth limits for multiple devices. For details about this control group attribute, see [IO Interface Files](https://www.kernel.org/doc/html/latest/admin-guide/cgroup-v2.html#io-interface-files).\n\nThese settings replace `BlockIOReadBandwidth=` and `BlockIOWriteBandwidth=` and disable settings prefixed with `BlockIO` or `StartupBlockIO`.\n\nSimilar restrictions on block device discovery as for `IODeviceWeight=` apply, see above."],
[4,147,"Set the per-device overall block I/O IOs-Per-Second maximum limit for the executed processes, if the unified control group hierarchy is used on the system. This limit is not work-conserving and the executed processes are not allowed to use more even if the device has idle capacity. Takes a space-separated pair of a file path and an IOPS value to specify the device specific IOPS. The file path may be a path to a block device node, or as any other file in which case the backing block device of the file system of the file is used. If the IOPS is suffixed with K, M, G, or T, the specified IOPS is parsed as KiloIOPS, MegaIOPS, GigaIOPS, or TeraIOPS, respectively, to the base of 1000. (Example: \"/dev/disk/by-path/pci-0000:00:1f.2-scsi-0:0:0:0 1K\"). This controls the \"`io.max`\" control group attributes. Use this option multiple times to set IOPS limits for multiple devices. For details about this control group attribute, see [IO Interface Files](https://www.kernel.org/doc/html/latest/admin-guide/cgroup-v2.html#io-interface-files).\n\nThese settings are supported only if the unified control group hierarchy is used and disable settings prefixed with `BlockIO` or `StartupBlockIO`.\n\nSimilar restrictions on block device discovery as for `IODeviceWeight=` apply, see above."],
[4,148,"Set the per-device average target I/O latency for the executed processes, if the unified control group hierarchy is used on the system. Takes a file path and a timespan separated by a space to specify the device specific latency target. (Example: \"/dev/sda 25ms\"). The file path may be specified as path to a block device node or as any other file, in which case the backing block device of the file system of the file is determined. This controls the \"`io.latency`\" control group attribute. Use this option multiple times to set latency target for multiple devices. For details about this control group attribute, see [IO Interface Files](https://www.kernel.org/doc/html/latest/admin-guide/cgroup-v2.html#io-interface-files).\n\nImplies \"`IOAccounting=yes`\".\n\nThese settings are supported only if the unified control group hierarchy is used.\n\nSimilar restrictions on block device discovery as for `IODeviceWeight=` apply, see above."],
[4,149,"Takes a boolean argument. If true, turns on IPv4 and IPv6 network traffic accounting for packets sent or received by the unit. When this option is turned on, all IPv4 and IPv6 sockets created by any process of the unit are accounted for.\n\nWhen this option is used in socket units, it applies to all IPv4 and IPv6 sockets associated with it (including both listening and connection sockets where this applies). Note that for socket-activated services, this configuration setting and the accounting data of the service unit and the socket unit are kept separate, and displayed separately. No propagation of the setting and the collected statistics is done, in either direction. Moreover, any traffic sent or received on any of the socket unit's sockets is accounted to the socket unit â€” and never to the service unit it might have activated, even if the socket is used by it.\n\nThe system default for this setting may be controlled with `DefaultIPAccounting=` in [systemd-system.conf(5)](systemd-system.conf.html#)."],
[4,150,"Turn on network traffic filtering for IP packets sent and received over `AF_INET` and `AF_INET6` sockets. Both directives take a space separated list of IPv4 or IPv6 addresses, each optionally suffixed with an address prefix length in bits after a \"`/`\" character. If the suffix is omitted, the address is considered a host address, i.e. the filter covers the whole address (32 bits for IPv4, 128 bits for IPv6).\n\nThe access lists configured with this option are applied to all sockets created by processes of this unit (or in the case of socket units, associated with it). The lists are implicitly combined with any lists configured for any of the parent slice units this unit might be a member of. By default both access lists are empty. Both ingress and egress traffic is filtered by these settings. In case of ingress traffic the source IP address is checked against these access lists, in case of egress traffic the destination IP address is checked. The following rules are applied in turn:\n\n*   Access is granted when the checked IP address matches an entry in the `IPAddressAllow=` list.\n    \n*   Otherwise, access is denied when the checked IP address matches an entry in the `IPAddressDeny=` list.\n    \n*   Otherwise, access is granted.\n    \n\nIn order to implement an allow-listing IP firewall, it is recommended to use a `IPAddressDeny=``any` setting on an upper-level slice unit (such as the root slice `-.slice` or the slice containing all system services `system.slice` â€“ see [systemd.special(7)](systemd.special.html#) for details on these slice units), plus individual per-service `IPAddressAllow=` lines permitting network access to relevant services, and only them.\n\nNote that for socket-activated services, the IP access list configured on the socket unit applies to all sockets associated with it directly, but not to any sockets created by the ultimately activated services for it. Conversely, the IP access list configured for the service is not applied to any sockets passed into the service via socket activation. Thus, it is usually a good idea to replicate the IP access lists on both the socket and the service unit. Nevertheless, it may make sense to maintain one list more open and the other one more restricted, depending on the usecase.\n\nIf these settings are used multiple times in the same unit the specified lists are combined. If an empty string is assigned to these settings the specific access list is reset and all previous settings undone.\n\nIn place of explicit IPv4 or IPv6 address and prefix length specifications a small set of symbolic names may be used. The following names are defined:\n\n**TableÂ 1.Â Special address/network names**\n\nSymbolic Name\n\nDefinition\n\nMeaning\n\n`any`\n\n0.0.0.0/0 ::/0\n\nAny host\n\n`localhost`\n\n127.0.0.0/8 ::1/128\n\nAll addresses on the local loopback\n\n`link-local`\n\n169.254.0.0/16 fe80::/64\n\nAll link-local IP addresses\n\n`multicast`\n\n224.0.0.0/4 ff00::/8\n\nAll IP multicasting addresses\n\n  \n\nNote that these settings might not be supported on some systems (for example if eBPF control group support is not enabled in the underlying kernel or container manager). These settings will have no effect in that case. If compatibility with such systems is desired it is hence recommended to not exclusively rely on them for IP security."],
[4,151,"Add custom network traffic filters implemented as BPF programs, applying to all IP packets sent and received over `AF_INET` and `AF_INET6` sockets. Takes an absolute path to a pinned BPF program in the BPF virtual filesystem (`/sys/fs/bpf/`).\n\nThe filters configured with this option are applied to all sockets created by processes of this unit (or in the case of socket units, associated with it). The filters are loaded in addition to filters any of the parent slice units this unit might be a member of as well as any `IPAddressAllow=` and `IPAddressDeny=` filters in any of these units. By default there are no filters specified.\n\nIf these settings are used multiple times in the same unit all the specified programs are attached. If an empty string is assigned to these settings the program list is reset and all previous specified programs ignored.\n\nIf the path _`BPF_FS_PROGRAM_PATH`_ in `IPIngressFilterPath=` assignment is already being handled by `BPFProgram=` ingress hook, e.g. `BPFProgram=``ingress`:_`BPF_FS_PROGRAM_PATH`_, the assignment will be still considered valid and the program will be attached to a cgroup. Same for `IPEgressFilterPath=` path and `egress` hook.\n\nNote that for socket-activated services, the IP filter programs configured on the socket unit apply to all sockets associated with it directly, but not to any sockets created by the ultimately activated services for it. Conversely, the IP filter programs configured for the service are not applied to any sockets passed into the service via socket activation. Thus, it is usually a good idea, to replicate the IP filter programs on both the socket and the service unit, however it often makes sense to maintain one configuration more open and the other one more restricted, depending on the usecase.\n\nNote that these settings might not be supported on some systems (for example if eBPF control group support is not enabled in the underlying kernel or container manager). These settings will fail the service in that case. If compatibility with such systems is desired it is hence recommended to attach your filter manually (requires `Delegate=``yes`) instead of using this setting."],
[4,152,"Add a custom cgroup BPF program.\n\n`BPFProgram=` allows attaching BPF hooks to the cgroup of a systemd unit. (This generalizes the functionality exposed via `IPEgressFilterPath=` for egress and `IPIngressFilterPath=` for ingress.) Cgroup-bpf hooks in the form of BPF programs loaded to the BPF filesystem are attached with cgroup-bpf attach flags determined by the unit. For details about attachment types and flags see [https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git/plain/include/uapi/linux/bpf.h](https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git/plain/include/uapi/linux/bpf.h). For general BPF documentation please refer to [https://www.kernel.org/doc/html/latest/bpf/index.html](https://www.kernel.org/doc/html/latest/bpf/index.html).\n\nThe specification of BPF program consists of a _`type`_ followed by a _`program-path`_ with \"`:`\" as the separator: _`type`_`:`_`program-path`_.\n\n_`type`_ is the string name of BPF attach type also used in **bpftool**. _`type`_ can be one of `egress`, `ingress`, `sock_create`, `sock_ops`, `device`, `bind4`, `bind6`, `connect4`, `connect6`, `post_bind4`, `post_bind6`, `sendmsg4`, `sendmsg6`, `sysctl`, `recvmsg4`, `recvmsg6`, `getsockopt`, `setsockopt`.\n\nSetting `BPFProgram=` to an empty value makes previous assignments ineffective.\n\nMultiple assignments of the same _`type`_:_`program-path`_ value have the same effect as a single assignment: the program with the path _`program-path`_ will be attached to cgroup hook _`type`_ just once.\n\nIf BPF `egress` pinned to _`program-path`_ path is already being handled by `IPEgressFilterPath=`, `BPFProgram=` assignment will be considered valid and `BPFProgram=` will be attached to a cgroup. Similarly for `ingress` hook and `IPIngressFilterPath=` assignment.\n\nBPF programs passed with `BPFProgram=` are attached to the cgroup of a unit with BPF attach flag `multi`, that allows further attachments of the same _`type`_ within cgroup hierarchy topped by the unit cgroup.\n\nExamples:\n\nBPFProgram=egress:/sys/fs/bpf/egress-hook\nBPFProgram=bind6:/sys/fs/bpf/sock-addr-hook"],
[4,153,"Allow or deny binding a socket address to a socket by matching it with the _`bind-rule`_ and applying a corresponding action if there is a match.\n\n_`bind-rule`_ describes socket properties such as _`address-family`_, _`transport-protocol`_ and _`ip-ports`_.\n\n_`bind-rule`_ := { \\[_`address-family`_`:`\\]\\[_`transport-protocol`_`:`\\]\\[_`ip-ports`_\\] | `any` }\n\n_`address-family`_ := { `ipv4` | `ipv6` }\n\n_`transport-protocol`_ := { `tcp` | `udp` }\n\n_`ip-ports`_ := { _`ip-port`_ | _`ip-port-range`_ }\n\nAn optional _`address-family`_ expects `ipv4` or `ipv6` values. If not specified, a rule will be matched for both IPv4 and IPv6 addresses and applied depending on other socket fields, e.g. _`transport-protocol`_, _`ip-port`_.\n\nAn optional _`transport-protocol`_ expects `tcp` or `udp` transport protocol names. If not specified, a rule will be matched for any transport protocol.\n\nAn optional _`ip-port`_ value must lie within 1â€¦65535 interval inclusively, i.e. dynamic port `0` is not allowed. A range of sequential ports is described by _`ip-port-range`_ := _`ip-port-low`_`-`_`ip-port-high`_, where _`ip-port-low`_ is smaller than or equal to _`ip-port-high`_ and both are within 1â€¦65535 inclusively.\n\nA special value `any` can be used to apply a rule to any address family, transport protocol and any port with a positive value.\n\nTo allow multiple rules assign `SocketBindAllow=` or `SocketBindDeny=` multiple times. To clear the existing assignments pass an empty `SocketBindAllow=` or `SocketBindDeny=` assignment.\n\nFor each of `SocketBindAllow=` and `SocketBindDeny=`, maximum allowed number of assignments is `128`.\n\n*   Binding to a socket is allowed when a socket address matches an entry in the `SocketBindAllow=` list.\n    \n*   Otherwise, binding is denied when the socket address matches an entry in the `SocketBindDeny=` list.\n    \n*   Otherwise, binding is allowed.\n    \n\nThe feature is implemented with `cgroup/bind4` and `cgroup/bind6` cgroup-bpf hooks.\n\nExamples:\n\nâ€¦\n# Allow binding IPv6 socket addresses with a port greater than or equal to 10000.\n\\[Service\\]\nSocketBindAllow=ipv6:10000-65535\nSocketBindDeny=any\nâ€¦\n# Allow binding IPv4 and IPv6 socket addresses with 1234 and 4321 ports.\n\\[Service\\]\nSocketBindAllow=1234\nSocketBindAllow=4321\nSocketBindDeny=any\nâ€¦\n# Deny binding IPv6 socket addresses.\n\\[Service\\]\nSocketBindDeny=ipv6\nâ€¦\n# Deny binding IPv4 and IPv6 socket addresses.\n\\[Service\\]\nSocketBindDeny=any\nâ€¦\n# Allow binding only over TCP\n\\[Service\\]\nSocketBindAllow=tcp\nSocketBindDeny=any\nâ€¦\n# Allow binding only over IPv6/TCP\n\\[Service\\]\nSocketBindAllow=ipv6:tcp\nSocketBindDeny=any\nâ€¦\n# Allow binding ports within 10000-65535 range over IPv4/UDP.\n\\[Service\\]\nSocketBindAllow=ipv4:udp:10000-65535\nSocketBindDeny=any\nâ€¦"],
[4,154,"Takes a list of space-separated network interface names. This option restricts the network interfaces that processes of this unit can use. By default processes can only use the network interfaces listed (allow-list). If the first character of the rule is \"`~`\", the effect is inverted: the processes can only use network interfaces not listed (deny-list).\n\nThis option can appear multiple times, in which case the network interface names are merged. If the empty string is assigned the set is reset, all prior assignments will have not effect.\n\nIf you specify both types of this option (i.e. allow-listing and deny-listing), the first encountered will take precedence and will dictate the default action (allow vs deny). Then the next occurrences of this option will add or delete the listed network interface names from the set, depending of its type and the default action.\n\nThe loopback interface (\"lo\") is not treated in any special way, you have to configure it explicitly in the unit file.\n\nExample 1: allow-list\n\nRestrictNetworkInterfaces=eth1\nRestrictNetworkInterfaces=eth2\n\nPrograms in the unit will be only able to use the eth1 and eth2 network interfaces.\n\nExample 2: deny-list\n\nRestrictNetworkInterfaces=~eth1 eth2\n\nPrograms in the unit will be able to use any network interface but eth1 and eth2.\n\nExample 3: mixed\n\nRestrictNetworkInterfaces=eth1 eth2\nRestrictNetworkInterfaces=~eth1\n\nPrograms in the unit will be only able to use the eth2 network interface."],
[4,155,"Control access to specific device nodes by the executed processes. Takes two space-separated strings: a device node specifier followed by a combination of `r`, `w`, `m` to control _r_eading, _w_riting, or creation of the specific device node(s) by the unit (_m_knod), respectively. On cgroup-v1 this controls the \"`devices.allow`\" control group attribute. For details about this control group attribute, see [Device Whitelist Controller](https://www.kernel.org/doc/html/latest/admin-guide/cgroup-v1/devices.html). In the unified cgroup hierarchy this functionality is implemented using eBPF filtering.\n\nWhen access to _all_ physical devices should be disallowed, `PrivateDevices=` may be used instead. See [systemd.exec(5)](systemd.exec.html#).\n\nThe device node specifier is either a path to a device node in the file system, starting with `/dev/`, or a string starting with either \"`char-`\" or \"`block-`\" followed by a device group name, as listed in `/proc/devices`. The latter is useful to allow-list all current and future devices belonging to a specific device group at once. The device group is matched according to filename globbing rules, you may hence use the \"`*`\" and \"`?`\" wildcards. (Note that such globbing wildcards are not available for device node path specifications!) In order to match device nodes by numeric major/minor, use device node paths in the `/dev/char/` and `/dev/block/` directories. However, matching devices by major/minor is generally not recommended as assignments are neither stable nor portable between systems or different kernel versions.\n\nExamples: `/dev/sda5` is a path to a device node, referring to an ATA or SCSI block device. \"`char-pts`\" and \"`char-alsa`\" are specifiers for all pseudo TTYs and all ALSA sound devices, respectively. \"`char-cpu/*`\" is a specifier matching all CPU related device groups.\n\nNote that allow lists defined this way should only reference device groups which are resolvable at the time the unit is started. Any device groups not resolvable then are not added to the device allow list. In order to work around this limitation, consider extending service units with a pair of **After=modprobe@xyz.service** and **Wants=modprobe@xyz.service** lines that load the necessary kernel module implementing the device group if missing. Example:\n\nâ€¦\n\\[Unit\\]\nWants=modprobe@loop.service\nAfter=modprobe@loop.service\n\n\\[Service\\]\nDeviceAllow=block-loop\nDeviceAllow=/dev/loop-control\nâ€¦"],
[4,156,"Control the policy for allowing device access:\n\n`strict`[Â¶](#strict \"Permalink to this term\")\n\nmeans to only allow types of access that are explicitly specified.\n\n`closed`[Â¶](#closed \"Permalink to this term\")\n\nin addition, allows access to standard pseudo devices including `/dev/null`, `/dev/zero`, `/dev/full`, `/dev/random`, and `/dev/urandom`.\n\n`auto`[Â¶](#auto \"Permalink to this term\")\n\nin addition, allows access to all devices if no explicit `DeviceAllow=` is present. This is the default."],
[4,157,"means to only allow types of access that are explicitly specified."],
[4,158,"in addition, allows access to standard pseudo devices including `/dev/null`, `/dev/zero`, `/dev/full`, `/dev/random`, and `/dev/urandom`."],
[4,159,"in addition, allows access to all devices if no explicit `DeviceAllow=` is present. This is the default."],
[4,160,"The name of the slice unit to place the unit in. Defaults to `system.slice` for all non-instantiated units of all unit types (except for slice units themselves see below). Instance units are by default placed in a subslice of `system.slice` that is named after the template name.\n\nThis option may be used to arrange systemd units in a hierarchy of slices each of which might have resource settings applied.\n\nFor units of type slice, the only accepted value for this setting is the parent slice. Since the name of a slice unit implies the parent slice, it is hence redundant to ever set this parameter directly for slice units.\n\nSpecial care should be taken when relying on the default slice assignment in templated service units that have `DefaultDependencies=no` set, see [systemd.service(5)](systemd.service.html#), section \"Default Dependencies\" for details."],
[4,161,"Turns on delegation of further resource control partitioning to processes of the unit. Units where this is enabled may create and manage their own private subhierarchy of control groups below the control group of the unit itself. For unprivileged services (i.e. those using the `User=` setting) the unit's control group will be made accessible to the relevant user. When enabled the service manager will refrain from manipulating control groups or moving processes below the unit's control group, so that a clear concept of ownership is established: the control group tree above the unit's control group (i.e. towards the root control group) is owned and managed by the service manager of the host, while the control group tree below the unit's control group is owned and managed by the unit itself. Takes either a boolean argument or a list of control group controller names. If true, delegation is turned on, and all supported controllers are enabled for the unit, making them available to the unit's processes for management. If false, delegation is turned off entirely (and no additional controllers are enabled). If set to a list of controllers, delegation is turned on, and the specified controllers are enabled for the unit. Note that additional controllers than the ones specified might be made available as well, depending on configuration of the containing slice unit or other units contained in it. Note that assigning the empty string will enable delegation, but reset the list of controllers, all assignments prior to this will have no effect. Defaults to false.\n\nNote that controller delegation to less privileged code is only safe on the unified control group hierarchy. Accordingly, access to the specified controllers will not be granted to unprivileged services on the legacy hierarchy, even when requested.\n\nThe following controller names may be specified: `cpu`, `cpuacct`, `cpuset`, `io`, `blkio`, `memory`, `devices`, `pids`, `bpf-firewall`, and `bpf-devices`.\n\nNot all of these controllers are available on all kernels however, and some are specific to the unified hierarchy while others are specific to the legacy hierarchy. Also note that the kernel might support further controllers, which aren't covered here yet as delegation is either not supported at all for them or not defined cleanly.\n\nFor further details on the delegation model consult [Control Group APIs and Delegation](https://systemd.io/CGROUP_DELEGATION)."],
[4,162,"Disables controllers from being enabled for a unit's children. If a controller listed is already in use in its subtree, the controller will be removed from the subtree. This can be used to avoid child units being able to implicitly or explicitly enable a controller. Defaults to not disabling any controllers.\n\nIt may not be possible to successfully disable a controller if the unit or any child of the unit in question delegates controllers to its children, as any delegated subtree of the cgroup hierarchy is unmanaged by systemd.\n\nMultiple controllers may be specified, separated by spaces. You may also pass `DisableControllers=` multiple times, in which case each new instance adds another controller to disable. Passing `DisableControllers=` by itself with no controller name present resets the disabled controller list.\n\nThe following controller names may be specified: `cpu`, `cpuacct`, `cpuset`, `io`, `blkio`, `memory`, `devices`, `pids`, `bpf-firewall`, and `bpf-devices`."],
[4,163,"Specifies how [systemd-oomd.service(8)](systemd-oomd.service.html#) will act on this unit's cgroups. Defaults to `auto`.\n\nWhen set to `kill`, **systemd-oomd** will actively monitor this unit's cgroup metrics to decide whether it needs to act. If the cgroup passes the limits set by [oomd.conf(5)](oomd.conf.html#) or its overrides, **systemd-oomd** will send a `SIGKILL` to all of the processes under the chosen candidate cgroup. Note that only descendant cgroups can be eligible candidates for killing; the unit that set its property to `kill` is not a candidate (unless one of its ancestors set their property to `kill`). You can find more details on candidates and kill behavior at [systemd-oomd.service(8)](systemd-oomd.service.html#) and [oomd.conf(5)](oomd.conf.html#). Setting either of these properties to `kill` will also automatically acquire `After=` and `Wants=` dependencies on `systemd-oomd.service` unless `DefaultDependencies=no`.\n\nWhen set to `auto`, **systemd-oomd** will not actively use this cgroup's data for monitoring and detection. However, if an ancestor cgroup has one of these properties set to `kill`, a unit with `auto` can still be an eligible candidate for **systemd-oomd** to act on."],
[4,164,"Overrides the default memory pressure limit set by [oomd.conf(5)](oomd.conf.html#) for this unit (cgroup). Takes a percentage value between 0% and 100%, inclusive. This property is ignored unless `ManagedOOMMemoryPressure=``kill`. Defaults to 0%, which means to use the default set by [oomd.conf(5)](oomd.conf.html#)."],
[4,165,"Allows deprioritizing or omitting this unit's cgroup as a candidate when **systemd-oomd** needs to act. Requires support for extended attributes (see [xattr(7)](http://man7.org/linux/man-pages/man7/xattr.7.html)) in order to use `avoid` or `omit`. Additionally, **systemd-oomd** will ignore these extended attributes if the unit's cgroup is not owned by the root user.\n\nIf this property is set to `avoid`, the service manager will convey this to **systemd-oomd**, which will only select this cgroup if there are no other viable candidates.\n\nIf this property is set to `omit`, the service manager will convey this to **systemd-oomd**, which will ignore this cgroup as a candidate and will not perform any actions on it.\n\nIt is recommended to use `avoid` and `omit` sparingly, as it can adversely affect **systemd-oomd**'s kill behavior. Also note that these extended attributes are not applied recursively to cgroups under this unit's cgroup.\n\nDefaults to `none` which means **systemd-oomd** will rank this unit's cgroup as defined in [systemd-oomd.service(8)](systemd-oomd.service.html#) and [oomd.conf(5)](oomd.conf.html#)."],
[4,166,"Assign the specified CPU time share weight to the processes executed. These options take an integer value and control the \"`cpu.shares`\" control group attribute. The allowed range is 2 to 262144. Defaults to 1024. For details about this control group attribute, see [CFS Scheduler](https://www.kernel.org/doc/html/latest/scheduler/sched-design-CFS.html). The available CPU time is split up among all units within one slice relative to their CPU time share weight.\n\nWhile `StartupCPUShares=` applies to the startup and shutdown phases of the system, `CPUShares=` applies to normal runtime of the system, and if the former is not set also to the startup and shutdown phases. Using `StartupCPUShares=` allows prioritizing specific services at boot-up and shutdown differently than during normal runtime.\n\nImplies \"`CPUAccounting=yes`\".\n\nThese settings are deprecated. Use `CPUWeight=` and `StartupCPUWeight=` instead."],
[4,167,"Specify the limit on maximum memory usage of the executed processes. The limit specifies how much process and kernel memory can be used by tasks in this unit. Takes a memory size in bytes. If the value is suffixed with K, M, G or T, the specified memory size is parsed as Kilobytes, Megabytes, Gigabytes, or Terabytes (with the base 1024), respectively. Alternatively, a percentage value may be specified, which is taken relative to the installed physical memory on the system. If assigned the special value \"`infinity`\", no memory limit is applied. This controls the \"`memory.limit_in_bytes`\" control group attribute. For details about this control group attribute, see [Memory Resource Controller](https://www.kernel.org/doc/html/latest/admin-guide/cgroup-v1/memory.html).\n\nImplies \"`MemoryAccounting=yes`\".\n\nThis setting is deprecated. Use `MemoryMax=` instead."],
[4,168,"Turn on Block I/O accounting for this unit, if the legacy control group hierarchy is used on the system. Takes a boolean argument. Note that turning on block I/O accounting for one unit will also implicitly turn it on for all units contained in the same slice and all for its parent slices and the units contained therein. The system default for this setting may be controlled with `DefaultBlockIOAccounting=` in [systemd-system.conf(5)](systemd-system.conf.html#).\n\nThis setting is deprecated. Use `IOAccounting=` instead."],
[4,169,"Set the default overall block I/O weight for the executed processes, if the legacy control group hierarchy is used on the system. Takes a single weight value (between 10 and 1000) to set the default block I/O weight. This controls the \"`blkio.weight`\" control group attribute, which defaults to 500. For details about this control group attribute, see [Block IO Controller](https://www.kernel.org/doc/html/latest/admin-guide/cgroup-v1/blkio-controller.html). The available I/O bandwidth is split up among all units within one slice relative to their block I/O weight.\n\nWhile `StartupBlockIOWeight=` only applies to the startup and shutdown phases of the system, `BlockIOWeight=` applies to the later runtime of the system, and if the former is not set also to the startup and shutdown phases. This allows prioritizing specific services at boot-up and shutdown differently than during runtime.\n\nImplies \"`BlockIOAccounting=yes`\".\n\nThese settings are deprecated. Use `IOWeight=` and `StartupIOWeight=` instead."],
[4,170,"Set the per-device overall block I/O weight for the executed processes, if the legacy control group hierarchy is used on the system. Takes a space-separated pair of a file path and a weight value to specify the device specific weight value, between 10 and 1000. (Example: \"/dev/sda 500\"). The file path may be specified as path to a block device node or as any other file, in which case the backing block device of the file system of the file is determined. This controls the \"`blkio.weight_device`\" control group attribute, which defaults to 1000. Use this option multiple times to set weights for multiple devices. For details about this control group attribute, see [Block IO Controller](https://www.kernel.org/doc/html/latest/admin-guide/cgroup-v1/blkio-controller.html).\n\nImplies \"`BlockIOAccounting=yes`\".\n\nThis setting is deprecated. Use `IODeviceWeight=` instead."],
[4,171,"Set the per-device overall block I/O bandwidth limit for the executed processes, if the legacy control group hierarchy is used on the system. Takes a space-separated pair of a file path and a bandwidth value (in bytes per second) to specify the device specific bandwidth. The file path may be a path to a block device node, or as any other file in which case the backing block device of the file system of the file is used. If the bandwidth is suffixed with K, M, G, or T, the specified bandwidth is parsed as Kilobytes, Megabytes, Gigabytes, or Terabytes, respectively, to the base of 1000. (Example: \"/dev/disk/by-path/pci-0000:00:1f.2-scsi-0:0:0:0 5M\"). This controls the \"`blkio.throttle.read_bps_device`\" and \"`blkio.throttle.write_bps_device`\" control group attributes. Use this option multiple times to set bandwidth limits for multiple devices. For details about these control group attributes, see [Block IO Controller](https://www.kernel.org/doc/html/latest/admin-guide/cgroup-v1/blkio-controller.html).\n\nImplies \"`BlockIOAccounting=yes`\".\n\nThese settings are deprecated. Use `IOReadBandwidthMax=` and `IOWriteBandwidthMax=` instead."],
[2,"AllowedCPUs","",134,4],
[2,"AllowedMemoryNodes","",135,4],
[2,"BPFProgram","type:program-path",152,4],
[2,"BlockIOAccounting","",168,4],
[2,"BlockIODeviceWeight","device weight",170,4],
[2,"BlockIOReadBandwidth","device bytes",171,4],
[2,"BlockIOWeight","weight",169,4],
[2,"BlockIOWriteBandwidth","device bytes",171,4],
[2,"CPUAccounting","",130,4],
[2,"CPUQuota","",132,4],
[2,"CPUQuotaPeriodSec","",133,4],
[2,"CPUShares","weight",166,4],
[2,"CPUWeight","weight",131,4],
[2,"Delegate","",161,4],
[2,"DeviceAllow","",155,4],
[2,"DevicePolicy","auto|closed|strict",156,4],
[2,"DisableControllers","",162,4],
[2,"IOAccounting","",143,4],
[2,"IODeviceLatencyTargetSec","device target",148,4],
[2,"IODeviceWeight","device weight",145,4],
[2,"IOReadBandwidthMax","device bytes",146,4],
[2,"IOReadIOPSMax","device IOPS",147,4],
[2,"IOWeight","weight",144,4],
[2,"IOWriteBandwidthMax","device bytes",146,4],
[2,"IOWriteIOPSMax","device IOPS",147,4],
[2,"IPAccounting","",149,4],
[2,"IPAddressAllow","ADDRESS[/PREFIXLENGTH]â€¦",150,4],
[2,"IPAddressDeny","ADDRESS[/PREFIXLENGTH]â€¦",150,4],
[2,"IPEgressFilterPath","BPF_FS_PROGRAM_PATH",151,4],
[2,"IPIngressFilterPath","BPF_FS_PROGRAM_PATH",151,4],
[2,"ManagedOOMMemoryPressure","auto|kill",163,4],
[2,"ManagedOOMMemoryPressureLimit","",164,4],
[2,"ManagedOOMPreference","none|avoid|omit",165,4],
[2,"ManagedOOMSwap","auto|kill",163,4],
[2,"MemoryAccounting","",136,4],
[2,"MemoryHigh","bytes",138,4],
[2,"MemoryLimit","bytes",167,4],
[2,"MemoryLow","bytes",137,4],
[2,"MemoryMax","bytes",139,4],
[2,"MemoryMin","bytes",137,4],
[2,"MemorySwapMax","bytes",140,4],
[2,"RestrictNetworkInterfaces","",154,4],
[2,"Slice","",160,4],
[2,"SocketBindAllow","bind-rule",153,4],
[2,"SocketBindDeny","bind-rule",153,4],
[2,"StartupAllowedCPUs","",134,4],
[2,"StartupAllowedMemoryNodes","",135,4],
[2,"StartupBlockIOWeight","weight",169,4],
[2,"StartupCPUShares","weight",166,4],
[2,"StartupCPUWeight","weight",131,4],
[2,"StartupIOWeight","weight",144,4],
[2,"TasksAccounting","",141,4],
[2,"TasksMax","N",142,4],
[3,5,"systemd.exec(5)","systemd.exec â€” Execution environment configuration","systemd.exec.html"],
[4,172,"Takes a colon separated list of absolute paths relative to which the executable used by the `Exec*=` (e.g. `ExecStart=`, `ExecStop=`, etc.) properties can be found. `ExecSearchPath=` overrides `$PATH` if `$PATH` is not supplied by the user through `Environment=`, `EnvironmentFile=` or `PassEnvironment=`. Assigning an empty string removes previous assignments and setting `ExecSearchPath=` to a value multiple times will append to the previous setting."],
[4,173,"Takes a directory path relative to the service's root directory specified by `RootDirectory=`, or the special value \"`~`\". Sets the working directory for executed processes. If set to \"`~`\", the home directory of the user specified in `User=` is used. If not set, defaults to the root directory when systemd is running as a system instance and the respective user's home directory if run as user. If the setting is prefixed with the \"`-`\" character, a missing working directory is not considered fatal. If `RootDirectory=`/`RootImage=` is not set, then `WorkingDirectory=` is relative to the root of the system running the service manager. Note that setting this parameter might result in additional dependencies to be added to the unit (see above)."],
[4,174,"Takes a directory path relative to the host's root directory (i.e. the root of the system running the service manager). Sets the root directory for executed processes, with the [chroot(2)](http://man7.org/linux/man-pages/man2/chroot.2.html) system call. If this is used, it must be ensured that the process binary and all its auxiliary files are available in the `chroot()` jail. Note that setting this parameter might result in additional dependencies to be added to the unit (see above).\n\nThe `MountAPIVFS=` and `PrivateUsers=` settings are particularly useful in conjunction with `RootDirectory=`. For details, see below.\n\nIf `RootDirectory=`/`RootImage=` are used together with `NotifyAccess=` the notification socket is automatically mounted from the host into the root environment, to ensure the notification interface can work correctly.\n\nNote that services using `RootDirectory=`/`RootImage=` will not be able to log via the syslog or journal protocols to the host logging infrastructure, unless the relevant sockets are mounted from the host, specifically:\n\n**ExampleÂ 1.Â Mounting logging sockets into root environment**\n\nBindReadOnlyPaths=/dev/log /run/systemd/journal/socket /run/systemd/journal/stdout\n\n  \n\nThis option is only available for system services and is not supported for services running in per-user instances of the service manager."],
[4,175,"Takes a path to a block device node or regular file as argument. This call is similar to `RootDirectory=` however mounts a file system hierarchy from a block device node or loopback file instead of a directory. The device node or file system image file needs to contain a file system without a partition table, or a file system within an MBR/MS-DOS or GPT partition table with only a single Linux-compatible partition, or a set of file systems within a GPT partition table that follows the [Discoverable Partitions Specification](https://systemd.io/DISCOVERABLE_PARTITIONS).\n\nWhen `DevicePolicy=` is set to \"`closed`\" or \"`strict`\", or set to \"`auto`\" and `DeviceAllow=` is set, then this setting adds `/dev/loop-control` with `rw` mode, \"`block-loop`\" and \"`block-blkext`\" with `rwm` mode to `DeviceAllow=`. See [systemd.resource-control(5)](systemd.resource-control.html#) for the details about `DevicePolicy=` or `DeviceAllow=`. Also, see `PrivateDevices=` below, as it may change the setting of `DevicePolicy=`.\n\nUnits making use of `RootImage=` automatically gain an `After=` dependency on `systemd-udevd.service`.\n\nThis option is only available for system services and is not supported for services running in per-user instances of the service manager."],
[4,176,"Takes a comma-separated list of mount options that will be used on disk images specified by `RootImage=`. Optionally a partition name can be prefixed, followed by colon, in case the image has multiple partitions, otherwise partition name \"`root`\" is implied. Options for multiple partitions can be specified in a single line with space separators. Assigning an empty string removes previous assignments. Duplicated options are ignored. For a list of valid mount options, please refer to [mount(8)](http://man7.org/linux/man-pages/man8/mount.8.html).\n\nValid partition names follow the [Discoverable Partitions Specification](https://systemd.io/DISCOVERABLE_PARTITIONS): `root`, `usr`, `home`, `srv`, `esp`, `xbootldr`, `tmp`, `var`.\n\nThis option is only available for system services and is not supported for services running in per-user instances of the service manager."],
[4,177,"Takes a data integrity (dm-verity) root hash specified in hexadecimal, or the path to a file containing a root hash in ASCII hexadecimal format. This option enables data integrity checks using dm-verity, if the used image contains the appropriate integrity data (see above) or if `RootVerity=` is used. The specified hash must match the root hash of integrity data, and is usually at least 256 bits (and hence 64 formatted hexadecimal characters) long (in case of SHA256 for example). If this option is not specified, but the image file carries the \"`user.verity.roothash`\" extended file attribute (see [xattr(7)](http://man7.org/linux/man-pages/man7/xattr.7.html)), then the root hash is read from it, also as formatted hexadecimal characters. If the extended file attribute is not found (or is not supported by the underlying file system), but a file with the `.roothash` suffix is found next to the image file, bearing otherwise the same name (except if the image has the `.raw` suffix, in which case the root hash file must not have it in its name), the root hash is read from it and automatically used, also as formatted hexadecimal characters.\n\nIf the disk image contains a separate `/usr/` partition it may also be Verity protected, in which case the root hash may configured via an extended attribute \"`user.verity.usrhash`\" or a `.usrhash` file adjacent to the disk image. There's currently no option to configure the root hash for the `/usr/` file system via the unit file directly.\n\nThis option is only available for system services and is not supported for services running in per-user instances of the service manager."],
[4,178,"Takes a PKCS7 signature of the `RootHash=` option as a path to a DER-encoded signature file, or as an ASCII base64 string encoding of a DER-encoded signature prefixed by \"`base64:`\". The dm-verity volume will only be opened if the signature of the root hash is valid and signed by a public key present in the kernel keyring. If this option is not specified, but a file with the `.roothash.p7s` suffix is found next to the image file, bearing otherwise the same name (except if the image has the `.raw` suffix, in which case the signature file must not have it in its name), the signature is read from it and automatically used.\n\nIf the disk image contains a separate `/usr/` partition it may also be Verity protected, in which case the signature for the root hash may configured via a `.usrhash.p7s` file adjacent to the disk image. There's currently no option to configure the root hash signature for the `/usr/` via the unit file directly.\n\nThis option is only available for system services and is not supported for services running in per-user instances of the service manager."],
[4,179,"Takes the path to a data integrity (dm-verity) file. This option enables data integrity checks using dm-verity, if `RootImage=` is used and a root-hash is passed and if the used image itself does not contains the integrity data. The integrity data must be matched by the root hash. If this option is not specified, but a file with the `.verity` suffix is found next to the image file, bearing otherwise the same name (except if the image has the `.raw` suffix, in which case the verity data file must not have it in its name), the verity data is read from it and automatically used.\n\nThis option is supported only for disk images that contain a single file system, without an enveloping partition table. Images that contain a GPT partition table should instead include both root file system and matching Verity data in the same image, implementing the [Discoverable Partitions Specification](https://systemd.io/DISCOVERABLE_PARTITIONS).\n\nThis option is only available for system services and is not supported for services running in per-user instances of the service manager."],
[4,180,"Takes a boolean argument. If on, a private mount namespace for the unit's processes is created and the API file systems `/proc/`, `/sys/`, `/dev/` and `/run/` (as an empty \"`tmpfs`\") are mounted inside of it, unless they are already mounted. Note that this option has no effect unless used in conjunction with `RootDirectory=`/`RootImage=` as these four mounts are generally mounted in the host anyway, and unless the root directory is changed, the private mount namespace will be a 1:1 copy of the host's, and include these four mounts. Note that the `/dev/` file system of the host is bind mounted if this option is used without `PrivateDevices=`. To run the service with a private, minimal version of `/dev/`, combine this option with `PrivateDevices=`.\n\nIn order to allow propagating mounts at runtime in a safe manner, `/run/systemd/propagate` on the host will be used to set up new mounts, and `/run/host/incoming/` in the private namespace will be used as an intermediate step to store them before being moved to the final mount point.\n\nThis option is only available for system services and is not supported for services running in per-user instances of the service manager."],
[4,181,"Takes one of \"`noaccess`\", \"`invisible`\", \"`ptraceable`\" or \"`default`\" (which it defaults to). When set, this controls the \"`hidepid=`\" mount option of the \"`procfs`\" instance for the unit that controls which directories with process metainformation (``/proc/_`PID`_``) are visible and accessible: when set to \"`noaccess`\" the ability to access most of other users' process metadata in `/proc/` is taken away for processes of the service. When set to \"`invisible`\" processes owned by other users are hidden from `/proc/`. If \"`ptraceable`\" all processes that cannot be `ptrace()`'ed by a process are hidden to it. If \"`default`\" no restrictions on `/proc/` access or visibility are made. For further details see [The /proc Filesystem](https://www.kernel.org/doc/html/latest/filesystems/proc.html#mount-options). It is generally recommended to run most system services with this option set to \"`invisible`\". This option is implemented via file system namespacing, and thus cannot be used with services that shall be able to install mount points in the host file system hierarchy. Note that the root user is unaffected by this option, so to be effective it has to be used together with `User=` or `DynamicUser=yes`, and also without the \"`CAP_SYS_PTRACE`\" capability, which also allows a process to bypass this feature. It cannot be used for services that need to access metainformation about other users' processes. This option implies `MountAPIVFS=`.\n\nIf the kernel doesn't support per-mount point `hidepid=` mount options this setting remains without effect, and the unit's processes will be able to access and see other process as if the option was not used.\n\nThis option is only available for system services and is not supported for services running in per-user instances of the service manager."],
[4,182,"Takes one of \"`all`\" (the default) and \"`pid`\". If \"`pid`\", all files and directories not directly associated with process management and introspection are made invisible in the `/proc/` file system configured for the unit's processes. This controls the \"`subset=`\" mount option of the \"`procfs`\" instance for the unit. For further details see [The /proc Filesystem](https://www.kernel.org/doc/html/latest/filesystems/proc.html#mount-options). Note that Linux exposes various kernel APIs via `/proc/`, which are made unavailable with this setting. Since these APIs are used frequently this option is useful only in a few, specific cases, and is not suitable for most non-trivial programs.\n\nMuch like `ProtectProc=` above, this is implemented via file system mount namespacing, and hence the same restrictions apply: it is only available to system services, it disables mount propagation to the host mount table, and it implies `MountAPIVFS=`. Also, like `ProtectProc=` this setting is gracefully disabled if the used kernel does not support the \"`subset=`\" mount option of \"`procfs`\"."],
[4,183,"Configures unit-specific bind mounts. A bind mount makes a particular file or directory available at an additional place in the unit's view of the file system. Any bind mounts created with this option are specific to the unit, and are not visible in the host's mount table. This option expects a whitespace separated list of bind mount definitions. Each definition consists of a colon-separated triple of source path, destination path and option string, where the latter two are optional. If only a source path is specified the source and destination is taken to be the same. The option string may be either \"`rbind`\" or \"`norbind`\" for configuring a recursive or non-recursive bind mount. If the destination path is omitted, the option string must be omitted too. Each bind mount definition may be prefixed with \"`-`\", in which case it will be ignored when its source path does not exist.\n\n`BindPaths=` creates regular writable bind mounts (unless the source file system mount is already marked read-only), while `BindReadOnlyPaths=` creates read-only bind mounts. These settings may be used more than once, each usage appends to the unit's list of bind mounts. If the empty string is assigned to either of these two options the entire list of bind mounts defined prior to this is reset. Note that in this case both read-only and regular bind mounts are reset, regardless which of the two settings is used.\n\nThis option is particularly useful when `RootDirectory=`/`RootImage=` is used. In this case the source path refers to a path on the host file system, while the destination path refers to a path below the root directory of the unit.\n\nNote that the destination directory must exist or systemd must be able to create it. Thus, it is not possible to use those options for mount points nested underneath paths specified in `InaccessiblePaths=`, or under `/home/` and other protected directories if `ProtectHome=yes` is specified. `TemporaryFileSystem=` with \"`:ro`\" or `ProtectHome=tmpfs` should be used instead.\n\nThis option is only available for system services and is not supported for services running in per-user instances of the service manager."],
[4,184,"This setting is similar to `RootImage=` in that it mounts a file system hierarchy from a block device node or loopback file, but the destination directory can be specified as well as mount options. This option expects a whitespace separated list of mount definitions. Each definition consists of a colon-separated tuple of source path and destination definitions, optionally followed by another colon and a list of mount options.\n\nMount options may be defined as a single comma-separated list of options, in which case they will be implicitly applied to the root partition on the image, or a series of colon-separated tuples of partition name and mount options. Valid partition names and mount options are the same as for `RootImageOptions=` setting described above.\n\nEach mount definition may be prefixed with \"`-`\", in which case it will be ignored when its source path does not exist. The source argument is a path to a block device node or regular file. If source or destination contain a \"`:`\", it needs to be escaped as \"`\\:`\". The device node or file system image file needs to follow the same rules as specified for `RootImage=`. Any mounts created with this option are specific to the unit, and are not visible in the host's mount table.\n\nThese settings may be used more than once, each usage appends to the unit's list of mount paths. If the empty string is assigned, the entire list of mount paths defined prior to this is reset.\n\nNote that the destination directory must exist or systemd must be able to create it. Thus, it is not possible to use those options for mount points nested underneath paths specified in `InaccessiblePaths=`, or under `/home/` and other protected directories if `ProtectHome=yes` is specified.\n\nWhen `DevicePolicy=` is set to \"`closed`\" or \"`strict`\", or set to \"`auto`\" and `DeviceAllow=` is set, then this setting adds `/dev/loop-control` with `rw` mode, \"`block-loop`\" and \"`block-blkext`\" with `rwm` mode to `DeviceAllow=`. See [systemd.resource-control(5)](systemd.resource-control.html#) for the details about `DevicePolicy=` or `DeviceAllow=`. Also, see `PrivateDevices=` below, as it may change the setting of `DevicePolicy=`.\n\nThis option is only available for system services and is not supported for services running in per-user instances of the service manager."],
[4,185,"This setting is similar to `MountImages=` in that it mounts a file system hierarchy from a block device node or loopback file, but instead of providing a destination path, an overlay will be set up. This option expects a whitespace separated list of mount definitions. Each definition consists of a source path, optionally followed by a colon and a list of mount options.\n\nA read-only OverlayFS will be set up on top of `/usr/` and `/opt/` hierarchies. The order in which the images are listed will determine the order in which the overlay is laid down: images specified first to last will result in overlayfs layers bottom to top.\n\nMount options may be defined as a single comma-separated list of options, in which case they will be implicitly applied to the root partition on the image, or a series of colon-separated tuples of partition name and mount options. Valid partition names and mount options are the same as for `RootImageOptions=` setting described above.\n\nEach mount definition may be prefixed with \"`-`\", in which case it will be ignored when its source path does not exist. The source argument is a path to a block device node or regular file. If the source path contains a \"`:`\", it needs to be escaped as \"`\\:`\". The device node or file system image file needs to follow the same rules as specified for `RootImage=`. Any mounts created with this option are specific to the unit, and are not visible in the host's mount table.\n\nThese settings may be used more than once, each usage appends to the unit's list of image paths. If the empty string is assigned, the entire list of mount paths defined prior to this is reset.\n\nEach image must carry a `/usr/lib/extension-release.d/extension-release.IMAGE` file, with the appropriate metadata which matches `RootImage=`/`RootDirectory=` or the host. See: [os-release(5)](os-release.html#).\n\nWhen `DevicePolicy=` is set to \"`closed`\" or \"`strict`\", or set to \"`auto`\" and `DeviceAllow=` is set, then this setting adds `/dev/loop-control` with `rw` mode, \"`block-loop`\" and \"`block-blkext`\" with `rwm` mode to `DeviceAllow=`. See [systemd.resource-control(5)](systemd.resource-control.html#) for the details about `DevicePolicy=` or `DeviceAllow=`. Also, see `PrivateDevices=` below, as it may change the setting of `DevicePolicy=`.\n\nThis option is only available for system services and is not supported for services running in per-user instances of the service manager."],
[4,186,"Set the UNIX user or group that the processes are executed as, respectively. Takes a single user or group name, or a numeric ID as argument. For system services (services run by the system service manager, i.e. managed by PID 1) and for user services of the root user (services managed by root's instance of **systemd --user**), the default is \"`root`\", but `User=` may be used to specify a different user. For user services of any other user, switching user identity is not permitted, hence the only valid setting is the same user the user's service manager is running as. If no group is set, the default group of the user is used. This setting does not affect commands whose command line is prefixed with \"`+`\".\n\nNote that this enforces only weak restrictions on the user/group name syntax, but will generate warnings in many cases where user/group names do not adhere to the following rules: the specified name should consist only of the characters a-z, A-Z, 0-9, \"`_`\" and \"`-`\", except for the first character which must be one of a-z, A-Z and \"`_`\" (i.e. digits and \"`-`\" are not permitted as first character). The user/group name must have at least one character, and at most 31. These restrictions are made in order to avoid ambiguities and to ensure user/group names and unit files remain portable among Linux systems. For further details on the names accepted and the names warned about see [User/Group Name Syntax](https://systemd.io/USER_NAMES).\n\nWhen used in conjunction with `DynamicUser=` the user/group name specified is dynamically allocated at the time the service is started, and released at the time the service is stopped â€” unless it is already allocated statically (see below). If `DynamicUser=` is not used the specified user and group must have been created statically in the user database no later than the moment the service is started, for example using the [sysusers.d(5)](sysusers.d.html#) facility, which is applied at boot or package install time. If the user does not exist by then program invocation will fail.\n\nIf the `User=` setting is used the supplementary group list is initialized from the specified user's default group list, as defined in the system's user and group database. Additional groups may be configured through the `SupplementaryGroups=` setting (see below)."],
[4,187,"Takes a boolean parameter. If set, a UNIX user and group pair is allocated dynamically when the unit is started, and released as soon as it is stopped. The user and group will not be added to `/etc/passwd` or `/etc/group`, but are managed transiently during runtime. The [nss-systemd(8)](nss-systemd.html#) glibc NSS module provides integration of these dynamic users/groups into the system's user and group databases. The user and group name to use may be configured via `User=` and `Group=` (see above). If these options are not used and dynamic user/group allocation is enabled for a unit, the name of the dynamic user/group is implicitly derived from the unit name. If the unit name without the type suffix qualifies as valid user name it is used directly, otherwise a name incorporating a hash of it is used. If a statically allocated user or group of the configured name already exists, it is used and no dynamic user/group is allocated. Note that if `User=` is specified and the static group with the name exists, then it is required that the static user with the name already exists. Similarly, if `Group=` is specified and the static user with the name exists, then it is required that the static group with the name already exists. Dynamic users/groups are allocated from the UID/GID range 61184â€¦65519. It is recommended to avoid this range for regular system or login users. At any point in time each UID/GID from this range is only assigned to zero or one dynamically allocated users/groups in use. However, UID/GIDs are recycled after a unit is terminated. Care should be taken that any processes running as part of a unit for which dynamic users/groups are enabled do not leave files or directories owned by these users/groups around, as a different unit might get the same UID/GID assigned later on, and thus gain access to these files or directories. If `DynamicUser=` is enabled, `RemoveIPC=` and `PrivateTmp=` are implied (and cannot be turned off). This ensures that the lifetime of IPC objects and temporary files created by the executed processes is bound to the runtime of the service, and hence the lifetime of the dynamic user/group. Since `/tmp/` and `/var/tmp/` are usually the only world-writable directories on a system this ensures that a unit making use of dynamic user/group allocation cannot leave files around after unit termination. Furthermore `NoNewPrivileges=` and `RestrictSUIDSGID=` are implicitly enabled (and cannot be disabled), to ensure that processes invoked cannot take benefit or create SUID/SGID files or directories. Moreover `ProtectSystem=strict` and `ProtectHome=read-only` are implied, thus prohibiting the service to write to arbitrary file system locations. In order to allow the service to write to certain directories, they have to be allow-listed using `ReadWritePaths=`, but care must be taken so that UID/GID recycling doesn't create security issues involving files created by the service. Use `RuntimeDirectory=` (see below) in order to assign a writable runtime directory to a service, owned by the dynamic user/group and removed automatically when the unit is terminated. Use `StateDirectory=`, `CacheDirectory=` and `LogsDirectory=` in order to assign a set of writable directories for specific purposes to the service in a way that they are protected from vulnerabilities due to UID reuse (see below). If this option is enabled, care should be taken that the unit's processes do not get access to directories outside of these explicitly configured and managed ones. Specifically, do not use `BindPaths=` and be careful with `AF_UNIX` file descriptor passing for directory file descriptors, as this would permit processes to create files or directories owned by the dynamic user/group that are not subject to the lifecycle and access guarantees of the service. Defaults to off."],
[4,188,"Sets the supplementary Unix groups the processes are executed as. This takes a space-separated list of group names or IDs. This option may be specified more than once, in which case all listed groups are set as supplementary groups. When the empty string is assigned, the list of supplementary groups is reset, and all assignments prior to this one will have no effect. In any way, this option does not override, but extends the list of supplementary groups configured in the system group database for the user. This does not affect commands prefixed with \"`+`\"."],
[4,189,"Sets the PAM service name to set up a session as. If set, the executed process will be registered as a PAM session under the specified service name. This is only useful in conjunction with the `User=` setting, and is otherwise ignored. If not set, no PAM session will be opened for the executed processes. See [pam(8)](http://man7.org/linux/man-pages/man8/pam.8.html) for details.\n\nNote that for each unit making use of this option a PAM session handler process will be maintained as part of the unit and stays around as long as the unit is active, to ensure that appropriate actions can be taken when the unit and hence the PAM session terminates. This process is named \"`(sd-pam)`\" and is an immediate child process of the unit's main process.\n\nNote that when this option is used for a unit it is very likely (depending on PAM configuration) that the main unit process will be migrated to its own session scope unit when it is activated. This process will hence be associated with two units: the unit it was originally started from (and for which `PAMName=` was configured), and the session scope unit. Any child processes of that process will however be associated with the session scope unit only. This has implications when used in combination with `NotifyAccess=``all`, as these child processes will not be able to affect changes in the original unit through notification messages. These messages will be considered belonging to the session scope unit and not the original unit. It is hence not recommended to use `PAMName=` in combination with `NotifyAccess=``all`."],
[4,190,"Controls which capabilities to include in the capability bounding set for the executed process. See [capabilities(7)](http://man7.org/linux/man-pages/man7/capabilities.7.html) for details. Takes a whitespace-separated list of capability names, e.g. `CAP_SYS_ADMIN`, `CAP_DAC_OVERRIDE`, `CAP_SYS_PTRACE`. Capabilities listed will be included in the bounding set, all others are removed. If the list of capabilities is prefixed with \"`~`\", all but the listed capabilities will be included, the effect of the assignment inverted. Note that this option also affects the respective capabilities in the effective, permitted and inheritable capability sets. If this option is not used, the capability bounding set is not modified on process execution, hence no limits on the capabilities of the process are enforced. This option may appear more than once, in which case the bounding sets are merged by `OR`, or by `AND` if the lines are prefixed with \"`~`\" (see below). If the empty string is assigned to this option, the bounding set is reset to the empty capability set, and all prior settings have no effect. If set to \"`~`\" (without any further argument), the bounding set is reset to the full set of available capabilities, also undoing any previous settings. This does not affect commands prefixed with \"`+`\".\n\nUse [systemd-analyze(1)](systemd-analyze.html#)'s **capability** command to retrieve a list of capabilities defined on the local system.\n\nExample: if a unit has the following,\n\nCapabilityBoundingSet=CAP\\_A CAP\\_B\nCapabilityBoundingSet=CAP\\_B CAP\\_C\n\nthen `CAP_A`, `CAP_B`, and `CAP_C` are set. If the second line is prefixed with \"`~`\", e.g.,\n\nCapabilityBoundingSet=CAP\\_A CAP\\_B\nCapabilityBoundingSet=~CAP\\_B CAP\\_C\n\nthen, only `CAP_A` is set."],
[4,191,"Controls which capabilities to include in the ambient capability set for the executed process. Takes a whitespace-separated list of capability names, e.g. `CAP_SYS_ADMIN`, `CAP_DAC_OVERRIDE`, `CAP_SYS_PTRACE`. This option may appear more than once in which case the ambient capability sets are merged (see the above examples in `CapabilityBoundingSet=`). If the list of capabilities is prefixed with \"`~`\", all but the listed capabilities will be included, the effect of the assignment inverted. If the empty string is assigned to this option, the ambient capability set is reset to the empty capability set, and all prior settings have no effect. If set to \"`~`\" (without any further argument), the ambient capability set is reset to the full set of available capabilities, also undoing any previous settings. Note that adding capabilities to ambient capability set adds them to the process's inherited capability set.\n\nAmbient capability sets are useful if you want to execute a process as a non-privileged user but still want to give it some capabilities. Note that in this case option `keep-caps` is automatically added to `SecureBits=` to retain the capabilities over the user change. `AmbientCapabilities=` does not affect commands prefixed with \"`+`\"."],
[4,192,"Takes a boolean argument. If true, ensures that the service process and all its children can never gain new privileges through `execve()` (e.g. via setuid or setgid bits, or filesystem capabilities). This is the simplest and most effective way to ensure that a process and its children can never elevate privileges again. Defaults to false, but certain settings override this and ignore the value of this setting. This is the case when `DynamicUser=`, `LockPersonality=`, `MemoryDenyWriteExecute=`, `PrivateDevices=`, `ProtectClock=`, `ProtectHostname=`, `ProtectKernelLogs=`, `ProtectKernelModules=`, `ProtectKernelTunables=`, `RestrictAddressFamilies=`, `RestrictNamespaces=`, `RestrictRealtime=`, `RestrictSUIDSGID=`, `SystemCallArchitectures=`, `SystemCallFilter=`, or `SystemCallLog=` are specified. Note that even if this setting is overridden by them, **systemctl show** shows the original value of this setting. In case the service will be run in a new mount namespace anyway and SELinux is disabled, all file systems are mounted with `MS_NOSUID` flag. Also see [No New Privileges Flag](https://www.kernel.org/doc/html/latest/userspace-api/no_new_privs.html)."],
[4,193,"Controls the secure bits set for the executed process. Takes a space-separated combination of options from the following list: `keep-caps`, `keep-caps-locked`, `no-setuid-fixup`, `no-setuid-fixup-locked`, `noroot`, and `noroot-locked`. This option may appear more than once, in which case the secure bits are ORed. If the empty string is assigned to this option, the bits are reset to 0. This does not affect commands prefixed with \"`+`\". See [capabilities(7)](http://man7.org/linux/man-pages/man7/capabilities.7.html) for details."],
[4,194,"Set the SELinux security context of the executed process. If set, this will override the automated domain transition. However, the policy still needs to authorize the transition. This directive is ignored if SELinux is disabled. If prefixed by \"`-`\", failing to set the SELinux security context will be ignored, but it's still possible that the subsequent `execve()` may fail if the policy doesn't allow the transition for the non-overridden context. This does not affect commands prefixed with \"`+`\". See [setexeccon(3)](http://linux.die.net/man/3/setexeccon) for details."],
[4,195,"Takes a profile name as argument. The process executed by the unit will switch to this profile when started. Profiles must already be loaded in the kernel, or the unit will fail. If prefixed by \"`-`\", all errors will be ignored. This setting has no effect if AppArmor is not enabled. This setting does not affect commands prefixed with \"`+`\"."],
[4,196,"Takes a `SMACK64` security label as argument. The process executed by the unit will be started under this label and SMACK will decide whether the process is allowed to run or not, based on it. The process will continue to run under the label specified here unless the executable has its own `SMACK64EXEC` label, in which case the process will transition to run under that label. When not specified, the label that systemd is running under is used. This directive is ignored if SMACK is disabled.\n\nThe value may be prefixed by \"`-`\", in which case all errors will be ignored. An empty value may be specified to unset previous assignments. This does not affect commands prefixed with \"`+`\"."],
[4,197,"Set soft and hard limits on various resources for executed processes. See [setrlimit(2)](http://man7.org/linux/man-pages/man2/setrlimit.2.html) for details on the resource limit concept. Resource limits may be specified in two formats: either as single value to set a specific soft and hard limit to the same value, or as colon-separated pair `soft:hard` to set both limits individually (e.g. \"`LimitAS=4G:16G`\"). Use the string `infinity` to configure no limit on a specific resource. The multiplicative suffixes K, M, G, T, P and E (to the base 1024) may be used for resource limits measured in bytes (e.g. \"`LimitAS=16G`\"). For the limits referring to time values, the usual time units ms, s, min, h and so on may be used (see [systemd.time(7)](systemd.time.html#) for details). Note that if no time unit is specified for `LimitCPU=` the default unit of seconds is implied, while for `LimitRTTIME=` the default unit of microseconds is implied. Also, note that the effective granularity of the limits might influence their enforcement. For example, time limits specified for `LimitCPU=` will be rounded up implicitly to multiples of 1s. For `LimitNICE=` the value may be specified in two syntaxes: if prefixed with \"`+`\" or \"`-`\", the value is understood as regular Linux nice value in the range -20â€¦19. If not prefixed like this the value is understood as raw resource limit parameter in the range 0â€¦40 (with 0 being equivalent to 1).\n\nNote that most process resource limits configured with these options are per-process, and processes may fork in order to acquire a new set of resources that are accounted independently of the original process, and may thus escape limits set. Also note that `LimitRSS=` is not implemented on Linux, and setting it has no effect. Often it is advisable to prefer the resource controls listed in [systemd.resource-control(5)](systemd.resource-control.html#) over these per-process limits, as they apply to services as a whole, may be altered dynamically at runtime, and are generally more expressive. For example, `MemoryMax=` is a more powerful (and working) replacement for `LimitRSS=`.\n\nResource limits not configured explicitly for a unit default to the value configured in the various `DefaultLimitCPU=`, `DefaultLimitFSIZE=`, â€¦ options available in [systemd-system.conf(5)](systemd-system.conf.html#), and â€“ if not configured there â€“ the kernel or per-user defaults, as defined by the OS (the latter only for user services, see below).\n\nFor system units these resource limits may be chosen freely. When these settings are configured in a user service (i.e. a service run by the per-user instance of the service manager) they cannot be used to raise the limits above those set for the user manager itself when it was first invoked, as the user's service manager generally lacks the privileges to do so. In user context these configuration options are hence only useful to lower the limits passed in or to raise the soft limit to the maximum of the hard limit as configured for the user. To raise the user's limits further, the available configuration mechanisms differ between operating systems, but typically require privileges. In most cases it is possible to configure higher per-user resource limits via PAM or by setting limits on the system service encapsulating the user's service manager, i.e. the user's instance of `user@.service`. After making such changes, make sure to restart the user's service manager.\n\n**TableÂ 1.Â Resource limit directives, their equivalent ulimit shell commands and the unit used**\n\nDirective\n\n**ulimit** equivalent\n\nUnit\n\nLimitCPU=\n\nulimit -t\n\nSeconds\n\nLimitFSIZE=\n\nulimit -f\n\nBytes\n\nLimitDATA=\n\nulimit -d\n\nBytes\n\nLimitSTACK=\n\nulimit -s\n\nBytes\n\nLimitCORE=\n\nulimit -c\n\nBytes\n\nLimitRSS=\n\nulimit -m\n\nBytes\n\nLimitNOFILE=\n\nulimit -n\n\nNumber of File Descriptors\n\nLimitAS=\n\nulimit -v\n\nBytes\n\nLimitNPROC=\n\nulimit -u\n\nNumber of Processes\n\nLimitMEMLOCK=\n\nulimit -l\n\nBytes\n\nLimitLOCKS=\n\nulimit -x\n\nNumber of Locks\n\nLimitSIGPENDING=\n\nulimit -i\n\nNumber of Queued Signals\n\nLimitMSGQUEUE=\n\nulimit -q\n\nBytes\n\nLimitNICE=\n\nulimit -e\n\nNice Level\n\nLimitRTPRIO=\n\nulimit -r\n\nRealtime Priority\n\nLimitRTTIME=\n\nNo equivalent\n\nMicroseconds"],
[4,198,"Controls the file mode creation mask. Takes an access mode in octal notation. See [umask(2)](http://man7.org/linux/man-pages/man2/umask.2.html) for details. Defaults to 0022 for system units. For user units the default value is inherited from the per-user service manager (whose default is in turn inherited from the system service manager, and thus typically also is 0022 â€” unless overridden by a PAM module). In order to change the per-user mask for all user services, consider setting the `UMask=` setting of the user's `user@.service` system service instance. The per-user umask may also be set via the `umask` field of a user's [JSON User Record](https://systemd.io/USER_RECORD) (for users managed by [systemd-homed.service(8)](systemd-homed.service.html#) this field may be controlled via **homectl --umask=**). It may also be set via a PAM module, such as [pam\\_umask(8)](http://man7.org/linux/man-pages/man8/pam_umask.8.html)."],
[4,199,"Controls which types of memory mappings will be saved if the process dumps core (using the ``/proc/_`pid`_/coredump_filter`` file). Takes a whitespace-separated combination of mapping type names or numbers (with the default base 16). Mapping type names are `private-anonymous`, `shared-anonymous`, `private-file-backed`, `shared-file-backed`, `elf-headers`, `private-huge`, `shared-huge`, `private-dax`, `shared-dax`, and the special values `all` (all types) and `default` (the kernel default of \"`` `private-anonymous` `shared-anonymous` `elf-headers` `private-huge` ``\"). See [core(5)](http://man7.org/linux/man-pages/man5/core.5.html) for the meaning of the mapping types. When specified multiple times, all specified masks are ORed. When not set, or if the empty value is assigned, the inherited value is not changed.\n\n**ExampleÂ 2.Â Add DAX pages to the dump filter**\n\nCoredumpFilter=default private-dax shared-dax"],
[4,200,"Controls how the kernel session keyring is set up for the service (see [session-keyring(7)](http://man7.org/linux/man-pages/man7/session-keyring.7.html) for details on the session keyring). Takes one of `inherit`, `private`, `shared`. If set to `inherit` no special keyring setup is done, and the kernel's default behaviour is applied. If `private` is used a new session keyring is allocated when a service process is invoked, and it is not linked up with any user keyring. This is the recommended setting for system services, as this ensures that multiple services running under the same system user ID (in particular the root user) do not share their key material among each other. If `shared` is used a new session keyring is allocated as for `private`, but the user keyring of the user configured with `User=` is linked into it, so that keys assigned to the user may be requested by the unit's processes. In this modes multiple units running processes under the same user ID may share key material. Unless `inherit` is selected the unique invocation ID for the unit (see below) is added as a protected key by the name \"`invocation_id`\" to the newly created session keyring. Defaults to `private` for services of the system service manager and to `inherit` for non-service units and for services of the user service manager."],
[4,201,"Sets the adjustment value for the Linux kernel's Out-Of-Memory (OOM) killer score for executed processes. Takes an integer between -1000 (to disable OOM killing of processes of this unit) and 1000 (to make killing of processes of this unit under memory pressure very likely). See [proc.txt](https://www.kernel.org/doc/Documentation/filesystems/proc.txt) for details. If not specified defaults to the OOM score adjustment level of the service manager itself, which is normally at 0.\n\nUse the `OOMPolicy=` setting of service units to configure how the service manager shall react to the kernel OOM killer terminating a process of the service. See [systemd.service(5)](systemd.service.html#) for details."],
[4,202,"Sets the timer slack in nanoseconds for the executed processes. The timer slack controls the accuracy of wake-ups triggered by timers. See [prctl(2)](http://man7.org/linux/man-pages/man2/prctl.2.html) for more information. Note that in contrast to most other time span definitions this parameter takes an integer value in nano-seconds if no unit is specified. The usual time units are understood too."],
[4,203,"Controls which kernel architecture [uname(2)](http://man7.org/linux/man-pages/man2/uname.2.html) shall report, when invoked by unit processes. Takes one of the architecture identifiers `x86`, `x86-64`, `ppc`, `ppc-le`, `ppc64`, `ppc64-le`, `s390` or `s390x`. Which personality architectures are supported depends on the system architecture. Usually the 64bit versions of the various system architectures support their immediate 32bit personality architecture counterpart, but no others. For example, `x86-64` systems support the `x86-64` and `x86` personalities but no others. The personality feature is useful when running 32-bit services on a 64-bit host system. If not specified, the personality is left unmodified and thus reflects the personality of the host system's kernel."],
[4,204,"Takes a boolean argument. If true, causes `SIGPIPE` to be ignored in the executed process. Defaults to true because `SIGPIPE` generally is useful only in shell pipelines."],
[4,205,"Sets the default nice level (scheduling priority) for executed processes. Takes an integer between -20 (highest priority) and 19 (lowest priority). In case of resource contention, smaller values mean more resources will be made available to the unit's processes, larger values mean less resources will be made available. See [setpriority(2)](http://man7.org/linux/man-pages/man2/setpriority.2.html) for details."],
[4,206,"Sets the CPU scheduling policy for executed processes. Takes one of `other`, `batch`, `idle`, `fifo` or `rr`. See [sched\\_setscheduler(2)](http://man7.org/linux/man-pages/man2/sched_setscheduler.2.html) for details."],
[4,207,"Sets the CPU scheduling priority for executed processes. The available priority range depends on the selected CPU scheduling policy (see above). For real-time scheduling policies an integer between 1 (lowest priority) and 99 (highest priority) can be used. In case of CPU resource contention, smaller values mean less CPU time is made available to the service, larger values mean more. See [sched\\_setscheduler(2)](http://man7.org/linux/man-pages/man2/sched_setscheduler.2.html) for details."],
[4,208,"Takes a boolean argument. If true, elevated CPU scheduling priorities and policies will be reset when the executed processes call [fork(2)](http://man7.org/linux/man-pages/man2/fork.2.html), and can hence not leak into child processes. See [sched\\_setscheduler(2)](http://man7.org/linux/man-pages/man2/sched_setscheduler.2.html) for details. Defaults to false."],
[4,209,"Controls the CPU affinity of the executed processes. Takes a list of CPU indices or ranges separated by either whitespace or commas. Alternatively, takes a special \"numa\" value in which case systemd automatically derives allowed CPU range based on the value of `NUMAMask=` option. CPU ranges are specified by the lower and upper CPU indices separated by a dash. This option may be specified more than once, in which case the specified CPU affinity masks are merged. If the empty string is assigned, the mask is reset, all assignments prior to this will have no effect. See [sched\\_setaffinity(2)](http://man7.org/linux/man-pages/man2/sched_setaffinity.2.html) for details."],
[4,210,"Controls the NUMA memory policy of the executed processes. Takes a policy type, one of: `default`, `preferred`, `bind`, `interleave` and `local`. A list of NUMA nodes that should be associated with the policy must be specified in `NUMAMask=`. For more details on each policy please see, [set\\_mempolicy(2)](http://man7.org/linux/man-pages/man2/set_mempolicy.2.html). For overall overview of NUMA support in Linux see, [numa(7)](http://man7.org/linux/man-pages/man7/numa.7.html)."],
[4,211,"Controls the NUMA node list which will be applied alongside with selected NUMA policy. Takes a list of NUMA nodes and has the same syntax as a list of CPUs for `CPUAffinity=` option or special \"all\" value which will include all available NUMA nodes in the mask. Note that the list of NUMA nodes is not required for `default` and `local` policies and for `preferred` policy we expect a single NUMA node."],
[4,212,"Sets the I/O scheduling class for executed processes. Takes one of the strings `realtime`, `best-effort` or `idle`. The kernel's default scheduling class is `best-effort` at a priority of 4. If the empty string is assigned to this option, all prior assignments to both `IOSchedulingClass=` and `IOSchedulingPriority=` have no effect. See [ioprio\\_set(2)](http://man7.org/linux/man-pages/man2/ioprio_set.2.html) for details."],
[4,213,"Sets the I/O scheduling priority for executed processes. Takes an integer between 0 (highest priority) and 7 (lowest priority). In case of I/O contention, smaller values mean more I/O bandwidth is made available to the unit's processes, larger values mean less bandwidth. The available priorities depend on the selected I/O scheduling class (see above). If the empty string is assigned to this option, all prior assignments to both `IOSchedulingClass=` and `IOSchedulingPriority=` have no effect. For the kernel's default scheduling class (`best-effort`) this defaults to 4. See [ioprio\\_set(2)](http://man7.org/linux/man-pages/man2/ioprio_set.2.html) for details."],
[4,214,"Takes a boolean argument or the special values \"`full`\" or \"`strict`\". If true, mounts the `/usr/` and the boot loader directories (`/boot` and `/efi`) read-only for processes invoked by this unit. If set to \"`full`\", the `/etc/` directory is mounted read-only, too. If set to \"`strict`\" the entire file system hierarchy is mounted read-only, except for the API file system subtrees `/dev/`, `/proc/` and `/sys/` (protect these directories using `PrivateDevices=`, `ProtectKernelTunables=`, `ProtectControlGroups=`). This setting ensures that any modification of the vendor-supplied operating system (and optionally its configuration, and local mounts) is prohibited for the service. It is recommended to enable this setting for all long-running services, unless they are involved with system updates or need to modify the operating system in other ways. If this option is used, `ReadWritePaths=` may be used to exclude specific directories from being made read-only. This setting is implied if `DynamicUser=` is set. This setting cannot ensure protection in all cases. In general it has the same limitations as `ReadOnlyPaths=`, see below. Defaults to off."],
[4,215,"Takes a boolean argument or the special values \"`read-only`\" or \"`tmpfs`\". If true, the directories `/home/`, `/root`, and `/run/user` are made inaccessible and empty for processes invoked by this unit. If set to \"`read-only`\", the three directories are made read-only instead. If set to \"`tmpfs`\", temporary file systems are mounted on the three directories in read-only mode. The value \"`tmpfs`\" is useful to hide home directories not relevant to the processes invoked by the unit, while still allowing necessary directories to be made visible when listed in `BindPaths=` or `BindReadOnlyPaths=`.\n\nSetting this to \"`yes`\" is mostly equivalent to set the three directories in `InaccessiblePaths=`. Similarly, \"`read-only`\" is mostly equivalent to `ReadOnlyPaths=`, and \"`tmpfs`\" is mostly equivalent to `TemporaryFileSystem=` with \"`:ro`\".\n\nIt is recommended to enable this setting for all long-running services (in particular network-facing ones), to ensure they cannot get access to private user data, unless the services actually require access to the user's private data. This setting is implied if `DynamicUser=` is set. This setting cannot ensure protection in all cases. In general it has the same limitations as `ReadOnlyPaths=`, see below.\n\nThis option is only available for system services and is not supported for services running in per-user instances of the service manager."],
[4,216,"These options take a whitespace-separated list of directory names. The specified directory names must be relative, and may not include \"`..`\". If set, when the unit is started, one or more directories by the specified names will be created (including their parents) below the locations defined in the following table. Also, the corresponding environment variable will be defined with the full paths of the directories. If multiple directories are set, then in the environment variable the paths are concatenated with colon (\"`:`\").\n\n**TableÂ 2.Â Automatic directory creation and environment variables**\n\nDirectory\n\nBelow path for system units\n\nBelow path for user units\n\nEnvironment variable set\n\n`RuntimeDirectory=`\n\n`/run/`\n\n`$XDG_RUNTIME_DIR`\n\n`$RUNTIME_DIRECTORY`\n\n`StateDirectory=`\n\n`/var/lib/`\n\n`$XDG_CONFIG_HOME`\n\n`$STATE_DIRECTORY`\n\n`CacheDirectory=`\n\n`/var/cache/`\n\n`$XDG_CACHE_HOME`\n\n`$CACHE_DIRECTORY`\n\n`LogsDirectory=`\n\n`/var/log/`\n\n`$XDG_CONFIG_HOME``/log/`\n\n`$LOGS_DIRECTORY`\n\n`ConfigurationDirectory=`\n\n`/etc/`\n\n`$XDG_CONFIG_HOME`\n\n`$CONFIGURATION_DIRECTORY`\n\n  \n\nIn case of `RuntimeDirectory=` the innermost subdirectories are removed when the unit is stopped. It is possible to preserve the specified directories in this case if `RuntimeDirectoryPreserve=` is configured to `restart` or `yes` (see below). The directories specified with `StateDirectory=`, `CacheDirectory=`, `LogsDirectory=`, `ConfigurationDirectory=` are not removed when the unit is stopped.\n\nExcept in case of `ConfigurationDirectory=`, the innermost specified directories will be owned by the user and group specified in `User=` and `Group=`. If the specified directories already exist and their owning user or group do not match the configured ones, all files and directories below the specified directories as well as the directories themselves will have their file ownership recursively changed to match what is configured. As an optimization, if the specified directories are already owned by the right user and group, files and directories below of them are left as-is, even if they do not match what is requested. The innermost specified directories will have their access mode adjusted to the what is specified in `RuntimeDirectoryMode=`, `StateDirectoryMode=`, `CacheDirectoryMode=`, `LogsDirectoryMode=` and `ConfigurationDirectoryMode=`.\n\nThese options imply `BindPaths=` for the specified paths. When combined with `RootDirectory=` or `RootImage=` these paths always reside on the host and are mounted from there into the unit's file system namespace.\n\nIf `DynamicUser=` is used, the logic for `CacheDirectory=`, `LogsDirectory=` and `StateDirectory=` is slightly altered: the directories are created below `/var/cache/private`, `/var/log/private` and `/var/lib/private`, respectively, which are host directories made inaccessible to unprivileged users, which ensures that access to these directories cannot be gained through dynamic user ID recycling. Symbolic links are created to hide this difference in behaviour. Both from perspective of the host and from inside the unit, the relevant directories hence always appear directly below `/var/cache`, `/var/log` and `/var/lib`.\n\nUse `RuntimeDirectory=` to manage one or more runtime directories for the unit and bind their lifetime to the daemon runtime. This is particularly useful for unprivileged daemons that cannot create runtime directories in `/run/` due to lack of privileges, and to make sure the runtime directory is cleaned up automatically after use. For runtime directories that require more complex or different configuration or lifetime guarantees, please consider using [tmpfiles.d(5)](tmpfiles.d.html#).\n\n`RuntimeDirectory=`, `StateDirectory=`, `CacheDirectory=` and `LogsDirectory=` optionally support a second parameter, separated by \"`:`\". The second parameter will be interpreted as a destination path that will be created as a symlink to the directory. The symlinks will be created after any `BindPaths=` or `TemporaryFileSystem=` options have been set up, to make ephemeral symlinking possible. The same source can have multiple symlinks, by using the same first parameter, but a different second parameter."],
[4,217,"Specifies the access mode of the directories specified in `RuntimeDirectory=`, `StateDirectory=`, `CacheDirectory=`, `LogsDirectory=`, or `ConfigurationDirectory=`, respectively, as an octal number. Defaults to `0755`. See \"Permissions\" in [path\\_resolution(7)](http://man7.org/linux/man-pages/man7/path_resolution.7.html) for a discussion of the meaning of permission bits."],
[4,218,"Takes a boolean argument or `restart`. If set to `no` (the default), the directories specified in `RuntimeDirectory=` are always removed when the service stops. If set to `restart` the directories are preserved when the service is both automatically and manually restarted. Here, the automatic restart means the operation specified in `Restart=`, and manual restart means the one triggered by **systemctl restart foo.service**. If set to `yes`, then the directories are not removed when the service is stopped. Note that since the runtime directory `/run/` is a mount point of \"`tmpfs`\", then for system services the directories specified in `RuntimeDirectory=` are removed when the system is rebooted."],
[4,219,"Configures a timeout on the clean-up operation requested through **systemctl clean â€¦**, see [systemctl(1)](systemctl.html#) for details. Takes the usual time values and defaults to `infinity`, i.e. by default no timeout is applied. If a timeout is configured the clean operation will be aborted forcibly when the timeout is reached, potentially leaving resources on disk."],
[4,220,"Sets up a new file system namespace for executed processes. These options may be used to limit access a process has to the file system. Each setting takes a space-separated list of paths relative to the host's root directory (i.e. the system running the service manager). Note that if paths contain symlinks, they are resolved relative to the root directory set with `RootDirectory=`/`RootImage=`.\n\nPaths listed in `ReadWritePaths=` are accessible from within the namespace with the same access modes as from outside of it. Paths listed in `ReadOnlyPaths=` are accessible for reading only, writing will be refused even if the usual file access controls would permit this. Nest `ReadWritePaths=` inside of `ReadOnlyPaths=` in order to provide writable subdirectories within read-only directories. Use `ReadWritePaths=` in order to allow-list specific paths for write access if `ProtectSystem=strict` is used.\n\nPaths listed in `InaccessiblePaths=` will be made inaccessible for processes inside the namespace along with everything below them in the file system hierarchy. This may be more restrictive than desired, because it is not possible to nest `ReadWritePaths=`, `ReadOnlyPaths=`, `BindPaths=`, or `BindReadOnlyPaths=` inside it. For a more flexible option, see `TemporaryFileSystem=`.\n\nContent in paths listed in `NoExecPaths=` are not executable even if the usual file access controls would permit this. Nest `ExecPaths=` inside of `NoExecPaths=` in order to provide executable content within non-executable directories.\n\nNon-directory paths may be specified as well. These options may be specified more than once, in which case all paths listed will have limited access from within the namespace. If the empty string is assigned to this option, the specific list is reset, and all prior assignments have no effect.\n\nPaths in `ReadWritePaths=`, `ReadOnlyPaths=`, `InaccessiblePaths=`, `ExecPaths=` and `NoExecPaths=` may be prefixed with \"`-`\", in which case they will be ignored when they do not exist. If prefixed with \"`+`\" the paths are taken relative to the root directory of the unit, as configured with `RootDirectory=`/`RootImage=`, instead of relative to the root directory of the host (see above). When combining \"`-`\" and \"`+`\" on the same path make sure to specify \"`-`\" first, and \"`+`\" second.\n\nNote that these settings will disconnect propagation of mounts from the unit's processes to the host. This means that this setting may not be used for services which shall be able to install mount points in the main mount namespace. For `ReadWritePaths=` and `ReadOnlyPaths=` propagation in the other direction is not affected, i.e. mounts created on the host generally appear in the unit processes' namespace, and mounts removed on the host also disappear there too. In particular, note that mount propagation from host to unit will result in unmodified mounts to be created in the unit's namespace, i.e. writable mounts appearing on the host will be writable in the unit's namespace too, even when propagated below a path marked with `ReadOnlyPaths=`! Restricting access with these options hence does not extend to submounts of a directory that are created later on. This means the lock-down offered by that setting is not complete, and does not offer full protection.\n\nNote that the effect of these settings may be undone by privileged processes. In order to set up an effective sandboxed environment for a unit it is thus recommended to combine these settings with either `CapabilityBoundingSet=~CAP_SYS_ADMIN` or `SystemCallFilter=~@mount`.\n\nSimple allow-list example using these directives:\n\n\\[Service\\]\nReadOnlyPaths=/\nReadWritePaths=/var /run\nInaccessiblePaths=-/lost+found\nNoExecPaths=/\nExecPaths=/usr/sbin/my\\_daemon /usr/lib /usr/lib64\n\nThese options are only available for system services and are not supported for services running in per-user instances of the service manager."],
[4,221,"Takes a space-separated list of mount points for temporary file systems (tmpfs). If set, a new file system namespace is set up for executed processes, and a temporary file system is mounted on each mount point. This option may be specified more than once, in which case temporary file systems are mounted on all listed mount points. If the empty string is assigned to this option, the list is reset, and all prior assignments have no effect. Each mount point may optionally be suffixed with a colon (\"`:`\") and mount options such as \"`size=10%`\" or \"`ro`\". By default, each temporary file system is mounted with \"`nodev,strictatime,mode=0755`\". These can be disabled by explicitly specifying the corresponding mount options, e.g., \"`dev`\" or \"`nostrictatime`\".\n\nThis is useful to hide files or directories not relevant to the processes invoked by the unit, while necessary files or directories can be still accessed by combining with `BindPaths=` or `BindReadOnlyPaths=`:\n\nExample: if a unit has the following,\n\nTemporaryFileSystem=/var:ro\nBindReadOnlyPaths=/var/lib/systemd\n\nthen the invoked processes by the unit cannot see any files or directories under `/var/` except for `/var/lib/systemd` or its contents.\n\nThis option is only available for system services and is not supported for services running in per-user instances of the service manager."],
[4,222,"Takes a boolean argument. If true, sets up a new file system namespace for the executed processes and mounts private `/tmp/` and `/var/tmp/` directories inside it that are not shared by processes outside of the namespace. This is useful to secure access to temporary files of the process, but makes sharing between processes via `/tmp/` or `/var/tmp/` impossible. If true, all temporary files created by a service in these directories will be removed after the service is stopped. Defaults to false. It is possible to run two or more units within the same private `/tmp/` and `/var/tmp/` namespace by using the `JoinsNamespaceOf=` directive, see [systemd.unit(5)](systemd.unit.html#) for details. This setting is implied if `DynamicUser=` is set. For this setting the same restrictions regarding mount propagation and privileges apply as for `ReadOnlyPaths=` and related calls, see above. Enabling this setting has the side effect of adding `Requires=` and `After=` dependencies on all mount units necessary to access `/tmp/` and `/var/tmp/`. Moreover an implicitly `After=` ordering on [systemd-tmpfiles-setup.service(8)](systemd-tmpfiles-setup.service.html#) is added.\n\nNote that the implementation of this setting might be impossible (for example if mount namespaces are not available), and the unit should be written in a way that does not solely rely on this setting for security.\n\nThis option is only available for system services and is not supported for services running in per-user instances of the service manager."],
[4,223,"Takes a boolean argument. If true, sets up a new `/dev/` mount for the executed processes and only adds API pseudo devices such as `/dev/null`, `/dev/zero` or `/dev/random` (as well as the pseudo TTY subsystem) to it, but no physical devices such as `/dev/sda`, system memory `/dev/mem`, system ports `/dev/port` and others. This is useful to turn off physical device access by the executed process. Defaults to false.\n\nEnabling this option will install a system call filter to block low-level I/O system calls that are grouped in the `@raw-io` set, remove `CAP_MKNOD` and `CAP_SYS_RAWIO` from the capability bounding set for the unit, and set `DevicePolicy=closed` (see [systemd.resource-control(5)](systemd.resource-control.html#) for details). Note that using this setting will disconnect propagation of mounts from the service to the host (propagation in the opposite direction continues to work). This means that this setting may not be used for services which shall be able to install mount points in the main mount namespace. The new `/dev/` will be mounted read-only and 'noexec'. The latter may break old programs which try to set up executable memory by using [mmap(2)](http://man7.org/linux/man-pages/man2/mmap.2.html) of `/dev/zero` instead of using `MAP_ANON`. For this setting the same restrictions regarding mount propagation and privileges apply as for `ReadOnlyPaths=` and related calls, see above. If turned on and if running in user mode, or in system mode, but without the `CAP_SYS_ADMIN` capability (e.g. setting `User=`), `NoNewPrivileges=yes` is implied.\n\nNote that the implementation of this setting might be impossible (for example if mount namespaces are not available), and the unit should be written in a way that does not solely rely on this setting for security.\n\nThis option is only available for system services and is not supported for services running in per-user instances of the service manager.\n\nWhen access to some but not all devices must be possible, the `DeviceAllow=` setting might be used instead. See [systemd.resource-control(5)](systemd.resource-control.html#)."],
[4,224,"Takes a boolean argument. If true, sets up a new network namespace for the executed processes and configures only the loopback network device \"`lo`\" inside it. No other network devices will be available to the executed process. This is useful to turn off network access by the executed process. Defaults to false. It is possible to run two or more units within the same private network namespace by using the `JoinsNamespaceOf=` directive, see [systemd.unit(5)](systemd.unit.html#) for details. Note that this option will disconnect all socket families from the host, including `AF_NETLINK` and `AF_UNIX`. Effectively, for `AF_NETLINK` this means that device configuration events received from [systemd-udevd.service(8)](systemd-udevd.service.html#) are not delivered to the unit's processes. And for `AF_UNIX` this has the effect that `AF_UNIX` sockets in the abstract socket namespace of the host will become unavailable to the unit's processes (however, those located in the file system will continue to be accessible).\n\nNote that the implementation of this setting might be impossible (for example if network namespaces are not available), and the unit should be written in a way that does not solely rely on this setting for security.\n\nWhen this option is used on a socket unit any sockets bound on behalf of this unit will be bound within a private network namespace. This may be combined with `JoinsNamespaceOf=` to listen on sockets inside of network namespaces of other services.\n\nThis option is only available for system services and is not supported for services running in per-user instances of the service manager."],
[4,225,"Takes an absolute file system path refererring to a Linux network namespace pseudo-file (i.e. a file like `/proc/$PID/ns/net` or a bind mount or symlink to one). When set the invoked processes are added to the network namespace referenced by that path. The path has to point to a valid namespace file at the moment the processes are forked off. If this option is used `PrivateNetwork=` has no effect. If this option is used together with `JoinsNamespaceOf=` then it only has an effect if this unit is started before any of the listed units that have `PrivateNetwork=` or `NetworkNamespacePath=` configured, as otherwise the network namespace of those units is reused.\n\nWhen this option is used on a socket unit any sockets bound on behalf of this unit will be bound within the specified network namespace.\n\nThis option is only available for system services and is not supported for services running in per-user instances of the service manager."],
[4,226,"Takes a boolean argument. If true, sets up a new IPC namespace for the executed processes. Each IPC namespace has its own set of System V IPC identifiers and its own POSIX message queue file system. This is useful to avoid name clash of IPC identifiers. Defaults to false. It is possible to run two or more units within the same private IPC namespace by using the `JoinsNamespaceOf=` directive, see [systemd.unit(5)](systemd.unit.html#) for details.\n\nNote that IPC namespacing does not have an effect on `AF_UNIX` sockets, which are the most common form of IPC used on Linux. Instead, `AF_UNIX` sockets in the file system are subject to mount namespacing, and those in the abstract namespace are subject to network namespacing. IPC namespacing only has an effect on SysV IPC (which is mostly legacy) as well as POSIX message queues (for which `AF_UNIX`/`SOCK_SEQPACKET` sockets are typically a better replacement). IPC namespacing also has no effect on POSIX shared memory (which is subject to mount namespacing) either. See [ipc\\_namespaces(7)](http://man7.org/linux/man-pages/man7/ipc_namespaces.7.html) for the details.\n\nNote that the implementation of this setting might be impossible (for example if IPC namespaces are not available), and the unit should be written in a way that does not solely rely on this setting for security.\n\nThis option is only available for system services and is not supported for services running in per-user instances of the service manager."],
[4,227,"Takes an absolute file system path refererring to a Linux IPC namespace pseudo-file (i.e. a file like `/proc/$PID/ns/ipc` or a bind mount or symlink to one). When set the invoked processes are added to the network namespace referenced by that path. The path has to point to a valid namespace file at the moment the processes are forked off. If this option is used `PrivateIPC=` has no effect. If this option is used together with `JoinsNamespaceOf=` then it only has an effect if this unit is started before any of the listed units that have `PrivateIPC=` or `IPCNamespacePath=` configured, as otherwise the network namespace of those units is reused.\n\nThis option is only available for system services and is not supported for services running in per-user instances of the service manager."],
[4,228,"Takes a boolean argument. If true, sets up a new user namespace for the executed processes and configures a minimal user and group mapping, that maps the \"`root`\" user and group as well as the unit's own user and group to themselves and everything else to the \"`nobody`\" user and group. This is useful to securely detach the user and group databases used by the unit from the rest of the system, and thus to create an effective sandbox environment. All files, directories, processes, IPC objects and other resources owned by users/groups not equaling \"`root`\" or the unit's own will stay visible from within the unit but appear owned by the \"`nobody`\" user and group. If this mode is enabled, all unit processes are run without privileges in the host user namespace (regardless if the unit's own user/group is \"`root`\" or not). Specifically this means that the process will have zero process capabilities on the host's user namespace, but full capabilities within the service's user namespace. Settings such as `CapabilityBoundingSet=` will affect only the latter, and there's no way to acquire additional capabilities in the host's user namespace. Defaults to off.\n\nWhen this setting is set up by a per-user instance of the service manager, the mapping of the \"`root`\" user and group to itself is omitted (unless the user manager is root). Additionally, in the per-user instance manager case, the user namespace will be set up before most other namespaces. This means that combining `PrivateUsers=``true` with other namespaces will enable use of features not normally supported by the per-user instances of the service manager.\n\nThis setting is particularly useful in conjunction with `RootDirectory=`/`RootImage=`, as the need to synchronize the user and group databases in the root directory and on the host is reduced, as the only users and groups who need to be matched are \"`root`\", \"`nobody`\" and the unit's own user and group.\n\nNote that the implementation of this setting might be impossible (for example if user namespaces are not available), and the unit should be written in a way that does not solely rely on this setting for security."],
[4,229,"Takes a boolean argument. When set, sets up a new UTS namespace for the executed processes. In addition, changing hostname or domainname is prevented. Defaults to off.\n\nNote that the implementation of this setting might be impossible (for example if UTS namespaces are not available), and the unit should be written in a way that does not solely rely on this setting for security.\n\nNote that when this option is enabled for a service hostname changes no longer propagate from the system into the service, it is hence not suitable for services that need to take notice of system hostname changes dynamically.\n\nIf this setting is on, but the unit doesn't have the `CAP_SYS_ADMIN` capability (e.g. services for which `User=` is set), `NoNewPrivileges=yes` is implied.\n\nThis option is only available for system services and is not supported for services running in per-user instances of the service manager."],
[4,230,"Takes a boolean argument. If set, writes to the hardware clock or system clock will be denied. It is recommended to turn this on for most services that do not need modify the clock. Defaults to off. Enabling this option removes `CAP_SYS_TIME` and `CAP_WAKE_ALARM` from the capability bounding set for this unit, installs a system call filter to block calls that can set the clock, and `DeviceAllow=char-rtc r` is implied. This ensures `/dev/rtc0`, `/dev/rtc1`, etc. are made read-only to the service. See [systemd.resource-control(5)](systemd.resource-control.html#) for the details about `DeviceAllow=`. If this setting is on, but the unit doesn't have the `CAP_SYS_ADMIN` capability (e.g. services for which `User=` is set), `NoNewPrivileges=yes` is implied.\n\nThis option is only available for system services and is not supported for services running in per-user instances of the service manager."],
[4,231,"Takes a boolean argument. If true, kernel variables accessible through `/proc/sys/`, `/sys/`, `/proc/sysrq-trigger`, `/proc/latency_stats`, `/proc/acpi`, `/proc/timer_stats`, `/proc/fs` and `/proc/irq` will be made read-only to all processes of the unit. Usually, tunable kernel variables should be initialized only at boot-time, for example with the [sysctl.d(5)](sysctl.d.html#) mechanism. Few services need to write to these at runtime; it is hence recommended to turn this on for most services. For this setting the same restrictions regarding mount propagation and privileges apply as for `ReadOnlyPaths=` and related calls, see above. Defaults to off. If this setting is on, but the unit doesn't have the `CAP_SYS_ADMIN` capability (e.g. services for which `User=` is set), `NoNewPrivileges=yes` is implied. Note that this option does not prevent indirect changes to kernel tunables effected by IPC calls to other processes. However, `InaccessiblePaths=` may be used to make relevant IPC file system objects inaccessible. If `ProtectKernelTunables=` is set, `MountAPIVFS=yes` is implied.\n\nThis option is only available for system services and is not supported for services running in per-user instances of the service manager."],
[4,232,"Takes a boolean argument. If true, explicit module loading will be denied. This allows module load and unload operations to be turned off on modular kernels. It is recommended to turn this on for most services that do not need special file systems or extra kernel modules to work. Defaults to off. Enabling this option removes `CAP_SYS_MODULE` from the capability bounding set for the unit, and installs a system call filter to block module system calls, also `/usr/lib/modules` is made inaccessible. For this setting the same restrictions regarding mount propagation and privileges apply as for `ReadOnlyPaths=` and related calls, see above. Note that limited automatic module loading due to user configuration or kernel mapping tables might still happen as side effect of requested user operations, both privileged and unprivileged. To disable module auto-load feature please see [sysctl.d(5)](sysctl.d.html#) `kernel.modules_disabled` mechanism and `/proc/sys/kernel/modules_disabled` documentation. If this setting is on, but the unit doesn't have the `CAP_SYS_ADMIN` capability (e.g. services for which `User=` is set), `NoNewPrivileges=yes` is implied.\n\nThis option is only available for system services and is not supported for services running in per-user instances of the service manager."],
[4,233,"Takes a boolean argument. If true, access to the kernel log ring buffer will be denied. It is recommended to turn this on for most services that do not need to read from or write to the kernel log ring buffer. Enabling this option removes `CAP_SYSLOG` from the capability bounding set for this unit, and installs a system call filter to block the [syslog(2)](http://man7.org/linux/man-pages/man2/syslog.2.html) system call (not to be confused with the libc API [syslog(3)](http://man7.org/linux/man-pages/man3/syslog.3.html) for userspace logging). The kernel exposes its log buffer to userspace via `/dev/kmsg` and `/proc/kmsg`. If enabled, these are made inaccessible to all the processes in the unit. If this setting is on, but the unit doesn't have the `CAP_SYS_ADMIN` capability (e.g. services for which `User=` is set), `NoNewPrivileges=yes` is implied.\n\nThis option is only available for system services and is not supported for services running in per-user instances of the service manager."],
[4,234,"Takes a boolean argument. If true, the Linux Control Groups ([cgroups(7)](http://man7.org/linux/man-pages/man7/cgroups.7.html)) hierarchies accessible through `/sys/fs/cgroup/` will be made read-only to all processes of the unit. Except for container managers no services should require write access to the control groups hierarchies; it is hence recommended to turn this on for most services. For this setting the same restrictions regarding mount propagation and privileges apply as for `ReadOnlyPaths=` and related calls, see above. Defaults to off. If `ProtectControlGroups=` is set, `MountAPIVFS=yes` is implied.\n\nThis option is only available for system services and is not supported for services running in per-user instances of the service manager."],
[4,235,"Restricts the set of socket address families accessible to the processes of this unit. Takes \"`none`\", or a space-separated list of address family names to allow-list, such as `AF_UNIX`, `AF_INET` or `AF_INET6`. When \"`none`\" is specified, then all address families will be denied. When prefixed with \"`~`\" the listed address families will be applied as deny list, otherwise as allow list. Note that this restricts access to the [socket(2)](http://man7.org/linux/man-pages/man2/socket.2.html) system call only. Sockets passed into the process by other means (for example, by using socket activation with socket units, see [systemd.socket(5)](systemd.socket.html#)) are unaffected. Also, sockets created with `socketpair()` (which creates connected AF\\_UNIX sockets only) are unaffected. Note that this option has no effect on 32-bit x86, s390, s390x, mips, mips-le, ppc, ppc-le, ppc64, ppc64-le and is ignored (but works correctly on other ABIs, including x86-64). Note that on systems supporting multiple ABIs (such as x86/x86-64) it is recommended to turn off alternative ABIs for services, so that they cannot be used to circumvent the restrictions of this option. Specifically, it is recommended to combine this option with `SystemCallArchitectures=native` or similar. If running in user mode, or in system mode, but without the `CAP_SYS_ADMIN` capability (e.g. setting `User=`), `NoNewPrivileges=yes` is implied. By default, no restrictions apply, all address families are accessible to processes. If assigned the empty string, any previous address family restriction changes are undone. This setting does not affect commands prefixed with \"`+`\".\n\nUse this option to limit exposure of processes to remote access, in particular via exotic and sensitive network protocols, such as `AF_PACKET`. Note that in most cases, the local `AF_UNIX` address family should be included in the configured allow list as it is frequently used for local communication, including for [syslog(2)](http://man7.org/linux/man-pages/man2/syslog.2.html) logging."],
[4,236,"Restricts the set of filesystems processes of this unit can open files on. Takes a space-separated list of filesystem names. Any filesystem listed is made accessible to the unit's processes, access to filesystem types not listed is prohibited (allow-listing). If the first character of the list is \"`~`\", the effect is inverted: access to the filesystems listed is prohibited (deny-listing). If the empty string is assigned, access to filesystems is not restricted.\n\nIf you specify both types of this option (i.e. allow-listing and deny-listing), the first encountered will take precedence and will dictate the default action (allow access to the filesystem or deny it). Then the next occurrences of this option will add or delete the listed filesystems from the set of the restricted filesystems, depending on its type and the default action.\n\nExample: if a unit has the following,\n\nRestrictFileSystems=ext4 tmpfs\nRestrictFileSystems=ext2 ext4\n\nthen access to `ext4`, `tmpfs`, and `ext2` is allowed and access to other filesystems is denied.\n\nExample: if a unit has the following,\n\nRestrictFileSystems=ext4 tmpfs\nRestrictFileSystems=~ext4\n\nthen only access `tmpfs` is allowed.\n\nExample: if a unit has the following,\n\nRestrictFileSystems=~ext4 tmpfs\nRestrictFileSystems=ext4\n\nthen only access to `tmpfs` is denied.\n\nAs the number of possible filesystems is large, predefined sets of filesystems are provided. A set starts with \"`@`\" character, followed by name of the set.\n\n**TableÂ 3.Â Currently predefined filesystem sets**\n\nSet\n\nDescription\n\n@basic-api\n\nBasic filesystem API.\n\n@auxiliary-api\n\nAuxiliary filesystem API.\n\n@common-block\n\nCommon block device filesystems.\n\n@historical-block\n\nHistorical block device filesystems.\n\n@network\n\nWell-known network filesystems.\n\n@privileged-api\n\nPrivileged filesystem API.\n\n@temporary\n\nTemporary filesystems: tmpfs, ramfs.\n\n@known\n\nAll known filesystems defined by the kernel. This list is defined statically in systemd based on a kernel version that was available when this systemd version was released. It will become progressively more out-of-date as the kernel is updated.\n\n  \n\nUse [systemd-analyze(1)](systemd-analyze.html#)'s **filesystems** command to retrieve a list of filesystems defined on the local system.\n\nNote that this setting might not be supported on some systems (for example if the LSM eBPF hook is not enabled in the underlying kernel or if not using the unified control group hierarchy). In that case this setting has no effect."],
[4,237,"Restricts access to Linux namespace functionality for the processes of this unit. For details about Linux namespaces, see [namespaces(7)](http://man7.org/linux/man-pages/man7/namespaces.7.html). Either takes a boolean argument, or a space-separated list of namespace type identifiers. If false (the default), no restrictions on namespace creation and switching are made. If true, access to any kind of namespacing is prohibited. Otherwise, a space-separated list of namespace type identifiers must be specified, consisting of any combination of: `cgroup`, `ipc`, `net`, `mnt`, `pid`, `user` and `uts`. Any namespace type listed is made accessible to the unit's processes, access to namespace types not listed is prohibited (allow-listing). By prepending the list with a single tilde character (\"`~`\") the effect may be inverted: only the listed namespace types will be made inaccessible, all unlisted ones are permitted (deny-listing). If the empty string is assigned, the default namespace restrictions are applied, which is equivalent to false. This option may appear more than once, in which case the namespace types are merged by `OR`, or by `AND` if the lines are prefixed with \"`~`\" (see examples below). Internally, this setting limits access to the [unshare(2)](http://man7.org/linux/man-pages/man2/unshare.2.html), [clone(2)](http://man7.org/linux/man-pages/man2/clone.2.html) and [setns(2)](http://man7.org/linux/man-pages/man2/setns.2.html) system calls, taking the specified flags parameters into account. Note that â€” if this option is used â€” in addition to restricting creation and switching of the specified types of namespaces (or all of them, if true) access to the `setns()` system call with a zero flags parameter is prohibited. This setting is only supported on x86, x86-64, mips, mips-le, mips64, mips64-le, mips64-n32, mips64-le-n32, ppc64, ppc64-le, s390 and s390x, and enforces no restrictions on other architectures. If running in user mode, or in system mode, but without the `CAP_SYS_ADMIN` capability (e.g. setting `User=`), `NoNewPrivileges=yes` is implied.\n\nExample: if a unit has the following,\n\nRestrictNamespaces=cgroup ipc\nRestrictNamespaces=cgroup net\n\nthen `cgroup`, `ipc`, and `net` are set. If the second line is prefixed with \"`~`\", e.g.,\n\nRestrictNamespaces=cgroup ipc\nRestrictNamespaces=~cgroup net\n\nthen, only `ipc` is set."],
[4,238,"Takes a boolean argument. If set, locks down the [personality(2)](http://man7.org/linux/man-pages/man2/personality.2.html) system call so that the kernel execution domain may not be changed from the default or the personality selected with `Personality=` directive. This may be useful to improve security, because odd personality emulations may be poorly tested and source of vulnerabilities. If running in user mode, or in system mode, but without the `CAP_SYS_ADMIN` capability (e.g. setting `User=`), `NoNewPrivileges=yes` is implied."],
[4,239,"Takes a boolean argument. If set, attempts to create memory mappings that are writable and executable at the same time, or to change existing memory mappings to become executable, or mapping shared memory segments as executable are prohibited. Specifically, a system call filter is added that rejects [mmap(2)](http://man7.org/linux/man-pages/man2/mmap.2.html) system calls with both `PROT_EXEC` and `PROT_WRITE` set, [mprotect(2)](http://man7.org/linux/man-pages/man2/mprotect.2.html) or [pkey\\_mprotect(2)](http://man7.org/linux/man-pages/man2/pkey_mprotect.2.html) system calls with `PROT_EXEC` set and [shmat(2)](http://man7.org/linux/man-pages/man2/shmat.2.html) system calls with `SHM_EXEC` set. Note that this option is incompatible with programs and libraries that generate program code dynamically at runtime, including JIT execution engines, executable stacks, and code \"trampoline\" feature of various C compilers. This option improves service security, as it makes harder for software exploits to change running code dynamically. However, the protection can be circumvented, if the service can write to a filesystem, which is not mounted with `noexec` (such as `/dev/shm`), or it can use `memfd_create()`. This can be prevented by making such file systems inaccessible to the service (e.g. `InaccessiblePaths=/dev/shm`) and installing further system call filters (`SystemCallFilter=~memfd_create`). Note that this feature is fully available on x86-64, and partially on x86. Specifically, the `shmat()` protection is not available on x86. Note that on systems supporting multiple ABIs (such as x86/x86-64) it is recommended to turn off alternative ABIs for services, so that they cannot be used to circumvent the restrictions of this option. Specifically, it is recommended to combine this option with `SystemCallArchitectures=native` or similar. If running in user mode, or in system mode, but without the `CAP_SYS_ADMIN` capability (e.g. setting `User=`), `NoNewPrivileges=yes` is implied."],
[4,240,"Takes a boolean argument. If set, any attempts to enable realtime scheduling in a process of the unit are refused. This restricts access to realtime task scheduling policies such as `SCHED_FIFO`, `SCHED_RR` or `SCHED_DEADLINE`. See [sched(7)](http://man7.org/linux/man-pages/man7/sched.7.html) for details about these scheduling policies. If running in user mode, or in system mode, but without the `CAP_SYS_ADMIN` capability (e.g. setting `User=`), `NoNewPrivileges=yes` is implied. Realtime scheduling policies may be used to monopolize CPU time for longer periods of time, and may hence be used to lock up or otherwise trigger Denial-of-Service situations on the system. It is hence recommended to restrict access to realtime scheduling to the few programs that actually require them. Defaults to off."],
[4,241,"Takes a boolean argument. If set, any attempts to set the set-user-ID (SUID) or set-group-ID (SGID) bits on files or directories will be denied (for details on these bits see [inode(7)](http://man7.org/linux/man-pages/man7/inode.7.html)). If running in user mode, or in system mode, but without the `CAP_SYS_ADMIN` capability (e.g. setting `User=`), `NoNewPrivileges=yes` is implied. As the SUID/SGID bits are mechanisms to elevate privileges, and allows users to acquire the identity of other users, it is recommended to restrict creation of SUID/SGID files to the few programs that actually require them. Note that this restricts marking of any type of file system object with these bits, including both regular files and directories (where the SGID is a different meaning than for files, see documentation). This option is implied if `DynamicUser=` is enabled. Defaults to off."],
[4,242,"Takes a boolean parameter. If set, all System V and POSIX IPC objects owned by the user and group the processes of this unit are run as are removed when the unit is stopped. This setting only has an effect if at least one of `User=`, `Group=` and `DynamicUser=` are used. It has no effect on IPC objects owned by the root user. Specifically, this removes System V semaphores, as well as System V and POSIX shared memory segments and message queues. If multiple units use the same user or group the IPC objects are removed when the last of these units is stopped. This setting is implied if `DynamicUser=` is set.\n\nThis option is only available for system services and is not supported for services running in per-user instances of the service manager."],
[4,243,"Takes a boolean parameter. If set, the processes of this unit will be run in their own private file system (mount) namespace with all mount propagation from the processes towards the host's main file system namespace turned off. This means any file system mount points established or removed by the unit's processes will be private to them and not be visible to the host. However, file system mount points established or removed on the host will be propagated to the unit's processes. See [mount\\_namespaces(7)](http://man7.org/linux/man-pages/man7/mount_namespaces.7.html) for details on file system namespaces. Defaults to off.\n\nWhen turned on, this executes three operations for each invoked process: a new `CLONE_NEWNS` namespace is created, after which all existing mounts are remounted to `MS_SLAVE` to disable propagation from the unit's processes to the host (but leaving propagation in the opposite direction in effect). Finally, the mounts are remounted again to the propagation mode configured with `MountFlags=`, see below.\n\nFile system namespaces are set up individually for each process forked off by the service manager. Mounts established in the namespace of the process created by `ExecStartPre=` will hence be cleaned up automatically as soon as that process exits and will not be available to subsequent processes forked off for `ExecStart=` (and similar applies to the various other commands configured for units). Similarly, `JoinsNamespaceOf=` does not permit sharing kernel mount namespaces between units, it only enables sharing of the `/tmp/` and `/var/tmp/` directories.\n\nOther file system namespace unit settings â€” `PrivateMounts=`, `PrivateTmp=`, `PrivateDevices=`, `ProtectSystem=`, `ProtectHome=`, `ReadOnlyPaths=`, `InaccessiblePaths=`, `ReadWritePaths=`, â€¦ â€” also enable file system namespacing in a fashion equivalent to this option. Hence it is primarily useful to explicitly request this behaviour if none of the other settings are used.\n\nThis option is only available for system services and is not supported for services running in per-user instances of the service manager."],
[4,244,"Takes a mount propagation setting: `shared`, `slave` or `private`, which controls whether file system mount points in the file system namespaces set up for this unit's processes will receive or propagate mounts and unmounts from other file system namespaces. See [mount(2)](http://man7.org/linux/man-pages/man2/mount.2.html) for details on mount propagation, and the three propagation flags in particular.\n\nThis setting only controls the _final_ propagation setting in effect on all mount points of the file system namespace created for each process of this unit. Other file system namespacing unit settings (see the discussion in `PrivateMounts=` above) will implicitly disable mount and unmount propagation from the unit's processes towards the host by changing the propagation setting of all mount points in the unit's file system namespace to `slave` first. Setting this option to `shared` does not reestablish propagation in that case.\n\nIf not set â€“ but file system namespaces are enabled through another file system namespace unit setting â€“ `shared` mount propagation is used, but â€” as mentioned â€” as `slave` is applied first, propagation from the unit's processes to the host is still turned off.\n\nIt is not recommended to use `private` mount propagation for units, as this means temporary mounts (such as removable media) of the host will stay mounted and thus indefinitely busy in forked off processes, as unmount propagation events won't be received by the file system namespace of the unit.\n\nUsually, it is best to leave this setting unmodified, and use higher level file system namespacing options instead, in particular `PrivateMounts=`, see above.\n\nThis option is only available for system services and is not supported for services running in per-user instances of the service manager."],
[4,245,"Takes a space-separated list of system call names. If this setting is used, all system calls executed by the unit processes except for the listed ones will result in immediate process termination with the `SIGSYS` signal (allow-listing). (See `SystemCallErrorNumber=` below for changing the default action). If the first character of the list is \"`~`\", the effect is inverted: only the listed system calls will result in immediate process termination (deny-listing). Deny-listed system calls and system call groups may optionally be suffixed with a colon (\"`:`\") and \"`errno`\" error number (between 0 and 4095) or errno name such as `EPERM`, `EACCES` or `EUCLEAN` (see [errno(3)](http://man7.org/linux/man-pages/man3/errno.3.html) for a full list). This value will be returned when a deny-listed system call is triggered, instead of terminating the processes immediately. Special setting \"`kill`\" can be used to explicitly specify killing. This value takes precedence over the one given in `SystemCallErrorNumber=`, see below. If running in user mode, or in system mode, but without the `CAP_SYS_ADMIN` capability (e.g. setting `User=`), `NoNewPrivileges=yes` is implied. This feature makes use of the Secure Computing Mode 2 interfaces of the kernel ('seccomp filtering') and is useful for enforcing a minimal sandboxing environment. Note that the `execve()`, `exit()`, `exit_group()`, `getrlimit()`, `rt_sigreturn()`, `sigreturn()` system calls and the system calls for querying time and sleeping are implicitly allow-listed and do not need to be listed explicitly. This option may be specified more than once, in which case the filter masks are merged. If the empty string is assigned, the filter is reset, all prior assignments will have no effect. This does not affect commands prefixed with \"`+`\".\n\nNote that on systems supporting multiple ABIs (such as x86/x86-64) it is recommended to turn off alternative ABIs for services, so that they cannot be used to circumvent the restrictions of this option. Specifically, it is recommended to combine this option with `SystemCallArchitectures=native` or similar.\n\nNote that strict system call filters may impact execution and error handling code paths of the service invocation. Specifically, access to the `execve()` system call is required for the execution of the service binary â€” if it is blocked service invocation will necessarily fail. Also, if execution of the service binary fails for some reason (for example: missing service executable), the error handling logic might require access to an additional set of system calls in order to process and log this failure correctly. It might be necessary to temporarily disable system call filters in order to simplify debugging of such failures.\n\nIf you specify both types of this option (i.e. allow-listing and deny-listing), the first encountered will take precedence and will dictate the default action (termination or approval of a system call). Then the next occurrences of this option will add or delete the listed system calls from the set of the filtered system calls, depending of its type and the default action. (For example, if you have started with an allow list rule for `read()` and `write()`, and right after it add a deny list rule for `write()`, then `write()` will be removed from the set.)\n\nAs the number of possible system calls is large, predefined sets of system calls are provided. A set starts with \"`@`\" character, followed by name of the set.\n\n**TableÂ 4.Â Currently predefined system call sets**\n\nSet\n\nDescription\n\n@aio\n\nAsynchronous I/O ([io\\_setup(2)](http://man7.org/linux/man-pages/man2/io_setup.2.html), [io\\_submit(2)](http://man7.org/linux/man-pages/man2/io_submit.2.html), and related calls)\n\n@basic-io\n\nSystem calls for basic I/O: reading, writing, seeking, file descriptor duplication and closing ([read(2)](http://man7.org/linux/man-pages/man2/read.2.html), [write(2)](http://man7.org/linux/man-pages/man2/write.2.html), and related calls)\n\n@chown\n\nChanging file ownership ([chown(2)](http://man7.org/linux/man-pages/man2/chown.2.html), [fchownat(2)](http://man7.org/linux/man-pages/man2/fchownat.2.html), and related calls)\n\n@clock\n\nSystem calls for changing the system clock ([adjtimex(2)](http://man7.org/linux/man-pages/man2/adjtimex.2.html), [settimeofday(2)](http://man7.org/linux/man-pages/man2/settimeofday.2.html), and related calls)\n\n@cpu-emulation\n\nSystem calls for CPU emulation functionality ([vm86(2)](http://man7.org/linux/man-pages/man2/vm86.2.html) and related calls)\n\n@debug\n\nDebugging, performance monitoring and tracing functionality ([ptrace(2)](http://man7.org/linux/man-pages/man2/ptrace.2.html), [perf\\_event\\_open(2)](http://man7.org/linux/man-pages/man2/perf_event_open.2.html) and related calls)\n\n@file-system\n\nFile system operations: opening, creating files and directories for read and write, renaming and removing them, reading file properties, or creating hard and symbolic links\n\n@io-event\n\nEvent loop system calls ([poll(2)](http://man7.org/linux/man-pages/man2/poll.2.html), [select(2)](http://man7.org/linux/man-pages/man2/select.2.html), [epoll(7)](http://man7.org/linux/man-pages/man7/epoll.7.html), [eventfd(2)](http://man7.org/linux/man-pages/man2/eventfd.2.html) and related calls)\n\n@ipc\n\nPipes, SysV IPC, POSIX Message Queues and other IPC ([mq\\_overview(7)](http://man7.org/linux/man-pages/man7/mq_overview.7.html), [svipc(7)](http://man7.org/linux/man-pages/man7/svipc.7.html))\n\n@keyring\n\nKernel keyring access ([keyctl(2)](http://man7.org/linux/man-pages/man2/keyctl.2.html) and related calls)\n\n@memlock\n\nLocking of memory in RAM ([mlock(2)](http://man7.org/linux/man-pages/man2/mlock.2.html), [mlockall(2)](http://man7.org/linux/man-pages/man2/mlockall.2.html) and related calls)\n\n@module\n\nLoading and unloading of kernel modules ([init\\_module(2)](http://man7.org/linux/man-pages/man2/init_module.2.html), [delete\\_module(2)](http://man7.org/linux/man-pages/man2/delete_module.2.html) and related calls)\n\n@mount\n\nMounting and unmounting of file systems ([mount(2)](http://man7.org/linux/man-pages/man2/mount.2.html), [chroot(2)](http://man7.org/linux/man-pages/man2/chroot.2.html), and related calls)\n\n@network-io\n\nSocket I/O (including local AF\\_UNIX): [socket(7)](http://man7.org/linux/man-pages/man7/socket.7.html), [unix(7)](http://man7.org/linux/man-pages/man7/unix.7.html)\n\n@obsolete\n\nUnusual, obsolete or unimplemented ([create\\_module(2)](http://man7.org/linux/man-pages/man2/create_module.2.html), [gtty(2)](http://man7.org/linux/man-pages/man2/gtty.2.html), â€¦)\n\n@privileged\n\nAll system calls which need super-user capabilities ([capabilities(7)](http://man7.org/linux/man-pages/man7/capabilities.7.html))\n\n@process\n\nProcess control, execution, namespacing operations ([clone(2)](http://man7.org/linux/man-pages/man2/clone.2.html), [kill(2)](http://man7.org/linux/man-pages/man2/kill.2.html), [namespaces(7)](http://man7.org/linux/man-pages/man7/namespaces.7.html), â€¦)\n\n@raw-io\n\nRaw I/O port access ([ioperm(2)](http://man7.org/linux/man-pages/man2/ioperm.2.html), [iopl(2)](http://man7.org/linux/man-pages/man2/iopl.2.html), `pciconfig_read()`, â€¦)\n\n@reboot\n\nSystem calls for rebooting and reboot preparation ([reboot(2)](http://man7.org/linux/man-pages/man2/reboot.2.html), `kexec()`, â€¦)\n\n@resources\n\nSystem calls for changing resource limits, memory and scheduling parameters ([setrlimit(2)](http://man7.org/linux/man-pages/man2/setrlimit.2.html), [setpriority(2)](http://man7.org/linux/man-pages/man2/setpriority.2.html), â€¦)\n\n@setuid\n\nSystem calls for changing user ID and group ID credentials, ([setuid(2)](http://man7.org/linux/man-pages/man2/setuid.2.html), [setgid(2)](http://man7.org/linux/man-pages/man2/setgid.2.html), [setresuid(2)](http://man7.org/linux/man-pages/man2/setresuid.2.html), â€¦)\n\n@signal\n\nSystem calls for manipulating and handling process signals ([signal(2)](http://man7.org/linux/man-pages/man2/signal.2.html), [sigprocmask(2)](http://man7.org/linux/man-pages/man2/sigprocmask.2.html), â€¦)\n\n@swap\n\nSystem calls for enabling/disabling swap devices ([swapon(2)](http://man7.org/linux/man-pages/man2/swapon.2.html), [swapoff(2)](http://man7.org/linux/man-pages/man2/swapoff.2.html))\n\n@sync\n\nSynchronizing files and memory to disk ([fsync(2)](http://man7.org/linux/man-pages/man2/fsync.2.html), [msync(2)](http://man7.org/linux/man-pages/man2/msync.2.html), and related calls)\n\n@system-service\n\nA reasonable set of system calls used by common system services, excluding any special purpose calls. This is the recommended starting point for allow-listing system calls for system services, as it contains what is typically needed by system services, but excludes overly specific interfaces. For example, the following APIs are excluded: \"`@clock`\", \"`@mount`\", \"`@swap`\", \"`@reboot`\".\n\n@timer\n\nSystem calls for scheduling operations by time ([alarm(2)](http://man7.org/linux/man-pages/man2/alarm.2.html), [timer\\_create(2)](http://man7.org/linux/man-pages/man2/timer_create.2.html), â€¦)\n\n@known\n\nAll system calls defined by the kernel. This list is defined statically in systemd based on a kernel version that was available when this systemd version was released. It will become progressively more out-of-date as the kernel is updated.\n\n  \nNote, that as new system calls are added to the kernel, additional system calls might be added to the groups above. Contents of the sets may also change between systemd versions. In addition, the list of system calls depends on the kernel version and architecture for which systemd was compiled. Use **systemd-analyzeÂ syscall-filter** to list the actual list of system calls in each filter.\n\nGenerally, allow-listing system calls (rather than deny-listing) is the safer mode of operation. It is recommended to enforce system call allow lists for all long-running system services. Specifically, the following lines are a relatively safe basic choice for the majority of system services:\n\n\\[Service\\]\nSystemCallFilter=@system-service\nSystemCallErrorNumber=EPERM\n\nNote that various kernel system calls are defined redundantly: there are multiple system calls for executing the same operation. For example, the `pidfd_send_signal()` system call may be used to execute operations similar to what can be done with the older `kill()` system call, hence blocking the latter without the former only provides weak protection. Since new system calls are added regularly to the kernel as development progresses, keeping system call deny lists comprehensive requires constant work. It is thus recommended to use allow-listing instead, which offers the benefit that new system calls are by default implicitly blocked until the allow list is updated.\n\nAlso note that a number of system calls are required to be accessible for the dynamic linker to work. The dynamic linker is required for running most regular programs (specifically: all dynamic ELF binaries, which is how most distributions build packaged programs). This means that blocking these system calls (which include `open()`, `openat()` or `mmap()`) will make most programs typically shipped with generic distributions unusable.\n\nIt is recommended to combine the file system namespacing related options with `SystemCallFilter=~@mount`, in order to prohibit the unit's processes to undo the mappings. Specifically these are the options `PrivateTmp=`, `PrivateDevices=`, `ProtectSystem=`, `ProtectHome=`, `ProtectKernelTunables=`, `ProtectControlGroups=`, `ProtectKernelLogs=`, `ProtectClock=`, `ReadOnlyPaths=`, `InaccessiblePaths=` and `ReadWritePaths=`."],
[4,246,"Takes an \"`errno`\" error number (between 1 and 4095) or errno name such as `EPERM`, `EACCES` or `EUCLEAN`, to return when the system call filter configured with `SystemCallFilter=` is triggered, instead of terminating the process immediately. See [errno(3)](http://man7.org/linux/man-pages/man3/errno.3.html) for a full list of error codes. When this setting is not used, or when the empty string or the special setting \"`kill`\" is assigned, the process will be terminated immediately when the filter is triggered."],
[4,247,"Takes a space-separated list of architecture identifiers to include in the system call filter. The known architecture identifiers are the same as for `ConditionArchitecture=` described in [systemd.unit(5)](systemd.unit.html#), as well as `x32`, `mips64-n32`, `mips64-le-n32`, and the special identifier `native`. The special identifier `native` implicitly maps to the native architecture of the system (or more precisely: to the architecture the system manager is compiled for). If running in user mode, or in system mode, but without the `CAP_SYS_ADMIN` capability (e.g. setting `User=`), `NoNewPrivileges=yes` is implied. By default, this option is set to the empty list, i.e. no filtering is applied.\n\nIf this setting is used, processes of this unit will only be permitted to call native system calls, and system calls of the specified architectures. For the purposes of this option, the x32 architecture is treated as including x86-64 system calls. However, this setting still fulfills its purpose, as explained below, on x32.\n\nSystem call filtering is not equally effective on all architectures. For example, on x86 filtering of network socket-related calls is not possible, due to ABI limitations â€” a limitation that x86-64 does not have, however. On systems supporting multiple ABIs at the same time â€” such as x86/x86-64 â€” it is hence recommended to limit the set of permitted system call architectures so that secondary ABIs may not be used to circumvent the restrictions applied to the native ABI of the system. In particular, setting `SystemCallArchitectures=native` is a good choice for disabling non-native ABIs.\n\nSystem call architectures may also be restricted system-wide via the `SystemCallArchitectures=` option in the global configuration. See [systemd-system.conf(5)](systemd-system.conf.html#) for details."],
[4,248,"Takes a space-separated list of system call names. If this setting is used, all system calls executed by the unit processes for the listed ones will be logged. If the first character of the list is \"`~`\", the effect is inverted: all system calls except the listed system calls will be logged. If running in user mode, or in system mode, but without the `CAP_SYS_ADMIN` capability (e.g. setting `User=`), `NoNewPrivileges=yes` is implied. This feature makes use of the Secure Computing Mode 2 interfaces of the kernel ('seccomp filtering') and is useful for auditing or setting up a minimal sandboxing environment. This option may be specified more than once, in which case the filter masks are merged. If the empty string is assigned, the filter is reset, all prior assignments will have no effect. This does not affect commands prefixed with \"`+`\"."],
[4,249,"Sets environment variables for executed processes. Each line is unquoted using the rules described in \"Quoting\" section in [systemd.syntax(7)](systemd.syntax.html#) and becomes a list of variable assignments. If you need to assign a value containing spaces or the equals sign to a variable, put quotes around the whole assignment. Variable expansion is not performed inside the strings and the \"`$`\" character has no special meaning. Specifier expansion is performed, see the \"Specifiers\" section in [systemd.unit(5)](systemd.unit.html#).\n\nThis option may be specified more than once, in which case all listed variables will be set. If the same variable is listed twice, the later setting will override the earlier setting. If the empty string is assigned to this option, the list of environment variables is reset, all prior assignments have no effect.\n\nThe names of the variables can contain ASCII letters, digits, and the underscore character. Variable names cannot be empty or start with a digit. In variable values, most characters are allowed, but non-printable characters are currently rejected.\n\nExample:\n\nEnvironment=\"VAR1=word1 word2\" VAR2=word3 \"VAR3=$word 5 6\"\n\ngives three variables \"`VAR1`\", \"`VAR2`\", \"`VAR3`\" with the values \"`word1 word2`\", \"`word3`\", \"`$word 5 6`\".\n\nSee [environ(7)](http://man7.org/linux/man-pages/man7/environ.7.html) for details about environment variables.\n\nNote that environment variables are not suitable for passing secrets (such as passwords, key material, â€¦) to service processes. Environment variables set for a unit are exposed to unprivileged clients via D-Bus IPC, and generally not understood as being data that requires protection. Moreover, environment variables are propagated down the process tree, including across security boundaries (such as setuid/setgid executables), and hence might leak to processes that should not have access to the secret data. Use `LoadCredential=`, `LoadCredentialEncrypted=` or `SetCredentialEncrypted=` (see below) to pass data to unit processes securely."],
[4,250,"Similar to `Environment=` but reads the environment variables from a text file. The text file should contain new-line-separated variable assignments. Empty lines, lines without an \"`=`\" separator, or lines starting with ; or # will be ignored, which may be used for commenting. A line ending with a backslash will be concatenated with the following one, allowing multiline variable definitions. The parser strips leading and trailing whitespace from the values of assignments, unless you use double quotes (\").\n\n[C escapes](https://en.wikipedia.org/wiki/Escape_sequences_in_C#Table_of_escape_sequences) are supported, but not [most control characters](https://en.wikipedia.org/wiki/Control_character#In_ASCII). \"`\\t`\" and \"`\\n`\" can be used to insert tabs and newlines within `EnvironmentFile=`.\n\nThe argument passed should be an absolute filename or wildcard expression, optionally prefixed with \"`-`\", which indicates that if the file does not exist, it will not be read and no error or warning message is logged. This option may be specified more than once in which case all specified files are read. If the empty string is assigned to this option, the list of file to read is reset, all prior assignments have no effect.\n\nThe files listed with this directive will be read shortly before the process is executed (more specifically, after all processes from a previous unit state terminated. This means you can generate these files in one unit state, and read it with this option in the next. The files are read from the file system of the service manager, before any file system changes like bind mounts take place).\n\nSettings from these files override settings made with `Environment=`. If the same variable is set twice from these files, the files will be read in the order they are specified and the later setting will override the earlier setting."],
[4,251,"Pass environment variables set for the system service manager to executed processes. Takes a space-separated list of variable names. This option may be specified more than once, in which case all listed variables will be passed. If the empty string is assigned to this option, the list of environment variables to pass is reset, all prior assignments have no effect. Variables specified that are not set for the system manager will not be passed and will be silently ignored. Note that this option is only relevant for the system service manager, as system services by default do not automatically inherit any environment variables set for the service manager itself. However, in case of the user service manager all environment variables are passed to the executed processes anyway, hence this option is without effect for the user service manager.\n\nVariables set for invoked processes due to this setting are subject to being overridden by those configured with `Environment=` or `EnvironmentFile=`.\n\n[C escapes](https://en.wikipedia.org/wiki/Escape_sequences_in_C#Table_of_escape_sequences) are supported, but not [most control characters](https://en.wikipedia.org/wiki/Control_character#In_ASCII). \"`\\t`\" and \"`\\n`\" can be used to insert tabs and newlines within `EnvironmentFile=`.\n\nExample:\n\nPassEnvironment=VAR1 VAR2 VAR3\n\npasses three variables \"`VAR1`\", \"`VAR2`\", \"`VAR3`\" with the values set for those variables in PID1.\n\nSee [environ(7)](http://man7.org/linux/man-pages/man7/environ.7.html) for details about environment variables."],
[4,252,"Explicitly unset environment variable assignments that would normally be passed from the service manager to invoked processes of this unit. Takes a space-separated list of variable names or variable assignments. This option may be specified more than once, in which case all listed variables/assignments will be unset. If the empty string is assigned to this option, the list of environment variables/assignments to unset is reset. If a variable assignment is specified (that is: a variable name, followed by \"`=`\", followed by its value), then any environment variable matching this precise assignment is removed. If a variable name is specified (that is a variable name without any following \"`=`\" or value), then any assignment matching the variable name, regardless of its value is removed. Note that the effect of `UnsetEnvironment=` is applied as final step when the environment list passed to executed processes is compiled. That means it may undo assignments from any configuration source, including assignments made through `Environment=` or `EnvironmentFile=`, inherited from the system manager's global set of environment variables, inherited via `PassEnvironment=`, set by the service manager itself (such as `$NOTIFY_SOCKET` and such), or set by a PAM module (in case `PAMName=` is used).\n\nSee \"Environment Variables in Spawned Processes\" below for a description of how those settings combine to form the inherited environment. See [environ(7)](http://man7.org/linux/man-pages/man7/environ.7.html) for general information about environment variables."],
[4,253,"Controls where file descriptor 0 (STDIN) of the executed processes is connected to. Takes one of `null`, `tty`, `tty-force`, `tty-fail`, `data`, ``file:_`path`_``, `socket` or ``fd:_`name`_``.\n\nIf `null` is selected, standard input will be connected to `/dev/null`, i.e. all read attempts by the process will result in immediate EOF.\n\nIf `tty` is selected, standard input is connected to a TTY (as configured by `TTYPath=`, see below) and the executed process becomes the controlling process of the terminal. If the terminal is already being controlled by another process, the executed process waits until the current controlling process releases the terminal.\n\n`tty-force` is similar to `tty`, but the executed process is forcefully and immediately made the controlling process of the terminal, potentially removing previous controlling processes from the terminal.\n\n`tty-fail` is similar to `tty`, but if the terminal already has a controlling process start-up of the executed process fails.\n\nThe `data` option may be used to configure arbitrary textual or binary data to pass via standard input to the executed process. The data to pass is configured via `StandardInputText=`/`StandardInputData=` (see below). Note that the actual file descriptor type passed (memory file, regular file, UNIX pipe, â€¦) might depend on the kernel and available privileges. In any case, the file descriptor is read-only, and when read returns the specified data followed by EOF.\n\nThe ``file:_`path`_`` option may be used to connect a specific file system object to standard input. An absolute path following the \"`:`\" character is expected, which may refer to a regular file, a FIFO or special file. If an `AF_UNIX` socket in the file system is specified, a stream socket is connected to it. The latter is useful for connecting standard input of processes to arbitrary system services.\n\nThe `socket` option is valid in socket-activated services only, and requires the relevant socket unit file (see [systemd.socket(5)](systemd.socket.html#) for details) to have `Accept=yes` set, or to specify a single socket only. If this option is set, standard input will be connected to the socket the service was activated from, which is primarily useful for compatibility with daemons designed for use with the traditional [inetd(8)](https://www.freebsd.org/cgi/man.cgi?inetd(8)) socket activation daemon.\n\nThe ``fd:_`name`_`` option connects standard input to a specific, named file descriptor provided by a socket unit. The name may be specified as part of this option, following a \"`:`\" character (e.g. \"`fd:foobar`\"). If no name is specified, the name \"`stdin`\" is implied (i.e. \"`fd`\" is equivalent to \"`fd:stdin`\"). At least one socket unit defining the specified name must be provided via the `Sockets=` option, and the file descriptor name may differ from the name of its containing socket unit. If multiple matches are found, the first one will be used. See `FileDescriptorName=` in [systemd.socket(5)](systemd.socket.html#) for more details about named file descriptors and their ordering.\n\nThis setting defaults to `null`, unless `StandardInputText=`/`StandardInputData=` are set, in which case it defaults to `data`."],
[4,254,"Controls where file descriptor 1 (stdout) of the executed processes is connected to. Takes one of `inherit`, `null`, `tty`, `journal`, `kmsg`, `journal+console`, `kmsg+console`, ``file:_`path`_``, ``append:_`path`_``, ``truncate:_`path`_``, `socket` or ``fd:_`name`_``.\n\n`inherit` duplicates the file descriptor of standard input for standard output.\n\n`null` connects standard output to `/dev/null`, i.e. everything written to it will be lost.\n\n`tty` connects standard output to a tty (as configured via `TTYPath=`, see below). If the TTY is used for output only, the executed process will not become the controlling process of the terminal, and will not fail or wait for other processes to release the terminal.\n\n`journal` connects standard output with the journal, which is accessible via [journalctl(1)](journalctl.html#). Note that everything that is written to kmsg (see below) is implicitly stored in the journal as well, the specific option listed below is hence a superset of this one. (Also note that any external, additional syslog daemons receive their log data from the journal, too, hence this is the option to use when logging shall be processed with such a daemon.)\n\n`kmsg` connects standard output with the kernel log buffer which is accessible via [dmesg(1)](http://man7.org/linux/man-pages/man1/dmesg.1.html), in addition to the journal. The journal daemon might be configured to send all logs to kmsg anyway, in which case this option is no different from `journal`.\n\n`journal+console` and `kmsg+console` work in a similar way as the two options above but copy the output to the system console as well.\n\nThe ``file:_`path`_`` option may be used to connect a specific file system object to standard output. The semantics are similar to the same option of `StandardInput=`, see above. If _`path`_ refers to a regular file on the filesystem, it is opened (created if it doesn't exist yet) for writing at the beginning of the file, but without truncating it. If standard input and output are directed to the same file path, it is opened only once, for reading as well as writing and duplicated. This is particularly useful when the specified path refers to an `AF_UNIX` socket in the file system, as in that case only a single stream connection is created for both input and output.\n\n``append:_`path`_`` is similar to ``file:_`path`_`` above, but it opens the file in append mode.\n\n``truncate:_`path`_`` is similar to ``file:_`path`_`` above, but it truncates the file when opening it. For units with multiple command lines, e.g. `Type=oneshot` services with multiple `ExecStart=`, or services with `ExecCondition=`, `ExecStartPre=` or `ExecStartPost=`, the output file is reopened and therefore re-truncated for each command line. If the output file is truncated while another process still has the file open, e.g. by an `ExecReload=` running concurrently with an `ExecStart=`, and the other process continues writing to the file without adjusting its offset, then the space between the file pointers of the two processes may be filled with `NUL` bytes, producing a sparse file. Thus, ``truncate:_`path`_`` is typically only useful for units where only one process runs at a time, such as services with a single `ExecStart=` and no `ExecStartPost=`, `ExecReload=`, `ExecStop=` or similar.\n\n`socket` connects standard output to a socket acquired via socket activation. The semantics are similar to the same option of `StandardInput=`, see above.\n\nThe ``fd:_`name`_`` option connects standard output to a specific, named file descriptor provided by a socket unit. A name may be specified as part of this option, following a \"`:`\" character (e.g. \"`fd:foobar`\"). If no name is specified, the name \"`stdout`\" is implied (i.e. \"`fd`\" is equivalent to \"`fd:stdout`\"). At least one socket unit defining the specified name must be provided via the `Sockets=` option, and the file descriptor name may differ from the name of its containing socket unit. If multiple matches are found, the first one will be used. See `FileDescriptorName=` in [systemd.socket(5)](systemd.socket.html#) for more details about named descriptors and their ordering.\n\nIf the standard output (or error output, see below) of a unit is connected to the journal or the kernel log buffer, the unit will implicitly gain a dependency of type `After=` on `systemd-journald.socket` (also see the \"Implicit Dependencies\" section above). Also note that in this case stdout (or stderr, see below) will be an `AF_UNIX` stream socket, and not a pipe or FIFO that can be re-opened. This means when executing shell scripts the construct **echo \"hello\" > /dev/stderr** for writing text to stderr will not work. To mitigate this use the construct **echo \"hello\" >&2** instead, which is mostly equivalent and avoids this pitfall.\n\nThis setting defaults to the value set with `DefaultStandardOutput=` in [systemd-system.conf(5)](systemd-system.conf.html#), which defaults to `journal`. Note that setting this parameter might result in additional dependencies to be added to the unit (see above)."],
[4,255,"Controls where file descriptor 2 (stderr) of the executed processes is connected to. The available options are identical to those of `StandardOutput=`, with some exceptions: if set to `inherit` the file descriptor used for standard output is duplicated for standard error, while ``fd:_`name`_`` will use a default file descriptor name of \"`stderr`\".\n\nThis setting defaults to the value set with `DefaultStandardError=` in [systemd-system.conf(5)](systemd-system.conf.html#), which defaults to `inherit`. Note that setting this parameter might result in additional dependencies to be added to the unit (see above)."],
[4,256,"Configures arbitrary textual or binary data to pass via file descriptor 0 (STDIN) to the executed processes. These settings have no effect unless `StandardInput=` is set to `data` (which is the default if `StandardInput=` is not set otherwise, but `StandardInputText=`/`StandardInputData=` is). Use this option to embed process input data directly in the unit file.\n\n`StandardInputText=` accepts arbitrary textual data. C-style escapes for special characters as well as the usual \"`%`\"-specifiers are resolved. Each time this setting is used the specified text is appended to the per-unit data buffer, followed by a newline character (thus every use appends a new line to the end of the buffer). Note that leading and trailing whitespace of lines configured with this option is removed. If an empty line is specified the buffer is cleared (hence, in order to insert an empty line, add an additional \"`\\n`\" to the end or beginning of a line).\n\n`StandardInputData=` accepts arbitrary binary data, encoded in [Base64](https://tools.ietf.org/html/rfc2045#section-6.8). No escape sequences or specifiers are resolved. Any whitespace in the encoded version is ignored during decoding.\n\nNote that `StandardInputText=` and `StandardInputData=` operate on the same data buffer, and may be mixed in order to configure both binary and textual data for the same input stream. The textual or binary data is joined strictly in the order the settings appear in the unit file. Assigning an empty string to either will reset the data buffer.\n\nPlease keep in mind that in order to maintain readability long unit file settings may be split into multiple lines, by suffixing each line (except for the last) with a \"`\\`\" character (see [systemd.unit(5)](systemd.unit.html#) for details). This is particularly useful for large data configured with these two options. Example:\n\nâ€¦\nStandardInput=data\nStandardInputData=SWNrIHNpdHplIGRhIHVuJyBlc3NlIEtsb3BzLAp1ZmYgZWVtYWwga2xvcHAncy4KSWNrIGtpZWtl \\\\\n                  LCBzdGF1bmUsIHd1bmRyZSBtaXIsCnVmZiBlZW1hbCBqZWh0IHNlIHVmZiBkaWUgVMO8ci4KTmFu \\\\\n                  dSwgZGVuayBpY2ssIGljayBkZW5rIG5hbnUhCkpldHogaXNzZSB1ZmYsIGVyc2NodCB3YXIgc2Ug \\\\\n                  enUhCkljayBqZWhlIHJhdXMgdW5kIGJsaWNrZSDigJQKdW5kIHdlciBzdGVodCBkcmF1w59lbj8g \\\\\n                  SWNrZSEK\nâ€¦"],
[4,257,"Configures filtering by log level of log messages generated by this unit. Takes a **syslog** log level, one of `emerg` (lowest log level, only highest priority messages), `alert`, `crit`, `err`, `warning`, `notice`, `info`, `debug` (highest log level, also lowest priority messages). See [syslog(3)](http://man7.org/linux/man-pages/man3/syslog.3.html) for details. By default no filtering is applied (i.e. the default maximum log level is `debug`). Use this option to configure the logging system to drop log messages of a specific service above the specified level. For example, set `LogLevelMax=``info` in order to turn off debug logging of a particularly chatty unit. Note that the configured level is applied to any log messages written by any of the processes belonging to this unit, as well as any log messages written by the system manager process (PID 1) in reference to this unit, sent via any supported logging protocol. The filtering is applied early in the logging pipeline, before any kind of further processing is done. Moreover, messages which pass through this filter successfully might still be dropped by filters applied at a later stage in the logging subsystem. For example, `MaxLevelStore=` configured in [journald.conf(5)](journald.conf.html#) might prohibit messages of higher log levels to be stored on disk, even though the per-unit `LogLevelMax=` permitted it to be processed."],
[4,258,"Configures additional log metadata fields to include in all log records generated by processes associated with this unit. This setting takes one or more journal field assignments in the format \"`FIELD=VALUE`\" separated by whitespace. See [systemd.journal-fields(7)](systemd.journal-fields.html#) for details on the journal field concept. Even though the underlying journal implementation permits binary field values, this setting accepts only valid UTF-8 values. To include space characters in a journal field value, enclose the assignment in double quotes (\"). The usual specifiers are expanded in all assignments (see below). Note that this setting is not only useful for attaching additional metadata to log records of a unit, but given that all fields and values are indexed may also be used to implement cross-unit log record matching. Assign an empty string to reset the list."],
[4,259,"Configures the rate limiting that is applied to messages generated by this unit. If, in the time interval defined by `LogRateLimitIntervalSec=`, more messages than specified in `LogRateLimitBurst=` are logged by a service, all further messages within the interval are dropped until the interval is over. A message about the number of dropped messages is generated. The time specification for `LogRateLimitIntervalSec=` may be specified in the following units: \"s\", \"min\", \"h\", \"ms\", \"us\" (see [systemd.time(7)](systemd.time.html#) for details). The default settings are set by `RateLimitIntervalSec=` and `RateLimitBurst=` configured in [journald.conf(5)](journald.conf.html#)."],
[4,260,"Run the unit's processes in the specified journal namespace. Expects a short user-defined string identifying the namespace. If not used the processes of the service are run in the default journal namespace, i.e. their log stream is collected and processed by `systemd-journald.service`. If this option is used any log data generated by processes of this unit (regardless if via the `syslog()`, journal native logging or stdout/stderr logging) is collected and processed by an instance of the `systemd-journald@.service` template unit, which manages the specified namespace. The log data is stored in a data store independent from the default log namespace's data store. See [systemd-journald.service(8)](systemd-journald.service.html#) for details about journal namespaces.\n\nInternally, journal namespaces are implemented through Linux mount namespacing and over-mounting the directory that contains the relevant `AF_UNIX` sockets used for logging in the unit's mount namespace. Since mount namespaces are used this setting disconnects propagation of mounts from the unit's processes to the host, similar to how `ReadOnlyPaths=` and similar settings (see above) work. Journal namespaces may hence not be used for services that need to establish mount points on the host.\n\nWhen this option is used the unit will automatically gain ordering and requirement dependencies on the two socket units associated with the `systemd-journald@.service` instance so that they are automatically established prior to the unit starting up. Note that when this option is used log output of this service does not appear in the regular [journalctl(1)](journalctl.html#) output, unless the `--namespace=` option is used.\n\nThis option is only available for system services and is not supported for services running in per-user instances of the service manager."],
[4,261,"Sets the process name (\"**syslog** tag\") to prefix log lines sent to the logging system or the kernel log buffer with. If not set, defaults to the process name of the executed process. This option is only useful when `StandardOutput=` or `StandardError=` are set to `journal` or `kmsg` (or to the same settings in combination with `+console`) and only applies to log messages written to stdout or stderr."],
[4,262,"Sets the **syslog** facility identifier to use when logging. One of `kern`, `user`, `mail`, `daemon`, `auth`, `syslog`, `lpr`, `news`, `uucp`, `cron`, `authpriv`, `ftp`, `local0`, `local1`, `local2`, `local3`, `local4`, `local5`, `local6` or `local7`. See [syslog(3)](http://man7.org/linux/man-pages/man3/syslog.3.html) for details. This option is only useful when `StandardOutput=` or `StandardError=` are set to `journal` or `kmsg` (or to the same settings in combination with `+console`), and only applies to log messages written to stdout or stderr. Defaults to `daemon`."],
[4,263,"The default **syslog** log level to use when logging to the logging system or the kernel log buffer. One of `emerg`, `alert`, `crit`, `err`, `warning`, `notice`, `info`, `debug`. See [syslog(3)](http://man7.org/linux/man-pages/man3/syslog.3.html) for details. This option is only useful when `StandardOutput=` or `StandardError=` are set to `journal` or `kmsg` (or to the same settings in combination with `+console`), and only applies to log messages written to stdout or stderr. Note that individual lines output by executed processes may be prefixed with a different log level which can be used to override the default log level specified here. The interpretation of these prefixes may be disabled with `SyslogLevelPrefix=`, see below. For details, see [sd-daemon(3)](sd-daemon.html#). Defaults to `info`."],
[4,264,"Takes a boolean argument. If true and `StandardOutput=` or `StandardError=` are set to `journal` or `kmsg` (or to the same settings in combination with `+console`), log lines written by the executed process that are prefixed with a log level will be processed with this log level set but the prefix removed. If set to false, the interpretation of these prefixes is disabled and the logged lines are passed on as-is. This only applies to log messages written to stdout or stderr. For details about this prefixing see [sd-daemon(3)](sd-daemon.html#). Defaults to true."],
[4,265,"Sets the terminal device node to use if standard input, output, or error are connected to a TTY (see above). Defaults to `/dev/console`."],
[4,266,"Reset the terminal device specified with `TTYPath=` before and after execution. Defaults to \"`no`\"."],
[4,267,"Disconnect all clients which have opened the terminal device specified with `TTYPath=` before and after execution. Defaults to \"`no`\"."],
[4,268,"Configure the size of the TTY specified with `TTYPath=`. If unset or set to the empty string, the kernel default is used."],
[4,269,"If the terminal device specified with `TTYPath=` is a virtual console terminal, try to deallocate the TTY before and after execution. This ensures that the screen and scrollback buffer is cleared. Defaults to \"`no`\"."],
[4,270,"Pass a credential to the unit. Credentials are limited-size binary or textual objects that may be passed to unit processes. They are primarily used for passing cryptographic keys (both public and private) or certificates, user account information or identity information from host to services. The data is accessible from the unit's processes via the file system, at a read-only location that (if possible and permitted) is backed by non-swappable memory. The data is only accessible to the user associated with the unit, via the `User=`/`DynamicUser=` settings (as well as the superuser). When available, the location of credentials is exported as the `$CREDENTIALS_DIRECTORY` environment variable to the unit's processes.\n\nThe `LoadCredential=` setting takes a textual ID to use as name for a credential plus a file system path, separated by a colon. The ID must be a short ASCII string suitable as filename in the filesystem, and may be chosen freely by the user. If the specified path is absolute it is opened as regular file and the credential data is read from it. If the absolute path refers to an `AF_UNIX` stream socket in the file system a connection is made to it (only once at unit start-up) and the credential data read from the connection, providing an easy IPC integration point for dynamically providing credentials from other services. If the specified path is not absolute and itself qualifies as valid credential identifier it is understood to refer to a credential that the service manager itself received via the `$CREDENTIALS_DIRECTORY` environment variable, which may be used to propagate credentials from an invoking environment (e.g. a container manager that invoked the service manager) into a service. The contents of the file/socket may be arbitrary binary or textual data, including newline characters and `NUL` bytes. If the file system path is omitted it is chosen identical to the credential name, i.e. this is a terse way do declare credentials to inherit from the service manager into a service. This option may be used multiple times, each time defining an additional credential to pass to the unit.\n\nThe `LoadCredentialEncrypted=` setting is identical to `LoadCredential=`, except that the credential data is decrypted before being passed on to the executed processes. Specifically, the referenced path should refer to a file or socket with an encrypted credential, as implemented by [systemd-creds(1)](systemd-creds.html#). This credential is loaded, decrypted and then passed to the application in decrypted plaintext form, in the same way a regular credential specified via `LoadCredential=` would be. A credential configured this way may encrypted with a secret key derived from the system's TPM2 security chip, or with a secret key stored in `/var/lib/systemd/credentials.secret`, or with both. Using encrypted credentials improves security as credentials are not stored in plaintext and only decrypted into plaintext the moment a service requiring them is started. Moreover, credentials may be bound to the local hardware and installations, so that they cannot easily be analyzed offline.\n\nThe credential files/IPC sockets must be accessible to the service manager, but don't have to be directly accessible to the unit's processes: the credential data is read and copied into separate, read-only copies for the unit that are accessible to appropriately privileged processes. This is particularly useful in combination with `DynamicUser=` as this way privileged data can be made available to processes running under a dynamic UID (i.e. not a previously known one) without having to open up access to all users.\n\nIn order to reference the path a credential may be read from within a `ExecStart=` command line use \"`${CREDENTIALS_DIRECTORY}/mycred`\", e.g. \"`ExecStart=cat ${CREDENTIALS_DIRECTORY}/mycred`\".\n\nCurrently, an accumulated credential size limit of 1 MB per unit is enforced.\n\nIf referencing an `AF_UNIX` stream socket to connect to, the connection will originate from an abstract namespace socket, that includes information about the unit and the credential ID in its socket name. Use [getpeername(2)](http://man7.org/linux/man-pages/man2/getpeername.2.html) to query this information. The returned socket name is formatted as `NUL` _`RANDOM`_ \"`/unit/`\" _`UNIT`_ \"`/`\" _`ID`_, i.e. a `NUL` byte (as required for abstract namespace socket names), followed by a random string (consisting of alphadecimal characters), followed by the literal string \"`/unit/`\", followed by the requesting unit name, followed by the literal character \"`/`\", followed by the textual credential ID requested. Example: \"`\\0adf9d86b6eda275e/unit/foobar.service/credx`\" in case the credential \"`credx`\" is requested for a unit \"`foobar.service`\". This functionality is useful for using a single listening socket to serve credentials to multiple consumers."],
[4,271,"The `SetCredential=` setting is similar to `LoadCredential=` but accepts a literal value to use as data for the credential, instead of a file system path to read the data from. Do not use this option for data that is supposed to be secret, as it is accessible to unprivileged processes via IPC. It's only safe to use this for user IDs, public key material and similar non-sensitive data. For everything else use `LoadCredential=`. In order to embed binary data into the credential data use C-style escaping (i.e. \"`\\n`\" to embed a newline, or \"`\\x00`\" to embed a `NUL` byte).\n\nThe `SetCredentialEncrypted=` setting is identical to `SetCredential=` but expects an encrypted credential in literal form as value. This allows embedding confidential credentials securely directly in unit files. Use [systemd-creds(1)](systemd-creds.html#)' `-p` switch to generate suitable `SetCredentialEncrypted=` lines directly from plaintext credentials. For further details see `LoadCredentialEncrypted=` above.\n\nIf a credential of the same ID is listed in both `LoadCredential=` and `SetCredential=`, the latter will act as default if the former cannot be retrieved. In this case not being able to retrieve the credential from the path specified in `LoadCredential=` is not considered fatal."],
[4,272,"Takes a four character identifier string for an [utmp(5)](http://man7.org/linux/man-pages/man5/utmp.5.html) and wtmp entry for this service. This should only be set for services such as **getty** implementations (such as [agetty(8)](http://linux.die.net/man/8/agetty)) where utmp/wtmp entries must be created and cleared before and after execution, or for services that shall be executed as if they were run by a **getty** process (see below). If the configured string is longer than four characters, it is truncated and the terminal four characters are used. This setting interprets %I style string replacements. This setting is unset by default, i.e. no utmp/wtmp entries are created or cleaned up for this service."],
[4,273,"Takes one of \"`init`\", \"`login`\" or \"`user`\". If `UtmpIdentifier=` is set, controls which type of [utmp(5)](http://man7.org/linux/man-pages/man5/utmp.5.html)/wtmp entries for this service are generated. This setting has no effect unless `UtmpIdentifier=` is set too. If \"`init`\" is set, only an `INIT_PROCESS` entry is generated and the invoked process must implement a **getty**\\-compatible utmp/wtmp logic. If \"`login`\" is set, first an `INIT_PROCESS` entry, followed by a `LOGIN_PROCESS` entry is generated. In this case, the invoked process must implement a [login(1)](http://linux.die.net/man/1/login)\\-compatible utmp/wtmp logic. If \"`user`\" is set, first an `INIT_PROCESS` entry, then a `LOGIN_PROCESS` entry and finally a `USER_PROCESS` entry is generated. In this case, the invoked process may be any process that is suitable to be run as session leader. Defaults to \"`init`\"."],
[4,274,"Colon-separated list of directories to use when launching executables. **systemd** uses a fixed value of \"`` `/usr/local/sbin`:`/usr/local/bin`:`/usr/sbin`:`/usr/bin` ``\" in the system manager. When compiled for systems with \"unmerged `/usr/`\" (`/bin` is not a symlink to `/usr/bin`), \"`` :`/sbin`:`/bin` ``\" is appended. In case of the user manager, a different path may be configured by the distribution. It is recommended to not rely on the order of entries, and have only one program with a given name in `$PATH`."],
[4,275,"Locale. Can be set in [locale.conf(5)](http://man7.org/linux/man-pages/man5/locale.conf.5.html) or on the kernel command line (see [systemd(1)](systemd.html#) and [kernel-command-line(7)](kernel-command-line.html#))."],
[4,276,"User name (twice), home directory, and the login shell. The variables are set for the units that have `User=` set, which includes user **systemd** instances. See [passwd(5)](http://linux.die.net/man/5/passwd)."],
[4,277,"Contains a randomized, unique 128bit ID identifying each runtime cycle of the unit, formatted as 32 character hexadecimal string. A new ID is assigned each time the unit changes from an inactive state into an activating or active state, and may be used to identify this specific runtime cycle, in particular in data stored offline, such as the journal. The same ID is passed to all processes run as part of the unit."],
[4,278,"The directory to use for runtime objects (such as IPC objects) and volatile state. Set for all services run by the user **systemd** instance, as well as any system services that use `PAMName=` with a PAM stack that includes **pam\\_systemd**. See below and [pam\\_systemd(8)](pam_systemd.html#) for more information."],
[4,279,"Absolute paths to the directories defined with `RuntimeDirectory=`, `StateDirectory=`, `CacheDirectory=`, `LogsDirectory=`, and `ConfigurationDirectory=` when those settings are used."],
[4,280,"An absolute path to the per-unit directory with credentials configured via `LoadCredential=`/`SetCredential=`. The directory is marked read-only and is placed in unswappable memory (if supported and permitted), and is only accessible to the UID associated with the unit via `User=` or `DynamicUser=` (and the superuser)."],
[4,281,"The PID of the unit's main process if it is known. This is only set for control processes as invoked by `ExecReload=` and similar."],
[4,282,"The PID of the user **systemd** instance, set for processes spawned by it."],
[4,283,"Information about file descriptors passed to a service for socket activation. See [sd\\_listen\\_fds(3)](sd_listen_fds.html#)."],
[4,284,"The socket `sd_notify()` talks to. See [sd\\_notify(3)](sd_notify.html#)."],
[4,285,"Information about watchdog keep-alive notifications. See [sd\\_watchdog\\_enabled(3)](sd_watchdog_enabled.html#)."],
[4,286,"The PID of the unit process (e.g. process invoked by `ExecStart=`). The child process can use this information to determine whether the process is directly invoked by the service manager or indirectly as a child of another process by comparing this value with the current PID (as similar to the scheme used in [sd\\_listen\\_fds(3)](sd_listen_fds.html#) with `$LISTEN_PID` and `$LISTEN_FDS`)."],
[4,287,"Terminal type, set only for units connected to a terminal (`StandardInput=tty`, `StandardOutput=tty`, or `StandardError=tty`). See [termcap(5)](http://man7.org/linux/man-pages/man5/termcap.5.html)."],
[4,288,"Contains the name of the selected logging namespace when the `LogNamespace=` service setting is used."],
[4,289,"If the standard output or standard error output of the executed processes are connected to the journal (for example, by setting `StandardError=journal`) `$JOURNAL_STREAM` contains the device and inode numbers of the connection file descriptor, formatted in decimal, separated by a colon (\"`:`\"). This permits invoked processes to safely detect whether their standard output or standard error output are connected to the journal. The device and inode numbers of the file descriptors should be compared with the values set in the environment variable to determine whether the process output is still connected to the journal. Note that it is generally not sufficient to only check whether `$JOURNAL_STREAM` is set at all as services might invoke external processes replacing their standard output or standard error output, without unsetting the environment variable.\n\nIf both standard output and standard error of the executed processes are connected to the journal via a stream socket, this environment variable will contain information about the standard error stream, as that's usually the preferred destination for log data. (Note that typically the same stream is used for both standard output and standard error, hence very likely the environment variable contains device and inode information matching both stream file descriptors.)\n\nThis environment variable is primarily useful to allow services to optionally upgrade their used log protocol to the native journal protocol (using [sd\\_journal\\_print(3)](sd_journal_print.html#) and other functions) if their standard output or standard error output is connected to the journal anyway, thus enabling delivery of structured metadata along with logged messages."],
[4,290,"Only defined for the service unit type, this environment variable is passed to all `ExecStop=` and `ExecStopPost=` processes, and encodes the service \"result\". Currently, the following values are defined:\n\n**TableÂ 5.Â Defined `$SERVICE_RESULT` values**\n\nValue\n\nMeaning\n\n\"`success`\"\n\nThe service ran successfully and exited cleanly.\n\n\"`protocol`\"\n\nA protocol violation occurred: the service did not take the steps required by its unit configuration (specifically what is configured in its `Type=` setting).\n\n\"`timeout`\"\n\nOne of the steps timed out.\n\n\"`exit-code`\"\n\nService process exited with a non-zero exit code; see `$EXIT_CODE` below for the actual exit code returned.\n\n\"`signal`\"\n\nA service process was terminated abnormally by a signal, without dumping core. See `$EXIT_CODE` below for the actual signal causing the termination.\n\n\"`core-dump`\"\n\nA service process terminated abnormally with a signal and dumped core. See `$EXIT_CODE` below for the signal causing the termination.\n\n\"`watchdog`\"\n\nWatchdog keep-alive ping was enabled for the service, but the deadline was missed.\n\n\"`start-limit-hit`\"\n\nA start limit was defined for the unit and it was hit, causing the unit to fail to start. See [systemd.unit(5)](systemd.unit.html#)'s `StartLimitIntervalSec=` and `StartLimitBurst=` for details.\n\n\"`resources`\"\n\nA catch-all condition in case a system operation failed.\n\n  \n\nThis environment variable is useful to monitor failure or successful termination of a service. Even though this variable is available in both `ExecStop=` and `ExecStopPost=`, it is usually a better choice to place monitoring tools in the latter, as the former is only invoked for services that managed to start up correctly, and the latter covers both services that failed during their start-up and those which failed during their runtime."],
[4,291,"Only defined for the service unit type, these environment variables are passed to all `ExecStop=`, `ExecStopPost=` processes and contain exit status/code information of the main process of the service. For the precise definition of the exit code and status, see [wait(2)](http://man7.org/linux/man-pages/man2/wait.2.html). `$EXIT_CODE` is one of \"`exited`\", \"`killed`\", \"`dumped`\". `$EXIT_STATUS` contains the numeric exit code formatted as string if `$EXIT_CODE` is \"`exited`\", and the signal name in all other cases. Note that these environment variables are only set if the service manager succeeded to start and identify the main process of the service.\n\n**TableÂ 6.Â Summary of possible service result variable values**\n\n`$SERVICE_RESULT`\n\n`$EXIT_CODE`\n\n`$EXIT_STATUS`\n\n\"`success`\"\n\n\"`killed`\"\n\n\"`HUP`\", \"`INT`\", \"`TERM`\", \"`PIPE`\"\n\n\"`exited`\"\n\n\"`0`\"\n\n\"`protocol`\"\n\nnot set\n\nnot set\n\n\"`exited`\"\n\n\"`0`\"\n\n\"`timeout`\"\n\n\"`killed`\"\n\n\"`TERM`\", \"`KILL`\"\n\n\"`exited`\"\n\n\"`0`\", \"`1`\", \"`2`\", \"`3`\", â€¦, \"`255`\"\n\n\"`exit-code`\"\n\n\"`exited`\"\n\n\"`1`\", \"`2`\", \"`3`\", â€¦, \"`255`\"\n\n\"`signal`\"\n\n\"`killed`\"\n\n\"`HUP`\", \"`INT`\", \"`KILL`\", â€¦\n\n\"`core-dump`\"\n\n\"`dumped`\"\n\n\"`ABRT`\", \"`SEGV`\", \"`QUIT`\", â€¦\n\n\"`watchdog`\"\n\n\"`dumped`\"\n\n\"`ABRT`\"\n\n\"`killed`\"\n\n\"`TERM`\", \"`KILL`\"\n\n\"`exited`\"\n\n\"`0`\", \"`1`\", \"`2`\", \"`3`\", â€¦, \"`255`\"\n\n\"`exec-condition`\"\n\n\"`exited`\"\n\n\"`1`\", \"`2`\", \"`3`\", \"`4`\", â€¦, \"`254`\"\n\n\"`oom-kill`\"\n\n\"`killed`\"\n\n\"`TERM`\", \"`KILL`\"\n\n\"`start-limit-hit`\"\n\nnot set\n\nnot set\n\n\"`resources`\"\n\nany of the above\n\nany of the above\n\nNote: the process may be also terminated by a signal not sent by systemd. In particular the process may send an arbitrary signal to itself in a handler for any of the non-maskable signals. Nevertheless, in the \"`timeout`\" and \"`watchdog`\" rows above only the signals that systemd sends have been included. Moreover, using `SuccessExitStatus=` additional exit statuses may be declared to indicate clean termination, which is not reflected by this table."],
[4,292,"The path to the configured PID file, in case the process is forked off on behalf of a service that uses the `PIDFile=` setting, see [systemd.service(5)](systemd.service.html#) for details. Service code may use this environment variable to automatically generate a PID file at the location configured in the unit file. This field is set to an absolute path in the file system."],
[2,"AmbientCapabilities","",191,5],
[2,"AppArmorProfile","",195,5],
[2,"BindPaths","",183,5],
[2,"BindReadOnlyPaths","",183,5],
[2,"CPUAffinity","",209,5],
[2,"CPUSchedulingPolicy","",206,5],
[2,"CPUSchedulingPriority","",207,5],
[2,"CPUSchedulingResetOnFork","",208,5],
[2,"CacheDirectory","",216,5],
[2,"CacheDirectoryMode","",217,5],
[2,"CapabilityBoundingSet","",190,5],
[2,"ConfigurationDirectory","",216,5],
[2,"ConfigurationDirectoryMode","",217,5],
[2,"CoredumpFilter","",199,5],
[2,"DynamicUser","",187,5],
[2,"Environment","",249,5],
[2,"EnvironmentFile","",250,5],
[2,"ExecPaths","",220,5],
[2,"ExecSearchPath","",172,5],
[2,"ExtensionImages","",185,5],
[2,"Group","",186,5],
[2,"IOSchedulingClass","",212,5],
[2,"IOSchedulingPriority","",213,5],
[2,"IPCNamespacePath","",227,5],
[2,"IgnoreSIGPIPE","",204,5],
[2,"InaccessiblePaths","",220,5],
[2,"KeyringMode","",200,5],
[2,"LimitAS","",197,5],
[2,"LimitCORE","",197,5],
[2,"LimitCPU","",197,5],
[2,"LimitDATA","",197,5],
[2,"LimitFSIZE","",197,5],
[2,"LimitLOCKS","",197,5],
[2,"LimitMEMLOCK","",197,5],
[2,"LimitMSGQUEUE","",197,5],
[2,"LimitNICE","",197,5],
[2,"LimitNOFILE","",197,5],
[2,"LimitNPROC","",197,5],
[2,"LimitRSS","",197,5],
[2,"LimitRTPRIO","",197,5],
[2,"LimitRTTIME","",197,5],
[2,"LimitSIGPENDING","",197,5],
[2,"LimitSTACK","",197,5],
[2,"LoadCredential","ID[:PATH]",270,5],
[2,"LoadCredentialEncrypted","ID[:PATH]",270,5],
[2,"LockPersonality","",238,5],
[2,"LogExtraFields","",258,5],
[2,"LogLevelMax","",257,5],
[2,"LogNamespace","",260,5],
[2,"LogRateLimitBurst","",259,5],
[2,"LogRateLimitIntervalSec","",259,5],
[2,"LogsDirectory","",216,5],
[2,"LogsDirectoryMode","",217,5],
[2,"MemoryDenyWriteExecute","",239,5],
[2,"MountAPIVFS","",180,5],
[2,"MountFlags","",244,5],
[2,"MountImages","",184,5],
[2,"NUMAMask","",211,5],
[2,"NUMAPolicy","",210,5],
[2,"NetworkNamespacePath","",225,5],
[2,"Nice","",205,5],
[2,"NoExecPaths","",220,5],
[2,"NoNewPrivileges","",192,5],
[2,"OOMScoreAdjust","",201,5],
[2,"PAMName","",189,5],
[2,"PassEnvironment","",251,5],
[2,"Personality","",203,5],
[2,"PrivateDevices","",223,5],
[2,"PrivateIPC","",226,5],
[2,"PrivateMounts","",243,5],
[2,"PrivateNetwork","",224,5],
[2,"PrivateTmp","",222,5],
[2,"PrivateUsers","",228,5],
[2,"ProcSubset","",182,5],
[2,"ProtectClock","",230,5],
[2,"ProtectControlGroups","",234,5],
[2,"ProtectHome","",215,5],
[2,"ProtectHostname","",229,5],
[2,"ProtectKernelLogs","",233,5],
[2,"ProtectKernelModules","",232,5],
[2,"ProtectKernelTunables","",231,5],
[2,"ProtectProc","",181,5],
[2,"ProtectSystem","",214,5],
[2,"ReadOnlyPaths","",220,5],
[2,"ReadWritePaths","",220,5],
[2,"RemoveIPC","",242,5],
[2,"RestrictAddressFamilies","",235,5],
[2,"RestrictFileSystems","",236,5],
[2,"RestrictNamespaces","",237,5],
[2,"RestrictRealtime","",240,5],
[2,"RestrictSUIDSGID","",241,5],
[2,"RootDirectory","",174,5],
[2,"RootHash","",177,5],
[2,"RootHashSignature","",178,5],
[2,"RootImage","",175,5],
[2,"RootImageOptions","",176,5],
[2,"RootVerity","",179,5],
[2,"RuntimeDirectory","",216,5],
[2,"RuntimeDirectoryMode","",217,5],
[2,"RuntimeDirectoryPreserve","",218,5],
[2,"SELinuxContext","",194,5],
[2,"SecureBits","",193,5],
[2,"SetCredential","ID:VALUE",271,5],
[2,"SetCredentialEncrypted","ID:VALUE",271,5],
[2,"SmackProcessLabel","",196,5],
[2,"StandardError","",255,5],
[2,"StandardInput","",253,5],
[2,"StandardInputData","",256,5],
[2,"StandardInputText","",256,5],
[2,"StandardOutput","",254,5],
[2,"StateDirectory","",216,5],
[2,"StateDirectoryMode","",217,5],
[2,"SupplementaryGroups","",188,5],
[2,"SyslogFacility","",262,5],
[2,"SyslogIdentifier","",261,5],
[2,"SyslogLevel","",263,5],
[2,"SyslogLevelPrefix","",264,5],
[2,"SystemCallArchitectures","",247,5],
[2,"SystemCallErrorNumber","",246,5],
[2,"SystemCallFilter","",245,5],
[2,"SystemCallLog","",248,5],
[2,"TTYColumns","",268,5],
[2,"TTYPath","",265,5],
[2,"TTYReset","",266,5],
[2,"TTYRows","",268,5],
[2,"TTYVHangup","",267,5],
[2,"TTYVTDisallocate","",269,5],
[2,"TemporaryFileSystem","",221,5],
[2,"TimeoutCleanSec","",219,5],
[2,"TimerSlackNSec","",202,5],
[2,"UMask","",198,5],
[2,"UnsetEnvironment","",252,5],
[2,"User","",186,5],
[2,"UtmpIdentifier","",272,5],
[2,"UtmpMode","",273,5],
[2,"WorkingDirectory","",173,5],
[3,6,"systemd.service(5)","systemd.service â€” Service unit configuration","systemd.service.html"],
[4,293,"Configures the process start-up type for this service unit. One of `simple`, `exec`, `forking`, `oneshot`, `dbus`, `notify` or `idle`:\n\n*   If set to `simple` (the default if `ExecStart=` is specified but neither `Type=` nor `BusName=` are), the service manager will consider the unit started immediately after the main service process has been forked off. It is expected that the process configured with `ExecStart=` is the main process of the service. In this mode, if the process offers functionality to other processes on the system, its communication channels should be installed before the service is started up (e.g. sockets set up by systemd, via socket activation), as the service manager will immediately proceed starting follow-up units, right after creating the main service process, and before executing the service's binary. Note that this means **systemctl start** command lines for `simple` services will report success even if the service's binary cannot be invoked successfully (for example because the selected `User=` doesn't exist, or the service binary is missing).\n    \n*   The `exec` type is similar to `simple`, but the service manager will consider the unit started immediately after the main service binary has been executed. The service manager will delay starting of follow-up units until that point. (Or in other words: `simple` proceeds with further jobs right after `fork()` returns, while `exec` will not proceed before both `fork()` and `execve()` in the service process succeeded.) Note that this means **systemctl start** command lines for `exec` services will report failure when the service's binary cannot be invoked successfully (for example because the selected `User=` doesn't exist, or the service binary is missing).\n    \n*   If set to `forking`, it is expected that the process configured with `ExecStart=` will call `fork()` as part of its start-up. The parent process is expected to exit when start-up is complete and all communication channels are set up. The child continues to run as the main service process, and the service manager will consider the unit started when the parent process exits. This is the behavior of traditional UNIX services. If this setting is used, it is recommended to also use the `PIDFile=` option, so that systemd can reliably identify the main process of the service. systemd will proceed with starting follow-up units as soon as the parent process exits.\n    \n*   Behavior of `oneshot` is similar to `simple`; however, the service manager will consider the unit up after the main process exits. It will then start follow-up units. `RemainAfterExit=` is particularly useful for this type of service. `Type=``oneshot` is the implied default if neither `Type=` nor `ExecStart=` are specified. Note that if this option is used without `RemainAfterExit=` the service will never enter \"`active`\" unit state, but directly transition from \"`activating`\" to \"`deactivating`\" or \"`dead`\" since no process is configured that shall run continuously. In particular this means that after a service of this type ran (and which has `RemainAfterExit=` not set) it will not show up as started afterwards, but as dead.\n    \n*   Behavior of `dbus` is similar to `simple`; however, it is expected that the service acquires a name on the D-Bus bus, as configured by `BusName=`. systemd will proceed with starting follow-up units after the D-Bus bus name has been acquired. Service units with this option configured implicitly gain dependencies on the `dbus.socket` unit. This type is the default if `BusName=` is specified. A service unit of this type is considered to be in the activating state until the specified bus name is acquired. It is considered activated while the bus name is taken. Once the bus name is released the service is considered being no longer functional which has the effect that the service manager attempts to terminate any remaining processes belonging to the service. Services that drop their bus name as part of their shutdown logic thus should be prepared to receive a `SIGTERM` (or whichever signal is configured in `KillSignal=`) as result.\n    \n*   Behavior of `notify` is similar to `exec`; however, it is expected that the service sends a notification message via [sd\\_notify(3)](sd_notify.html#) or an equivalent call when it has finished starting up. systemd will proceed with starting follow-up units after this notification message has been sent. If this option is used, `NotifyAccess=` (see below) should be set to open access to the notification socket provided by systemd. If `NotifyAccess=` is missing or set to `none`, it will be forcibly set to `main`.\n    \n*   Behavior of `idle` is very similar to `simple`; however, actual execution of the service program is delayed until all active jobs are dispatched. This may be used to avoid interleaving of output of shell services with the status output on the console. Note that this type is useful only to improve console output, it is not useful as a general unit ordering tool, and the effect of this service type is subject to a 5s timeout, after which the service program is invoked anyway.\n    \n\nIt is generally recommended to use `Type=``simple` for long-running services whenever possible, as it is the simplest and fastest option. However, as this service type won't propagate service start-up failures and doesn't allow ordering of other units against completion of initialization of the service (which for example is useful if clients need to connect to the service through some form of IPC, and the IPC channel is only established by the service itself â€” in contrast to doing this ahead of time through socket or bus activation or similar), it might not be sufficient for many cases. If so, `notify` or `dbus` (the latter only in case the service provides a D-Bus interface) are the preferred options as they allow service program code to precisely schedule when to consider the service started up successfully and when to proceed with follow-up units. The `notify` service type requires explicit support in the service codebase (as `sd_notify()` or an equivalent API needs to be invoked by the service at the appropriate time) â€” if it's not supported, then `forking` is an alternative: it supports the traditional UNIX service start-up protocol. Finally, `exec` might be an option for cases where it is enough to ensure the service binary is invoked, and where the service binary itself executes no or little initialization on its own (and its initialization is unlikely to fail). Note that using any type other than `simple` possibly delays the boot process, as the service manager needs to wait for service initialization to complete. It is hence recommended not to needlessly use any types other than `simple`. (Also note it is generally not recommended to use `idle` or `oneshot` for long-running services.)"],
[4,294,"Specifies when the manager should consider the service to be finished. One of `main` or `cgroup`:\n\n*   If set to `main` (the default), the service manager will consider the unit stopped when the main process, which is determined according to the `Type=`, exits. Consequently, it cannot be used with `Type=``oneshot`.\n    \n*   If set to `cgroup`, the service will be considered running as long as at least one process in the cgroup has not exited.\n    \n\nIt is generally recommended to use `ExitType=``main` when a service has a known forking model and a main process can reliably be determined. `ExitType=` `cgroup` is meant for applications whose forking model is not known ahead of time and which might not have a specific main process. It is well suited for transient or automatically generated services, such as graphical applications inside of a desktop environment."],
[4,295,"Takes a boolean value that specifies whether the service shall be considered active even when all its processes exited. Defaults to `no`."],
[4,296,"Takes a boolean value that specifies whether systemd should try to guess the main PID of a service if it cannot be determined reliably. This option is ignored unless `Type=forking` is set and `PIDFile=` is unset because for the other types or with an explicitly configured PID file, the main PID is always known. The guessing algorithm might come to incorrect conclusions if a daemon consists of more than one process. If the main PID cannot be determined, failure detection and automatic restarting of a service will not work reliably. Defaults to `yes`."],
[4,297,"Takes a path referring to the PID file of the service. Usage of this option is recommended for services where `Type=` is set to `forking`. The path specified typically points to a file below `/run/`. If a relative path is specified it is hence prefixed with `/run/`. The service manager will read the PID of the main process of the service from this file after start-up of the service. The service manager will not write to the file configured here, although it will remove the file after the service has shut down if it still exists. The PID file does not need to be owned by a privileged user, but if it is owned by an unprivileged user additional safety restrictions are enforced: the file may not be a symlink to a file owned by a different user (neither directly nor indirectly), and the PID file must refer to a process already belonging to the service.\n\nNote that PID files should be avoided in modern projects. Use `Type=notify` or `Type=simple` where possible, which does not require use of PID files to determine the main process of a service and avoids needless forking."],
[4,298,"Takes a D-Bus destination name that this service shall use. This option is mandatory for services where `Type=` is set to `dbus`. It is recommended to always set this property if known to make it easy to map the service name to the D-Bus destination. In particular, **systemctl service-log-level/service-log-target** verbs make use of this."],
[4,299,"Commands with their arguments that are executed when this service is started. The value is split into zero or more command lines according to the rules described below (see section \"Command Lines\" below).\n\nUnless `Type=` is `oneshot`, exactly one command must be given. When `Type=oneshot` is used, zero or more commands may be specified. Commands may be specified by providing multiple command lines in the same directive, or alternatively, this directive may be specified more than once with the same effect. If the empty string is assigned to this option, the list of commands to start is reset, prior assignments of this option will have no effect. If no `ExecStart=` is specified, then the service must have `RemainAfterExit=yes` and at least one `ExecStop=` line set. (Services lacking both `ExecStart=` and `ExecStop=` are not valid.)\n\nFor each of the specified commands, the first argument must be either an absolute path to an executable or a simple file name without any slashes. Optionally, this filename may be prefixed with a number of special characters:\n\n**TableÂ 1.Â Special executable prefixes**\n\nPrefix\n\nEffect\n\n\"`@`\"\n\nIf the executable path is prefixed with \"`@`\", the second specified token will be passed as \"`argv[0]`\" to the executed process (instead of the actual filename), followed by the further arguments specified.\n\n\"`-`\"\n\nIf the executable path is prefixed with \"`-`\", an exit code of the command normally considered a failure (i.e. non-zero exit status or abnormal exit due to signal) is recorded, but has no further effect and is considered equivalent to success.\n\n\"`:`\"\n\nIf the executable path is prefixed with \"`:`\", environment variable substitution (as described by the \"Command Lines\" section below) is not applied.\n\n\"`+`\"\n\nIf the executable path is prefixed with \"`+`\" then the process is executed with full privileges. In this mode privilege restrictions configured with `User=`, `Group=`, `CapabilityBoundingSet=` or the various file system namespacing options (such as `PrivateDevices=`, `PrivateTmp=`) are not applied to the invoked command line (but still affect any other `ExecStart=`, `ExecStop=`, â€¦ lines).\n\n\"`!`\"\n\nSimilar to the \"`+`\" character discussed above this permits invoking command lines with elevated privileges. However, unlike \"`+`\" the \"`!`\" character exclusively alters the effect of `User=`, `Group=` and `SupplementaryGroups=`, i.e. only the stanzas that affect user and group credentials. Note that this setting may be combined with `DynamicUser=`, in which case a dynamic user/group pair is allocated before the command is invoked, but credential changing is left to the executed process itself.\n\n\"`!!`\"\n\nThis prefix is very similar to \"`!`\", however it only has an effect on systems lacking support for ambient process capabilities, i.e. without support for `AmbientCapabilities=`. It's intended to be used for unit files that take benefit of ambient capabilities to run processes with minimal privileges wherever possible while remaining compatible with systems that lack ambient capabilities support. Note that when \"`!!`\" is used, and a system lacking ambient capability support is detected any configured `SystemCallFilter=` and `CapabilityBoundingSet=` stanzas are implicitly modified, in order to permit spawned processes to drop credentials and capabilities themselves, even if this is configured to not be allowed. Moreover, if this prefix is used and a system lacking ambient capability support is detected `AmbientCapabilities=` will be skipped and not be applied. On systems supporting ambient capabilities, \"`!!`\" has no effect and is redundant.\n\n  \n\n\"`@`\", \"`-`\", \"`:`\", and one of \"`+`\"/\"`!`\"/\"`!!`\" may be used together and they can appear in any order. However, only one of \"`+`\", \"`!`\", \"`!!`\" may be used at a time. Note that these prefixes are also supported for the other command line settings, i.e. `ExecStartPre=`, `ExecStartPost=`, `ExecReload=`, `ExecStop=` and `ExecStopPost=`.\n\nIf more than one command is specified, the commands are invoked sequentially in the order they appear in the unit file. If one of the commands fails (and is not prefixed with \"`-`\"), other lines are not executed, and the unit is considered failed.\n\nUnless `Type=forking` is set, the process started via this command line will be considered the main process of the daemon."],
[4,300,"Additional commands that are executed before or after the command in `ExecStart=`, respectively. Syntax is the same as for `ExecStart=`, except that multiple command lines are allowed and the commands are executed one after the other, serially.\n\nIf any of those commands (not prefixed with \"`-`\") fail, the rest are not executed and the unit is considered failed.\n\n`ExecStart=` commands are only run after all `ExecStartPre=` commands that were not prefixed with a \"`-`\" exit successfully.\n\n`ExecStartPost=` commands are only run after the commands specified in `ExecStart=` have been invoked successfully, as determined by `Type=` (i.e. the process has been started for `Type=simple` or `Type=idle`, the last `ExecStart=` process exited successfully for `Type=oneshot`, the initial process exited successfully for `Type=forking`, \"`READY=1`\" is sent for `Type=notify`, or the `BusName=` has been taken for `Type=dbus`).\n\nNote that `ExecStartPre=` may not be used to start long-running processes. All processes forked off by processes invoked via `ExecStartPre=` will be killed before the next service process is run.\n\nNote that if any of the commands specified in `ExecStartPre=`, `ExecStart=`, or `ExecStartPost=` fail (and are not prefixed with \"`-`\", see above) or time out before the service is fully up, execution continues with commands specified in `ExecStopPost=`, the commands in `ExecStop=` are skipped.\n\nNote that the execution of `ExecStartPost=` is taken into account for the purpose of `Before=`/`After=` ordering constraints."],
[4,301,"Optional commands that are executed before the command(s) in `ExecStartPre=`. Syntax is the same as for `ExecStart=`, except that multiple command lines are allowed and the commands are executed one after the other, serially.\n\nThe behavior is like an `ExecStartPre=` and condition check hybrid: when an `ExecCondition=` command exits with exit code 1 through 254 (inclusive), the remaining commands are skipped and the unit is _not_ marked as failed. However, if an `ExecCondition=` command exits with 255 or abnormally (e.g. timeout, killed by a signal, etc.), the unit will be considered failed (and remaining commands will be skipped). Exit code of 0 or those matching `SuccessExitStatus=` will continue execution to the next command(s).\n\nThe same recommendations about not running long-running processes in `ExecStartPre=` also applies to `ExecCondition=`. `ExecCondition=` will also run the commands in `ExecStopPost=`, as part of stopping the service, in the case of any non-zero or abnormal exits, like the ones described above."],
[4,302,"Commands to execute to trigger a configuration reload in the service. This argument takes multiple command lines, following the same scheme as described for `ExecStart=` above. Use of this setting is optional. Specifier and environment variable substitution is supported here following the same scheme as for `ExecStart=`.\n\nOne additional, special environment variable is set: if known, `$MAINPID` is set to the main process of the daemon, and may be used for command lines like the following:\n\nExecReload=kill -HUP $MAINPID\n\nNote however that reloading a daemon by sending a signal (as with the example line above) is usually not a good choice, because this is an asynchronous operation and hence not suitable to order reloads of multiple services against each other. It is strongly recommended to set `ExecReload=` to a command that not only triggers a configuration reload of the daemon, but also synchronously waits for it to complete. For example, [dbus-broker(1)](https://www.mankier.com/1/dbus-broker) uses the following:\n\nExecReload=busctl call org.freedesktop.DBus \\\\\n        /org/freedesktop/DBus org.freedesktop.DBus \\\\\n        ReloadConfig"],
[4,303,"Commands to execute to stop the service started via `ExecStart=`. This argument takes multiple command lines, following the same scheme as described for `ExecStart=` above. Use of this setting is optional. After the commands configured in this option are run, it is implied that the service is stopped, and any processes remaining for it are terminated according to the `KillMode=` setting (see [systemd.kill(5)](systemd.kill.html#)). If this option is not specified, the process is terminated by sending the signal specified in `KillSignal=` or `RestartKillSignal=` when service stop is requested. Specifier and environment variable substitution is supported (including `$MAINPID`, see above).\n\nNote that it is usually not sufficient to specify a command for this setting that only asks the service to terminate (for example, by sending some form of termination signal to it), but does not wait for it to do so. Since the remaining processes of the services are killed according to `KillMode=` and `KillSignal=` or `RestartKillSignal=` as described above immediately after the command exited, this may not result in a clean stop. The specified command should hence be a synchronous operation, not an asynchronous one.\n\nNote that the commands specified in `ExecStop=` are only executed when the service started successfully first. They are not invoked if the service was never started at all, or in case its start-up failed, for example because any of the commands specified in `ExecStart=`, `ExecStartPre=` or `ExecStartPost=` failed (and weren't prefixed with \"`-`\", see above) or timed out. Use `ExecStopPost=` to invoke commands when a service failed to start up correctly and is shut down again. Also note that the stop operation is always performed if the service started successfully, even if the processes in the service terminated on their own or were killed. The stop commands must be prepared to deal with that case. `$MAINPID` will be unset if systemd knows that the main process exited by the time the stop commands are called.\n\nService restart requests are implemented as stop operations followed by start operations. This means that `ExecStop=` and `ExecStopPost=` are executed during a service restart operation.\n\nIt is recommended to use this setting for commands that communicate with the service requesting clean termination. For post-mortem clean-up steps use `ExecStopPost=` instead."],
[4,304,"Additional commands that are executed after the service is stopped. This includes cases where the commands configured in `ExecStop=` were used, where the service does not have any `ExecStop=` defined, or where the service exited unexpectedly. This argument takes multiple command lines, following the same scheme as described for `ExecStart=`. Use of these settings is optional. Specifier and environment variable substitution is supported. Note that â€“ unlike `ExecStop=` â€“ commands specified with this setting are invoked when a service failed to start up correctly and is shut down again.\n\nIt is recommended to use this setting for clean-up operations that shall be executed even when the service failed to start up correctly. Commands configured with this setting need to be able to operate even if the service failed starting up half-way and left incompletely initialized data around. As the service's processes have been terminated already when the commands specified with this setting are executed they should not attempt to communicate with them.\n\nNote that all commands that are configured with this setting are invoked with the result code of the service, as well as the main process' exit code and status, set in the `$SERVICE_RESULT`, `$EXIT_CODE` and `$EXIT_STATUS` environment variables, see [systemd.exec(5)](systemd.exec.html#) for details.\n\nNote that the execution of `ExecStopPost=` is taken into account for the purpose of `Before=`/`After=` ordering constraints."],
[4,305,"Configures the time to sleep before restarting a service (as configured with `Restart=`). Takes a unit-less value in seconds, or a time span value such as \"5min 20s\". Defaults to 100ms."],
[4,306,"Configures the time to wait for start-up. If a daemon service does not signal start-up completion within the configured time, the service will be considered failed and will be shut down again. The precise action depends on the `TimeoutStartFailureMode=` option. Takes a unit-less value in seconds, or a time span value such as \"5min 20s\". Pass \"`infinity`\" to disable the timeout logic. Defaults to `DefaultTimeoutStartSec=` from the manager configuration file, except when `Type=oneshot` is used, in which case the timeout is disabled by default (see [systemd-system.conf(5)](systemd-system.conf.html#)).\n\nIf a service of `Type=notify` sends \"`EXTEND_TIMEOUT_USEC=â€¦`\", this may cause the start time to be extended beyond `TimeoutStartSec=`. The first receipt of this message must occur before `TimeoutStartSec=` is exceeded, and once the start time has extended beyond `TimeoutStartSec=`, the service manager will allow the service to continue to start, provided the service repeats \"`EXTEND_TIMEOUT_USEC=â€¦`\" within the interval specified until the service startup status is finished by \"`READY=1`\". (see [sd\\_notify(3)](sd_notify.html#))."],
[4,307,"This option serves two purposes. First, it configures the time to wait for each `ExecStop=` command. If any of them times out, subsequent `ExecStop=` commands are skipped and the service will be terminated by `SIGTERM`. If no `ExecStop=` commands are specified, the service gets the `SIGTERM` immediately. This default behavior can be changed by the `TimeoutStopFailureMode=` option. Second, it configures the time to wait for the service itself to stop. If it doesn't terminate in the specified time, it will be forcibly terminated by `SIGKILL` (see `KillMode=` in [systemd.kill(5)](systemd.kill.html#)). Takes a unit-less value in seconds, or a time span value such as \"5min 20s\". Pass \"`infinity`\" to disable the timeout logic. Defaults to `DefaultTimeoutStopSec=` from the manager configuration file (see [systemd-system.conf(5)](systemd-system.conf.html#)).\n\nIf a service of `Type=notify` sends \"`EXTEND_TIMEOUT_USEC=â€¦`\", this may cause the stop time to be extended beyond `TimeoutStopSec=`. The first receipt of this message must occur before `TimeoutStopSec=` is exceeded, and once the stop time has extended beyond `TimeoutStopSec=`, the service manager will allow the service to continue to stop, provided the service repeats \"`EXTEND_TIMEOUT_USEC=â€¦`\" within the interval specified, or terminates itself (see [sd\\_notify(3)](sd_notify.html#))."],
[4,308,"This option configures the time to wait for the service to terminate when it was aborted due to a watchdog timeout (see `WatchdogSec=`). If the service has a short `TimeoutStopSec=` this option can be used to give the system more time to write a core dump of the service. Upon expiration the service will be forcibly terminated by `SIGKILL` (see `KillMode=` in [systemd.kill(5)](systemd.kill.html#)). The core file will be truncated in this case. Use `TimeoutAbortSec=` to set a sensible timeout for the core dumping per service that is large enough to write all expected data while also being short enough to handle the service failure in due time.\n\nTakes a unit-less value in seconds, or a time span value such as \"5min 20s\". Pass an empty value to skip the dedicated watchdog abort timeout handling and fall back `TimeoutStopSec=`. Pass \"`infinity`\" to disable the timeout logic. Defaults to `DefaultTimeoutAbortSec=` from the manager configuration file (see [systemd-system.conf(5)](systemd-system.conf.html#)).\n\nIf a service of `Type=notify` handles `SIGABRT` itself (instead of relying on the kernel to write a core dump) it can send \"`EXTEND_TIMEOUT_USEC=â€¦`\" to extended the abort time beyond `TimeoutAbortSec=`. The first receipt of this message must occur before `TimeoutAbortSec=` is exceeded, and once the abort time has extended beyond `TimeoutAbortSec=`, the service manager will allow the service to continue to abort, provided the service repeats \"`EXTEND_TIMEOUT_USEC=â€¦`\" within the interval specified, or terminates itself (see [sd\\_notify(3)](sd_notify.html#))."],
[4,309,"A shorthand for configuring both `TimeoutStartSec=` and `TimeoutStopSec=` to the specified value."],
[4,310,"These options configure the action that is taken in case a daemon service does not signal start-up within its configured `TimeoutStartSec=`, respectively if it does not stop within `TimeoutStopSec=`. Takes one of `terminate`, `abort` and `kill`. Both options default to `terminate`.\n\nIf `terminate` is set the service will be gracefully terminated by sending the signal specified in `KillSignal=` (defaults to `SIGTERM`, see [systemd.kill(5)](systemd.kill.html#)). If the service does not terminate the `FinalKillSignal=` is sent after `TimeoutStopSec=`. If `abort` is set, `WatchdogSignal=` is sent instead and `TimeoutAbortSec=` applies before sending `FinalKillSignal=`. This setting may be used to analyze services that fail to start-up or shut-down intermittently. By using `kill` the service is immediately terminated by sending `FinalKillSignal=` without any further timeout. This setting can be used to expedite the shutdown of failing services."],
[4,311,"Configures a maximum time for the service to run. If this is used and the service has been active for longer than the specified time it is terminated and put into a failure state. Note that this setting does not have any effect on `Type=oneshot` services, as they terminate immediately after activation completed. Pass \"`infinity`\" (the default) to configure no runtime limit.\n\nIf a service of `Type=notify` sends \"`EXTEND_TIMEOUT_USEC=â€¦`\", this may cause the runtime to be extended beyond `RuntimeMaxSec=`. The first receipt of this message must occur before `RuntimeMaxSec=` is exceeded, and once the runtime has extended beyond `RuntimeMaxSec=`, the service manager will allow the service to continue to run, provided the service repeats \"`EXTEND_TIMEOUT_USEC=â€¦`\" within the interval specified until the service shutdown is achieved by \"`STOPPING=1`\" (or termination). (see [sd\\_notify(3)](sd_notify.html#))."],
[4,312,"This option modifies `RuntimeMaxSec=` by increasing the maximum runtime by an evenly distributed duration between 0 and the specified value (in seconds). If `RuntimeMaxSec=` is unspecified, then this feature will be disabled."],
[4,313,"Configures the watchdog timeout for a service. The watchdog is activated when the start-up is completed. The service must call [sd\\_notify(3)](sd_notify.html#) regularly with \"`WATCHDOG=1`\" (i.e. the \"keep-alive ping\"). If the time between two such calls is larger than the configured time, then the service is placed in a failed state and it will be terminated with `SIGABRT` (or the signal specified by `WatchdogSignal=`). By setting `Restart=` to `on-failure`, `on-watchdog`, `on-abnormal` or `always`, the service will be automatically restarted. The time configured here will be passed to the executed service process in the `WATCHDOG_USEC=` environment variable. This allows daemons to automatically enable the keep-alive pinging logic if watchdog support is enabled for the service. If this option is used, `NotifyAccess=` (see below) should be set to open access to the notification socket provided by systemd. If `NotifyAccess=` is not set, it will be implicitly set to `main`. Defaults to 0, which disables this feature. The service can check whether the service manager expects watchdog keep-alive notifications. See [sd\\_watchdog\\_enabled(3)](sd_watchdog_enabled.html#) for details. [sd\\_event\\_set\\_watchdog(3)](sd_event_set_watchdog.html#) may be used to enable automatic watchdog notification support."],
[4,314,"Configures whether the service shall be restarted when the service process exits, is killed, or a timeout is reached. The service process may be the main service process, but it may also be one of the processes specified with `ExecStartPre=`, `ExecStartPost=`, `ExecStop=`, `ExecStopPost=`, or `ExecReload=`. When the death of the process is a result of systemd operation (e.g. service stop or restart), the service will not be restarted. Timeouts include missing the watchdog \"keep-alive ping\" deadline and a service start, reload, and stop operation timeouts.\n\nTakes one of `no`, `on-success`, `on-failure`, `on-abnormal`, `on-watchdog`, `on-abort`, or `always`. If set to `no` (the default), the service will not be restarted. If set to `on-success`, it will be restarted only when the service process exits cleanly. In this context, a clean exit means any of the following:\n\n*   exit code of 0;\n*   for types other than `Type=oneshot`, one of the signals `SIGHUP`, `SIGINT`, `SIGTERM`, or `SIGPIPE`;\n*   exit statuses and signals specified in `SuccessExitStatus=`.\n\nIf set to `on-failure`, the service will be restarted when the process exits with a non-zero exit code, is terminated by a signal (including on core dump, but excluding the aforementioned four signals), when an operation (such as service reload) times out, and when the configured watchdog timeout is triggered. If set to `on-abnormal`, the service will be restarted when the process is terminated by a signal (including on core dump, excluding the aforementioned four signals), when an operation times out, or when the watchdog timeout is triggered. If set to `on-abort`, the service will be restarted only if the service process exits due to an uncaught signal not specified as a clean exit status. If set to `on-watchdog`, the service will be restarted only if the watchdog timeout for the service expires. If set to `always`, the service will be restarted regardless of whether it exited cleanly or not, got terminated abnormally by a signal, or hit a timeout.\n\n**TableÂ 2.Â Exit causes and the effect of the `Restart=` settings**\n\nRestart settings/Exit causes\n\n`no`\n\n`always`\n\n`on-success`\n\n`on-failure`\n\n`on-abnormal`\n\n`on-abort`\n\n`on-watchdog`\n\nClean exit code or signal\n\nÂ \n\nX\n\nX\n\nÂ \n\nÂ \n\nÂ \n\nÂ \n\nUnclean exit code\n\nÂ \n\nX\n\nÂ \n\nX\n\nÂ \n\nÂ \n\nÂ \n\nUnclean signal\n\nÂ \n\nX\n\nÂ \n\nX\n\nX\n\nX\n\nÂ \n\nTimeout\n\nÂ \n\nX\n\nÂ \n\nX\n\nX\n\nÂ \n\nÂ \n\nWatchdog\n\nÂ \n\nX\n\nÂ \n\nX\n\nX\n\nÂ \n\nX\n\n  \n\nAs exceptions to the setting above, the service will not be restarted if the exit code or signal is specified in `RestartPreventExitStatus=` (see below) or the service is stopped with **systemctl stop** or an equivalent operation. Also, the services will always be restarted if the exit code or signal is specified in `RestartForceExitStatus=` (see below).\n\nNote that service restart is subject to unit start rate limiting configured with `StartLimitIntervalSec=` and `StartLimitBurst=`, see [systemd.unit(5)](systemd.unit.html#) for details. A restarted service enters the failed state only after the start limits are reached.\n\nSetting this to `on-failure` is the recommended choice for long-running services, in order to increase reliability by attempting automatic recovery from errors. For services that shall be able to terminate on their own choice (and avoid immediate restarting), `on-abnormal` is an alternative choice."],
[4,315,"Takes a list of exit status definitions that, when returned by the main service process, will be considered successful termination, in addition to the normal successful exit status 0 and, except for `Type=oneshot`, the signals `SIGHUP`, `SIGINT`, `SIGTERM`, and `SIGPIPE`. Exit status definitions can be numeric termination statuses, termination status names, or termination signal names, separated by spaces. See the Process Exit Codes section in [systemd.exec(5)](systemd.exec.html#) for a list of termination status names (for this setting only the part without the \"`EXIT_`\" or \"`EX_`\" prefix should be used). See [signal(7)](http://man7.org/linux/man-pages/man7/signal.7.html) for a list of signal names.\n\nNote that this setting does not change the mapping between numeric exit statuses and their names, i.e. regardless how this setting is used 0 will still be mapped to \"`SUCCESS`\" (and thus typically shown as \"`0/SUCCESS`\" in tool outputs) and 1 to \"`FAILURE`\" (and thus typically shown as \"`1/FAILURE`\"), and so on. It only controls what happens as effect of these exit statuses, and how it propagates to the state of the service as a whole.\n\nThis option may appear more than once, in which case the list of successful exit statuses is merged. If the empty string is assigned to this option, the list is reset, all prior assignments of this option will have no effect.\n\n**ExampleÂ 1.Â A service with the `SuccessExitStatus=` setting**\n\nSuccessExitStatus=TEMPFAIL 250 SIGKILL\n\nExit status 75 (`TEMPFAIL`), 250, and the termination signal `SIGKILL` are considered clean service terminations.\n\n  \n\nNote: **systemd-analyze exit-status** may be used to list exit statuses and translate between numerical status values and names."],
[4,316,"Takes a list of exit status definitions that, when returned by the main service process, will prevent automatic service restarts, regardless of the restart setting configured with `Restart=`. Exit status definitions can either be numeric exit codes or termination signal names, and are separated by spaces. Defaults to the empty list, so that, by default, no exit status is excluded from the configured restart logic. For example:\n\nRestartPreventExitStatus=1 6 SIGABRT\n\nensures that exit codes 1 and 6 and the termination signal `SIGABRT` will not result in automatic service restarting. This option may appear more than once, in which case the list of restart-preventing statuses is merged. If the empty string is assigned to this option, the list is reset and all prior assignments of this option will have no effect.\n\nNote that this setting has no effect on processes configured via `ExecStartPre=`, `ExecStartPost=`, `ExecStop=`, `ExecStopPost=` or `ExecReload=`, but only on the main service process, i.e. either the one invoked by `ExecStart=` or (depending on `Type=`, `PIDFile=`, â€¦) the otherwise configured main process."],
[4,317,"Takes a list of exit status definitions that, when returned by the main service process, will force automatic service restarts, regardless of the restart setting configured with `Restart=`. The argument format is similar to `RestartPreventExitStatus=`."],
[4,318,"Takes a boolean argument. If true, the root directory, as configured with the `RootDirectory=` option (see [systemd.exec(5)](systemd.exec.html#) for more information), is only applied to the process started with `ExecStart=`, and not to the various other `ExecStartPre=`, `ExecStartPost=`, `ExecReload=`, `ExecStop=`, and `ExecStopPost=` commands. If false, the setting is applied to all configured commands the same way. Defaults to false."],
[4,319,"Set the `O_NONBLOCK` flag for all file descriptors passed via socket-based activation. If true, all file descriptors >= 3 (i.e. all except stdin, stdout, stderr), excluding those passed in via the file descriptor storage logic (see `FileDescriptorStoreMax=` for details), will have the `O_NONBLOCK` flag set and hence are in non-blocking mode. This option is only useful in conjunction with a socket unit, as described in [systemd.socket(5)](systemd.socket.html#) and has no effect on file descriptors which were previously saved in the file-descriptor store for example. Defaults to false."],
[4,320,"Controls access to the service status notification socket, as accessible via the [sd\\_notify(3)](sd_notify.html#) call. Takes one of `none` (the default), `main`, `exec` or `all`. If `none`, no daemon status updates are accepted from the service processes, all status update messages are ignored. If `main`, only service updates sent from the main process of the service are accepted. If `exec`, only service updates sent from any of the main or control processes originating from one of the `Exec*=` commands are accepted. If `all`, all services updates from all members of the service's control group are accepted. This option should be set to open access to the notification socket when using `Type=notify` or `WatchdogSec=` (see above). If those options are used but `NotifyAccess=` is not configured, it will be implicitly set to `main`.\n\nNote that `sd_notify()` notifications may be attributed to units correctly only if either the sending process is still around at the time PID 1 processes the message, or if the sending process is explicitly runtime-tracked by the service manager. The latter is the case if the service manager originally forked off the process, i.e. on all processes that match `main` or `exec`. Conversely, if an auxiliary process of the unit sends an `sd_notify()` message and immediately exits, the service manager might not be able to properly attribute the message to the unit, and thus will ignore it, even if `NotifyAccess=``all` is set for it.\n\nHence, to eliminate all race conditions involving lookup of the client's unit and attribution of notifications to units correctly, `sd_notify_barrier()` may be used. This call acts as a synchronization point and ensures all notifications sent before this call have been picked up by the service manager when it returns successfully. Use of `sd_notify_barrier()` is needed for clients which are not invoked by the service manager, otherwise this synchronization mechanism is unnecessary for attribution of notifications to the unit."],
[4,321,"Specifies the name of the socket units this service shall inherit socket file descriptors from when the service is started. Normally, it should not be necessary to use this setting, as all socket file descriptors whose unit shares the same name as the service (subject to the different unit name suffix of course) are passed to the spawned process.\n\nNote that the same socket file descriptors may be passed to multiple processes simultaneously. Also note that a different service may be activated on incoming socket traffic than the one which is ultimately configured to inherit the socket file descriptors. Or, in other words: the `Service=` setting of `.socket` units does not have to match the inverse of the `Sockets=` setting of the `.service` it refers to.\n\nThis option may appear more than once, in which case the list of socket units is merged. Note that once set, clearing the list of sockets again (for example, by assigning the empty string to this option) is not supported."],
[4,322,"Configure how many file descriptors may be stored in the service manager for the service using [sd\\_pid\\_notify\\_with\\_fds(3)](sd_pid_notify_with_fds.html#)'s \"`FDSTORE=1`\" messages. This is useful for implementing services that can restart after an explicit request or a crash without losing state. Any open sockets and other file descriptors which should not be closed during the restart may be stored this way. Application state can either be serialized to a file in `/run/`, or better, stored in a [memfd\\_create(2)](http://man7.org/linux/man-pages/man2/memfd_create.2.html) memory file descriptor. Defaults to 0, i.e. no file descriptors may be stored in the service manager. All file descriptors passed to the service manager from a specific service are passed back to the service's main process on the next service restart (see [sd\\_listen\\_fds(3)](sd_listen_fds.html#) for details about the precise protocol used and the order in which the file descriptors are passed). Any file descriptors passed to the service manager are automatically closed when `POLLHUP` or `POLLERR` is seen on them, or when the service is fully stopped and no job is queued or being executed for it. If this option is used, `NotifyAccess=` (see above) should be set to open access to the notification socket provided by systemd. If `NotifyAccess=` is not set, it will be implicitly set to `main`."],
[4,323,"Configure the location of a file containing [USB FunctionFS](https://www.kernel.org/doc/Documentation/usb/functionfs.txt) descriptors, for implementation of USB gadget functions. This is used only in conjunction with a socket unit with `ListenUSBFunction=` configured. The contents of this file are written to the `ep0` file after it is opened."],
[4,324,"Configure the location of a file containing USB FunctionFS strings. Behavior is similar to `USBFunctionDescriptors=` above."],
[4,325,"Configure the Out-Of-Memory (OOM) killer policy. On Linux, when memory becomes scarce the kernel might decide to kill a running process in order to free up memory and reduce memory pressure. This setting takes one of `continue`, `stop` or `kill`. If set to `continue` and a process of the service is killed by the kernel's OOM killer this is logged but the service continues running. If set to `stop` the event is logged but the service is terminated cleanly by the service manager. If set to `kill` and one of the service's processes is killed by the OOM killer the kernel is instructed to kill all remaining processes of the service, too. Defaults to the setting `DefaultOOMPolicy=` in [systemd-system.conf(5)](systemd-system.conf.html#) is set to, except for services where `Delegate=` is turned on, where it defaults to `continue`.\n\nUse the `OOMScoreAdjust=` setting to configure whether processes of the unit shall be considered preferred or less preferred candidates for process termination by the Linux OOM killer logic. See [systemd.exec(5)](systemd.exec.html#) for details."],
[2,"BusName","",298,6],
[2,"ExecCondition","",301,6],
[2,"ExecReload","",302,6],
[2,"ExecStart","",299,6],
[2,"ExecStartPost","",300,6],
[2,"ExecStartPre","",300,6],
[2,"ExecStop","",303,6],
[2,"ExecStopPost","",304,6],
[2,"ExitType","",294,6],
[2,"FileDescriptorStoreMax","",322,6],
[2,"GuessMainPID","",296,6],
[2,"NonBlocking","",319,6],
[2,"NotifyAccess","",320,6],
[2,"OOMPolicy","",325,6],
[2,"PIDFile","",297,6],
[2,"RemainAfterExit","",295,6],
[2,"Restart","",314,6],
[2,"RestartForceExitStatus","",317,6],
[2,"RestartPreventExitStatus","",316,6],
[2,"RestartSec","",305,6],
[2,"RootDirectoryStartOnly","",318,6],
[2,"RuntimeMaxSec","",311,6],
[2,"RuntimeRandomizedExtraSec","",312,6],
[2,"Sockets","",321,6],
[2,"SuccessExitStatus","",315,6],
[2,"TimeoutAbortSec","",308,6],
[2,"TimeoutSec","",309,6],
[2,"TimeoutStartFailureMode","",310,6],
[2,"TimeoutStartSec","",306,6],
[2,"TimeoutStopFailureMode","",310,6],
[2,"TimeoutStopSec","",307,6],
[2,"Type","",293,6],
[2,"USBFunctionDescriptors","",323,6],
[2,"USBFunctionStrings","",324,6],
[2,"WatchdogSec","",313,6],
[3,7,"systemd.automount(5)","systemd.automount â€” Automount unit configuration","systemd.automount.html"],
[4,326,"Takes an absolute path of a directory of the automount point. If the automount point does not exist at time that the automount point is installed, it is created. This string must be reflected in the unit filename. (See above.) This option is mandatory."],
[4,327,"Extra mount options to use when creating the autofs mountpoint. This takes a comma-separated list of options. This setting is optional. Note that the usual specifier expansion is applied to this setting, literal percent characters should hence be written as \"`%%`\"."],
[4,328,"Directories of automount points (and any parent directories) are automatically created if needed. This option specifies the file system access mode used when creating these directories. Takes an access mode in octal notation. Defaults to 0755."],
[4,329,"Configures an idle timeout. Once the mount has been idle for the specified time, systemd will attempt to unmount. Takes a unit-less value in seconds, or a time span value such as \"5min 20s\". Pass 0 to disable the timeout logic. The timeout is disabled by default."],
[2,"DirectoryMode","",328,7],
[2,"ExtraOptions","",327,7],
[2,"TimeoutIdleSec","",329,7],
[2,"Where","",326,7],
[3,8,"systemd.mount(5)","systemd.mount â€” Mount unit configuration","systemd.mount.html"],
[4,330,"Configures a `Requires=` and an `After=` dependency between the created mount unit and another systemd unit, such as a device or mount unit. The argument should be a unit name, or an absolute path to a device node or mount point. This option may be specified more than once. This option is particularly useful for mount point declarations that need an additional device to be around (such as an external journal device for journal file systems) or an additional mount to be in place (such as an overlay file system that merges multiple mount points). See `After=` and `Requires=` in [systemd.unit(5)](systemd.unit.html#) for details.\n\nNote that this option always applies to the created mount unit only regardless whether `x-systemd.automount` has been specified."],
[4,331,"In the created mount unit, configures a `Before=` or `After=` dependency on another systemd unit, such as a mount unit. The argument should be a unit name or an absolute path to a mount point. This option may be specified more than once. This option is particularly useful for mount point declarations with `nofail` option that are mounted asynchronously but need to be mounted before or after some unit start, for example, before `local-fs.target` unit. See `Before=` and `After=` in [systemd.unit(5)](systemd.unit.html#) for details.\n\nNote that these options always apply to the created mount unit only regardless whether `x-systemd.automount` has been specified."],
[4,332,"In the created mount unit, configures a `WantedBy=` or `RequiredBy=` dependency on another unit. This option may be specified more than once. If this is specified, the normal automatic dependencies on the created mount unit, e.g., `local-fs.target`, are not automatically created. See `WantedBy=` and `RequiredBy=` in [systemd.unit(5)](systemd.unit.html#) for details."],
[4,333,"Configures a `RequiresMountsFor=` dependency between the created mount unit and other mount units. The argument must be an absolute path. This option may be specified more than once. See `RequiresMountsFor=` in [systemd.unit(5)](systemd.unit.html#) for details."],
[4,334,"The block device backed file system will be upgraded to `BindsTo=` dependency. This option is only useful when mounting file systems manually with [mount(8)](http://man7.org/linux/man-pages/man8/mount.8.html) as the default dependency in this case is `Requires=`. This option is already implied by entries in `/etc/fstab` or by mount units."],
[4,335,"An automount unit will be created for the file system. See [systemd.automount(5)](systemd.automount.html#) for details."],
[4,336,"Configures the idle timeout of the automount unit. See `TimeoutIdleSec=` in [systemd.automount(5)](systemd.automount.html#) for details."],
[4,337,"Configure how long systemd should wait for a device to show up before giving up on an entry from `/etc/fstab`. Specify a time in seconds or explicitly append a unit such as \"`s`\", \"`min`\", \"`h`\", \"`ms`\".\n\nNote that this option can only be used in `/etc/fstab`, and will be ignored when part of the `Options=` setting in a unit file."],
[4,338,"Configure how long systemd should wait for the mount command to finish before giving up on an entry from `/etc/fstab`. Specify a time in seconds or explicitly append a unit such as \"`s`\", \"`min`\", \"`h`\", \"`ms`\".\n\nNote that this option can only be used in `/etc/fstab`, and will be ignored when part of the `Options=` setting in a unit file.\n\nSee `TimeoutSec=` below for details."],
[4,339,"The file system will be initialized on the device. If the device is not \"empty\", i.e. it contains any signature, the operation will be skipped. It is hence expected that this option remains set even after the device has been initialized.\n\nNote that this option can only be used in `/etc/fstab`, and will be ignored when part of the `Options=` setting in a unit file.\n\nSee [systemd-makefs@.service(8)](systemd-makefs@.service.html#).\n\n[wipefs(8)](http://man7.org/linux/man-pages/man8/wipefs.8.html) may be used to remove any signatures from a block device to force `x-systemd.makefs` to reinitialize the device."],
[4,340,"The file system will be grown to occupy the full block device. If the file system is already at maximum size, no action will be performed. It is hence expected that this option remains set even after the file system has been grown. Only certain file system types are supported, see [systemd-makefs@.service(8)](systemd-makefs@.service.html#) for details.\n\nNote that this option can only be used in `/etc/fstab`, and will be ignored when part of the `Options=` setting in a unit file."],
[4,341,"If a mount operation fails to mount the file system read-write, it normally tries mounting the file system read-only instead. This option disables that behaviour, and causes the mount to fail immediately instead. This option is translated into the `ReadWriteOnly=` setting in a unit file."],
[4,342,"Normally the file system type is used to determine if a mount is a \"network mount\", i.e. if it should only be started after the network is available. Using this option overrides this detection and specifies that the mount requires network.\n\nNetwork mount units are ordered between `remote-fs-pre.target` and `remote-fs.target`, instead of `local-fs-pre.target` and `local-fs.target`. They also pull in `network-online.target` and are ordered after it and `network.target`."],
[4,343,"With `noauto`, the mount unit will not be added as a dependency for `local-fs.target` or `remote-fs.target`. This means that it will not be mounted automatically during boot, unless it is pulled in by some other unit. The `auto` option has the opposite meaning and is the default. Note that the `noauto` option has an effect on the mount unit itself only â€” if `x-systemd.automount` is used (see above), then the matching automount unit will still be pulled in by these targets."],
[4,344,"With `nofail`, this mount will be only wanted, not required, by `local-fs.target` or `remote-fs.target`. Moreover the mount unit is not ordered before these target units. This means that the boot will continue without waiting for the mount unit and regardless whether the mount point can be mounted successfully."],
[4,345,"An additional filesystem to be mounted in the initramfs. See `initrd-fs.target` description in [systemd.special(7)](systemd.special.html#)."],
[4,346,"Takes an absolute path of a device node, file or other resource to mount. See [mount(8)](http://man7.org/linux/man-pages/man8/mount.8.html) for details. If this refers to a device node, a dependency on the respective device unit is automatically created. (See [systemd.device(5)](systemd.device.html#) for more information.) This option is mandatory. Note that the usual specifier expansion is applied to this setting, literal percent characters should hence be written as \"`%%`\". If this mount is a bind mount and the specified path does not exist yet it is created as directory."],
[4,347,"Takes an absolute path of a file or directory for the mount point; in particular, the destination cannot be a symbolic link. If the mount point does not exist at the time of mounting, it is created as directory. This string must be reflected in the unit filename. (See above.) This option is mandatory."],
[4,348,"Takes a string for the file system type. See [mount(8)](http://man7.org/linux/man-pages/man8/mount.8.html) for details. This setting is optional."],
[4,349,"Mount options to use when mounting. This takes a comma-separated list of options. This setting is optional. Note that the usual specifier expansion is applied to this setting, literal percent characters should hence be written as \"`%%`\"."],
[4,350,"Takes a boolean argument. If true, parsing of the options specified in `Options=` is relaxed, and unknown mount options are tolerated. This corresponds with [mount(8)](http://man7.org/linux/man-pages/man8/mount.8.html)'s _`-s`_ switch. Defaults to off."],
[4,351,"Takes a boolean argument. If true, detach the filesystem from the filesystem hierarchy at time of the unmount operation, and clean up all references to the filesystem as soon as they are not busy anymore. This corresponds with [umount(8)](http://man7.org/linux/man-pages/man8/umount.8.html)'s _`-l`_ switch. Defaults to off."],
[4,352,"Takes a boolean argument. If false, a mount point that shall be mounted read-write but cannot be mounted so is retried to be mounted read-only. If true the operation will fail immediately after the read-write mount attempt did not succeed. This corresponds with [mount(8)](http://man7.org/linux/man-pages/man8/mount.8.html)'s _`-w`_ switch. Defaults to off."],
[4,353,"Takes a boolean argument. If true, force an unmount (in case of an unreachable NFS system). This corresponds with [umount(8)](http://man7.org/linux/man-pages/man8/umount.8.html)'s _`-f`_ switch. Defaults to off."],
[4,354,"Directories of mount points (and any parent directories) are automatically created if needed. This option specifies the file system access mode used when creating these directories. Takes an access mode in octal notation. Defaults to 0755."],
[4,355,"Configures the time to wait for the mount command to finish. If a command does not exit within the configured time, the mount will be considered failed and be shut down again. All commands still running will be terminated forcibly via `SIGTERM`, and after another delay of this time with `SIGKILL`. (See `KillMode=` in [systemd.kill(5)](systemd.kill.html#).) Takes a unit-less value in seconds, or a time span value such as \"5min 20s\". Pass 0 to disable the timeout logic. The default value is set from `DefaultTimeoutStartSec=` option in [systemd-system.conf(5)](systemd-system.conf.html#)."],
[2,"DirectoryMode","",354,8],
[2,"ForceUnmount","",353,8],
[2,"LazyUnmount","",351,8],
[2,"Options","",349,8],
[2,"ReadWriteOnly","",352,8],
[2,"SloppyOptions","",350,8],
[2,"TimeoutSec","",355,8],
[2,"Type","",348,8],
[2,"What","",346,8],
[2,"Where","",347,8],
[2,"x-systemd.after","",331,8],
[2,"x-systemd.before","",331,8],
[2,"x-systemd.device-timeout","",337,8],
[2,"x-systemd.idle-timeout","",336,8],
[2,"x-systemd.mount-timeout","",338,8],
[2,"x-systemd.required-by","",332,8],
[2,"x-systemd.requires-mounts-for","",333,8],
[2,"x-systemd.requires","",330,8],
[2,"x-systemd.wanted-by","",332,8],
[3,9,"systemd.path(5)","systemd.path â€” Path unit configuration","systemd.path.html"],
[4,356,"Defines paths to monitor for certain changes: `PathExists=` may be used to watch the mere existence of a file or directory. If the file specified exists, the configured unit is activated. `PathExistsGlob=` works similar, but checks for the existence of at least one file matching the globbing pattern specified. `PathChanged=` may be used to watch a file or directory and activate the configured unit whenever it changes. It is not activated on every write to the watched file but it is activated if the file which was open for writing gets closed. `PathModified=` is similar, but additionally it is activated also on simple writes to the watched file. `DirectoryNotEmpty=` may be used to watch a directory and activate the configured unit whenever it contains at least one file.\n\nThe arguments of these directives must be absolute file system paths.\n\nMultiple directives may be combined, of the same and of different types, to watch multiple paths. If the empty string is assigned to any of these options, the list of paths to watch is reset, and any prior assignments of these options will not have any effect.\n\nIf a path already exists (in case of `PathExists=` and `PathExistsGlob=`) or a directory already is not empty (in case of `DirectoryNotEmpty=`) at the time the path unit is activated, then the configured unit is immediately activated as well. Something similar does not apply to `PathChanged=` and `PathModified=`.\n\nIf the path itself or any of the containing directories are not accessible, **systemd** will watch for permission changes and notice that conditions are satisfied when permissions allow that."],
[4,357,"The unit to activate when any of the configured paths changes. The argument is a unit name, whose suffix is not \"`.path`\". If not specified, this value defaults to a service that has the same name as the path unit, except for the suffix. (See above.) It is recommended that the unit name that is activated and the unit name of the path unit are named identical, except for the suffix."],
[4,358,"Takes a boolean argument. If true, the directories to watch are created before watching. This option is ignored for `PathExists=` settings. Defaults to `false`."],
[4,359,"If `MakeDirectory=` is enabled, use the mode specified here to create the directories in question. Takes an access mode in octal notation. Defaults to `0755`."],
[2,"DirectoryMode","",359,9],
[2,"DirectoryNotEmpty","",356,9],
[2,"MakeDirectory","",358,9],
[2,"PathChanged","",356,9],
[2,"PathExists","",356,9],
[2,"PathExistsGlob","",356,9],
[2,"PathModified","",356,9],
[2,"Unit","",357,9],
[3,10,"systemd.kill(5)","systemd.kill â€” Process killing procedure configuration","systemd.kill.html"],
[4,360,"Specifies how processes of this unit shall be killed. One of `control-group`, `mixed`, `process`, `none`.\n\nIf set to `control-group`, all remaining processes in the control group of this unit will be killed on unit stop (for services: after the stop command is executed, as configured with `ExecStop=`). If set to `mixed`, the `SIGTERM` signal (see below) is sent to the main process while the subsequent `SIGKILL` signal (see below) is sent to all remaining processes of the unit's control group. If set to `process`, only the main process itself is killed (not recommended!). If set to `none`, no process is killed (strongly recommended against!). In this case, only the stop command will be executed on unit stop, but no process will be killed otherwise. Processes remaining alive after stop are left in their control group and the control group continues to exist after stop unless empty.\n\nNote that it is not recommended to set `KillMode=` to `process` or even `none`, as this allows processes to escape the service manager's lifecycle and resource management, and to remain running even while their service is considered stopped and is assumed to not consume any resources.\n\nProcesses will first be terminated via `SIGTERM` (unless the signal to send is changed via `KillSignal=` or `RestartKillSignal=`). Optionally, this is immediately followed by a `SIGHUP` (if enabled with `SendSIGHUP=`). If processes still remain after the main process of a unit has exited or the delay configured via the `TimeoutStopSec=` has passed, the termination request is repeated with the `SIGKILL` signal or the signal specified via `FinalKillSignal=` (unless this is disabled via the `SendSIGKILL=` option). See [kill(2)](http://man7.org/linux/man-pages/man2/kill.2.html) for more information.\n\nDefaults to `control-group`."],
[4,361,"Specifies which signal to use when stopping a service. This controls the signal that is sent as first step of shutting down a unit (see above), and is usually followed by `SIGKILL` (see above and below). For a list of valid signals, see [signal(7)](http://man7.org/linux/man-pages/man7/signal.7.html). Defaults to `SIGTERM`.\n\nNote that, right after sending the signal specified in this setting, systemd will always send `SIGCONT`, to ensure that even suspended tasks can be terminated cleanly."],
[4,362,"Specifies which signal to use when restarting a service. The same as `KillSignal=` described above, with the exception that this setting is used in a restart job. Not set by default, and the value of `KillSignal=` is used."],
[4,363,"Specifies whether to send `SIGHUP` to remaining processes immediately after sending the signal configured with `KillSignal=`. This is useful to indicate to shells and shell-like programs that their connection has been severed. Takes a boolean value. Defaults to \"no\"."],
[4,364,"Specifies whether to send `SIGKILL` (or the signal specified by `FinalKillSignal=`) to remaining processes after a timeout, if the normal shutdown procedure left processes of the service around. When disabled, a `KillMode=` of `control-group` or `mixed` service will not restart if processes from prior services exist within the control group. Takes a boolean value. Defaults to \"yes\"."],
[4,365,"Specifies which signal to send to remaining processes after a timeout if `SendSIGKILL=` is enabled. The signal configured here should be one that is not typically caught and processed by services (`SIGTERM` is not suitable). Developers can find it useful to use this to generate a coredump to troubleshoot why a service did not terminate upon receiving the initial `SIGTERM` signal. This can be achieved by configuring `LimitCORE=` and setting `FinalKillSignal=` to either `SIGQUIT` or `SIGABRT`. Defaults to `SIGKILL`."],
[4,366,"Specifies which signal to use to terminate the service when the watchdog timeout expires (enabled through `WatchdogSec=`). Defaults to `SIGABRT`."],
[2,"FinalKillSignal","",365,10],
[2,"KillMode","",360,10],
[2,"KillSignal","",361,10],
[2,"RestartKillSignal","",362,10],
[2,"SendSIGHUP","",363,10],
[2,"SendSIGKILL","",364,10],
[2,"WatchdogSignal","",366,10],
[3,11,"systemd.swap(5)","systemd.swap â€” Swap unit configuration","systemd.swap.html"],
[4,367,"With `noauto`, the swap unit will not be added as a dependency for `swap.target`. This means that it will not be activated automatically during boot, unless it is pulled in by some other unit. The `auto` option has the opposite meaning and is the default."],
[4,368,"With `nofail`, the swap unit will be only wanted, not required by `swap.target`. This means that the boot will continue even if this swap device is not activated successfully."],
[4,369,"Configure how long systemd should wait for a device to show up before giving up on an entry from `/etc/fstab`. Specify a time in seconds or explicitly append a unit such as \"`s`\", \"`min`\", \"`h`\", \"`ms`\".\n\nNote that this option can only be used in `/etc/fstab`, and will be ignored when part of the `Options=` setting in a unit file."],
[4,370,"The swap structure will be initialized on the device. If the device is not \"empty\", i.e. it contains any signature, the operation will be skipped. It is hence expected that this option remains set even after the device has been initialized.\n\nNote that this option can only be used in `/etc/fstab`, and will be ignored when part of the `Options=` setting in a unit file.\n\nSee [systemd-mkswap@.service(8)](systemd-mkswap@.service.html#) and the discussion of [wipefs(8)](http://man7.org/linux/man-pages/man8/wipefs.8.html) in [systemd.mount(5)](systemd.mount.html#)."],
[4,371,"Takes an absolute path of a device node or file to use for paging. See [swapon(8)](http://man7.org/linux/man-pages/man8/swapon.8.html) for details. If this refers to a device node, a dependency on the respective device unit is automatically created. (See [systemd.device(5)](systemd.device.html#) for more information.) If this refers to a file, a dependency on the respective mount unit is automatically created. (See [systemd.mount(5)](systemd.mount.html#) for more information.) This option is mandatory. Note that the usual specifier expansion is applied to this setting, literal percent characters should hence be written as \"`%%`\"."],
[4,372,"Swap priority to use when activating the swap device or file. This takes an integer. This setting is optional and ignored when the priority is set by `pri=` in the `Options=` key."],
[4,373,"May contain an option string for the swap device. This may be used for controlling discard options among other functionality, if the swap backing device supports the discard or trim operation. (See [swapon(8)](http://man7.org/linux/man-pages/man8/swapon.8.html) for more information.) Note that the usual specifier expansion is applied to this setting, literal percent characters should hence be written as \"`%%`\"."],
[4,374,"Configures the time to wait for the swapon command to finish. If a command does not exit within the configured time, the swap will be considered failed and be shut down again. All commands still running will be terminated forcibly via `SIGTERM`, and after another delay of this time with `SIGKILL`. (See `KillMode=` in [systemd.kill(5)](systemd.kill.html#).) Takes a unit-less value in seconds, or a time span value such as \"5min 20s\". Pass \"`0`\" to disable the timeout logic. Defaults to `DefaultTimeoutStartSec=` from the manager configuration file (see [systemd-system.conf(5)](systemd-system.conf.html#))."],
[2,"Options","",373,11],
[2,"Priority","",372,11],
[2,"TimeoutSec","",374,11],
[2,"What","",371,11],
[2,"x-systemd.device-timeout","",369,11],
[3,12,"systemd.scope(5)","systemd.scope â€” Scope unit configuration","systemd.scope.html"],
[4,375,"Configures a maximum time for the scope to run. If this is used and the scope has been active for longer than the specified time it is terminated and put into a failure state. Pass \"`infinity`\" (the default) to configure no runtime limit."],
[4,376,"This option modifies `RuntimeMaxSec=` by increasing the maximum runtime by an evenly distributed duration between 0 and the specified value (in seconds). If `RuntimeMaxSec=` is unspecified, then this feature will be disabled."],
[2,"RuntimeMaxSec","",375,12],
[2,"RuntimeRandomizedExtraSec","",376,12],
[3,13,"systemd-network-generator.service(8)","systemd-network-generator.service, systemd-network-generator â€” Generate network configuration from the kernel command line","systemd-network-generator.service.html"],
[4,377,"â€” translated into [systemd.network(5)](systemd.network.html#) files."],
[4,378,"â€” translated into [systemd.link(5)](systemd.link.html#) files."],
[4,379,"â€” translated into [systemd.netdev(5)](systemd.netdev.html#) files."],
[2,"bond","",379,13],
[2,"bootdev","",379,13],
[2,"bridge","",379,13],
[2,"ifname","",378,13],
[2,"ip","",377,13],
[2,"rd.peerdns","",377,13],
[2,"rd.route","",377,13],
[2,"vlan","",379,13],
[3,14,"kernel-command-line(7)","kernel-command-line â€” Kernel command line parameters","kernel-command-line.html"],
[4,380,"Parameters understood by the system and service manager to control system behavior. For details, see [systemd(1)](systemd.html#)."],
[4,381,"Additional parameters understood by [systemd-debug-generator(8)](systemd-debug-generator.html#), to mask or start specific units at boot, or invoke a debug shell on tty9."],
[4,382,"Additional parameters understood by [systemd-run-generator(8)](systemd-run-generator.html#), to run a command line specified on the kernel command line as system service after booting up."],
[4,383,"During early boot, the generation of core dump files is disabled until a core dump handler (if any) takes over. This parameter allows specifying an absolute path where core dump files should be stored until a handler is installed. The path should be absolute and may contain specifiers, see [core(5)](http://man7.org/linux/man-pages/man5/core.5.html) for details."],
[4,384,"This parameter is understood by several system tools to control whether or not they should restore system state from the previous boot. For details, see [systemd-backlight@.service(8)](systemd-backlight@.service.html#) and [systemd-rfkill.service(8)](systemd-rfkill.service.html#)."],
[4,385,"This parameter controls whether the system shall boot up in volatile mode. Takes a boolean argument, or the special value \"`state`\". If false (the default), normal boot mode is selected, the root directory and `/var/` are mounted as specified on the kernel command line or `/etc/fstab`, or otherwise configured. If true, full state-less boot mode is selected. In this case the root directory is mounted as volatile memory file system (\"`tmpfs`\"), and only `/usr/` is mounted from the file system configured as root device, in read-only mode. This enables fully state-less boots were the vendor-supplied OS is used as shipped, with only default configuration and no stored state in effect, as `/etc/` and `/var/` (as well as all other resources shipped in the root file system) are reset at boot and lost on shutdown. If this setting is set to \"`state`\" the root file system is mounted read-only, however `/var/` is mounted as a volatile memory file system (\"`tmpfs`\"), so that the system boots up with the normal configuration applied, but all state reset at boot and lost at shutdown. If this setting is set to \"`overlay`\" the root file system is set up as \"`overlayfs`\" mount combining the read-only root directory with a writable \"`tmpfs`\", so that no modifications are made to disk, but the file system may be modified nonetheless with all changes being lost at reboot. For details, see [systemd-volatile-root.service(8)](systemd-volatile-root.service.html#) and [systemd-fstab-generator(8)](systemd-fstab-generator.html#)."],
[4,386,"Parameter understood by both the kernel and the system and service manager to control console log verbosity. For details, see [systemd(1)](systemd.html#)."],
[4,387,"Parameter understood by both the kernel and the system and service manager to control console log verbosity. For details, see [systemd(1)](systemd.html#)."],
[4,388,"Parameters understood by the system and service manager, as compatibility and convenience options. For details, see [systemd(1)](systemd.html#)."],
[4,389,"Parameters understood by the system and service manager to control locale and language settings. For details, see [systemd(1)](systemd.html#)."],
[4,390,"Parameters understood by the file system checker services. For details, see [systemd-fsck@.service(8)](systemd-fsck@.service.html#)."],
[4,391,"Parameter understood by the file quota checker service. For details, see [systemd-quotacheck.service(8)](systemd-quotacheck.service.html#)."],
[4,392,"Parameters understood by the journal service. For details, see [systemd-journald.service(8)](systemd-journald.service.html#)."],
[4,393,"Parameters understood by the virtual console setup logic. For details, see [vconsole.conf(5)](vconsole.conf.html#)."],
[4,394,"Parameters understood by the device event managing daemon. For details, see [systemd-udevd.service(8)](systemd-udevd.service.html#)."],
[4,395,"May be used to disable the Plymouth boot splash. For details, see [plymouth(8)](http://linux.die.net/man/8/plymouth)."],
[4,396,"Configures the LUKS full-disk encryption logic at boot. For details, see [systemd-cryptsetup-generator(8)](systemd-cryptsetup-generator.html#)."],
[4,397,"Configures the `/etc/fstab` logic at boot. For details, see [systemd-fstab-generator(8)](systemd-fstab-generator.html#)."],
[4,398,"Configures the root file system and its file system type and mount options, as well as whether it shall be mounted read-only or read-write initially. For details, see [systemd-fstab-generator(8)](systemd-fstab-generator.html#)."],
[4,399,"Configures the /usr file system (if required) and its file system type and mount options. For details, see [systemd-fstab-generator(8)](systemd-fstab-generator.html#)."],
[4,400,"Configures the integrity protection root hash for the root and `/usr` file systems, and other related parameters. For details, see [systemd-veritysetup-generator(8)](systemd-veritysetup-generator.html#)."],
[4,401,"Configures whether the `serial-getty@.service` will run. For details, see [systemd-getty-generator(8)](systemd-getty-generator.html#)."],
[4,402,"Configures whether GPT based partition auto-discovery shall be attempted. For details, see [systemd-gpt-auto-generator(8)](systemd-gpt-auto-generator.html#)."],
[4,403,"Overrides the default start job timeout `DefaultTimeoutStartSec=` at boot. For details, see [systemd-system.conf(5)](systemd-system.conf.html#)."],
[4,404,"Overrides the watchdog device path `WatchdogDevice=`. For details, see [systemd-system.conf(5)](systemd-system.conf.html#)."],
[4,405,"Overrides the watchdog timeout settings otherwise configured with `RuntimeWatchdog=`, `RebootWatchdog=` and `KExecWatchdogSec=`. Takes a time value (if no unit is specified, seconds is the implicitly assumed time unit) or the special strings \"`off`\" or \"`default`\". For details, see [systemd-system.conf(5)](systemd-system.conf.html#)."],
[4,406,"Overrides the CPU affinity mask for the service manager and the default for all child processes it forks. This takes precedence over `CPUAffinity=`, see [systemd-system.conf(5)](systemd-system.conf.html#) for details."],
[4,407,"Load a specific kernel module early at boot. For details, see [systemd-modules-load.service(8)](systemd-modules-load.service.html#)."],
[4,408,"Enables resume from hibernation using the specified device and mount options. All [fstab(5)](http://man7.org/linux/man-pages/man5/fstab.5.html)\\-like paths are supported. For details, see [systemd-hibernate-resume-generator(8)](systemd-hibernate-resume-generator.html#)."],
[4,409,"Takes a boolean argument, defaults to on. If off, [systemd-firstboot.service(8)](systemd-firstboot.service.html#) will not query the user for basic system settings, even if the system boots up for the first time and the relevant settings are not initialized yet. Not to be confused with `systemd.condition-first-boot=` (see below), which overrides the result of the `ConditionFirstBoot=` unit file condition, and thus controls more than just `systemd-firstboot.service` behaviour."],
[4,410,"Takes a boolean argument. If specified, overrides the result of `ConditionNeedsUpdate=` unit condition checks. See [systemd.unit(5)](systemd.unit.html#) for details."],
[4,411,"Takes a boolean argument. If specified, overrides the result of `ConditionFirstBoot=` unit condition checks. See [systemd.unit(5)](systemd.unit.html#) for details. Not to be confused with `systemd.firstboot=` which only controls behaviour of the `systemd-firstboot.service` system service but has no effect on the condition check (see above)."],
[4,412,"Takes a decimal, numeric timestamp in Âµs since January 1st 1970, 00:00am, to set the system clock to. The system time is set to the specified timestamp early during boot. It is not propagated to the hardware clock (RTC)."],
[4,413,"Takes a base64 encoded random seed value to credit with full entropy to the kernel's random pool during early service manager initialization. This option is useful in testing environments where delays due to random pool initialization in entropy starved virtual machines shall be avoided.\n\nNote that if this option is used the seed is accessible to unprivileged programs from `/proc/cmdline`. This option is hence a security risk when used outside of test systems, since the (possibly) only seed used for initialization of the kernel's entropy pool might be easily acquired by unprivileged programs.\n\nIt is recommended to pass 512 bytes of randomized data (as that matches the Linux kernel pool size), which may be generated with a command like the following:\n\ndd if=/dev/urandom bs=512 count=1 status=none | base64 -w 0\n\nAgain: do not use this option outside of testing environments, it's a security risk elsewhere, as secret key material derived from the entropy pool can possibly be reconstructed by unprivileged programs."],
[4,414,"Accepts a hostname to set during early boot. If specified takes precedence over what is set in `/etc/hostname`. Note that this does not bar later runtime changes to the hostname, it simply controls the initial hostname set during early boot."],
[2,"fsck.mode","",390,14],
[2,"fsck.repair","",390,14],
[2,"fstab","",397,14],
[2,"locale.LANG","",389,14],
[2,"locale.LANGUAGE","",389,14],
[2,"locale.LC_ADDRESS","",389,14],
[2,"locale.LC_COLLATE","",389,14],
[2,"locale.LC_CTYPE","",389,14],
[2,"locale.LC_IDENTIFICATION","",389,14],
[2,"locale.LC_MEASUREMENT","",389,14],
[2,"locale.LC_MESSAGES","",389,14],
[2,"locale.LC_MONETARY","",389,14],
[2,"locale.LC_NAME","",389,14],
[2,"locale.LC_NUMERIC","",389,14],
[2,"locale.LC_PAPER","",389,14],
[2,"locale.LC_TELEPHONE","",389,14],
[2,"locale.LC_TIME","",389,14],
[2,"luks.crypttab","",396,14],
[2,"luks.key","",396,14],
[2,"luks.name","",396,14],
[2,"luks.options","",396,14],
[2,"luks.uuid","",396,14],
[2,"luks","",396,14],
[2,"modules_load","",407,14],
[2,"mount.usr","",399,14],
[2,"mount.usrflags","",399,14],
[2,"mount.usrfstype","",399,14],
[2,"net.ifnames","",394,14],
[2,"net.naming-scheme","",394,14],
[2,"plymouth.enable","",395,14],
[2,"quotacheck.mode","",391,14],
[2,"rd.fstab","",397,14],
[2,"rd.luks.crypttab","",396,14],
[2,"rd.luks.key","",396,14],
[2,"rd.luks.name","",396,14],
[2,"rd.luks.options","",396,14],
[2,"rd.luks.uuid","",396,14],
[2,"rd.luks","",396,14],
[2,"rd.modules_load","",407,14],
[2,"rd.systemd.gpt_auto","",402,14],
[2,"rd.systemd.unit",", systemd.dump_core",380,14],
[2,"rd.systemd.verity","",400,14],
[2,"rd.udev.children_max",", udev.blockdev_read_only",394,14],
[2,"rd.udev.event_timeout",", udev.blockdev_read_only",394,14],
[2,"rd.udev.exec_delay",", udev.blockdev_read_only",394,14],
[2,"rd.udev.log_level",", udev.blockdev_read_only",394,14],
[2,"rd.udev.timeout_signal",", udev.blockdev_read_only",394,14],
[2,"rd.veritytab","",400,14],
[2,"resume","",408,14],
[2,"resumeflags","",408,14],
[2,"root",", ro",398,14],
[2,"rootflags",", ro",398,14],
[2,"rootfstype",", ro",398,14],
[2,"roothash","",400,14],
[2,"systemd.clock-usec","",412,14],
[2,"systemd.condition-first-boot","",411,14],
[2,"systemd.condition-needs-update","",410,14],
[2,"systemd.cpu_affinity","",406,14],
[2,"systemd.default_standard_error",", systemd.unified_cgroup_hierarchy",380,14],
[2,"systemd.default_standard_output",", systemd.unified_cgroup_hierarchy",380,14],
[2,"systemd.default_timeout_start_sec","",403,14],
[2,"systemd.early_core_pattern","",383,14],
[2,"systemd.firstboot","",409,14],
[2,"systemd.getty_auto","",401,14],
[2,"systemd.gpt_auto","",402,14],
[2,"systemd.hostname","",414,14],
[2,"systemd.journald.forward_to_console","",392,14],
[2,"systemd.journald.forward_to_kmsg","",392,14],
[2,"systemd.journald.forward_to_syslog","",392,14],
[2,"systemd.journald.forward_to_wall","",392,14],
[2,"systemd.log_level",", systemd.log_color",380,14],
[2,"systemd.log_location",", systemd.log_color",380,14],
[2,"systemd.log_target",", systemd.log_color",380,14],
[2,"systemd.machine_id",", systemd.unified_cgroup_hierarchy",380,14],
[2,"systemd.mask",", systemd.debug_shell",381,14],
[2,"systemd.random-seed","",413,14],
[2,"systemd.restore_state","",384,14],
[2,"systemd.run","",382,14],
[2,"systemd.run_failure_action","",382,14],
[2,"systemd.run_success_action","",382,14],
[2,"systemd.setenv",", systemd.unified_cgroup_hierarchy",380,14],
[2,"systemd.status_unit_format",", systemd.log_color",380,14],
[2,"systemd.unit",", systemd.dump_core",380,14],
[2,"systemd.verity.root_options","",400,14],
[2,"systemd.verity","",400,14],
[2,"systemd.verity_root_data","",400,14],
[2,"systemd.verity_root_hash","",400,14],
[2,"systemd.verity_usr_data","",400,14],
[2,"systemd.verity_usr_hash","",400,14],
[2,"systemd.verity_usr_options","",400,14],
[2,"systemd.volatile","",385,14],
[2,"systemd.wants",", systemd.debug_shell",381,14],
[2,"systemd.watchdog_device","",404,14],
[2,"systemd.watchdog_sec","",405,14],
[2,"udev.children_max",", udev.blockdev_read_only",394,14],
[2,"udev.event_timeout",", udev.blockdev_read_only",394,14],
[2,"udev.exec_delay",", udev.blockdev_read_only",394,14],
[2,"udev.log_level",", udev.blockdev_read_only",394,14],
[2,"udev.timeout_signal",", udev.blockdev_read_only",394,14],
[2,"usrhash","",400,14],
[2,"vconsole.font","",393,14],
[2,"vconsole.font_map","",393,14],
[2,"vconsole.font_unimap","",393,14],
[2,"vconsole.keymap","",393,14],
[2,"vconsole.keymap_toggle","",393,14],
[2,"veritytab","",400,14],
[3,15,"systemd-fsck@.service(8)","systemd-fsck@.service, systemd-fsck-root.service, systemd-fsck â€” File system checker logic","systemd-fsck@.service.html"],
[4,415,"One of \"`auto`\", \"`force`\", \"`skip`\". Controls the mode of operation. The default is \"`auto`\", and ensures that file system checks are done when the file system checker deems them necessary. \"`force`\" unconditionally results in full file system checks. \"`skip`\" skips any file system checks."],
[4,416,"One of \"`preen`\", \"`yes`\", \"`no`\". Controls the mode of operation. The default is \"`preen`\", and will automatically repair problems that can be safely fixed. \"`yes`\" will answer yes to all questions by fsck and \"`no`\" will answer no to all questions."],
[2,"fsck.mode","",415,15],
[2,"fsck.repair","",416,15],
[3,16,"systemd-fstab-generator(8)","systemd-fstab-generator â€” Unit generator for /etc/fstab","systemd-fstab-generator.html"],
[4,417,"Takes a boolean argument. Defaults to \"`yes`\". If \"`no`\", causes the generator to ignore any mounts or swap devices configured in `/etc/fstab`. `rd.fstab=` is honored only by the initial RAM disk (initrd) while `fstab=` is honored by both the main system and the initrd."],
[4,418,"Configures the operating system's root filesystem to mount when running in the initrd. This accepts a device node path (usually `/dev/disk/by-uuid/â€¦` or `/dev/disk/by-label/â€¦` or similar), or the special values \"`gpt-auto`\" and \"`tmpfs`\".\n\nUse \"`gpt-auto`\" to explicitly request automatic root file system discovery via [systemd-gpt-auto-generator(8)](systemd-gpt-auto-generator.html#).\n\nUse \"`tmpfs`\" in order to mount a [tmpfs(5)](http://man7.org/linux/man-pages/man5/tmpfs.5.html) file system as root file system of the OS. This is useful in combination with `mount.usr=` (see below) in order to combine a volatile root file system with a separate, immutable `/usr/` file system. Also see `systemd.volatile=` below."],
[4,419,"Takes the root filesystem type that will be passed to the mount command. `rootfstype=` is honored by the initrd."],
[4,420,"Takes the root filesystem mount options to use. `rootflags=` is honored by the initrd.\n\nNote that unlike most kernel command line options this setting does not override settings made in configuration files (specifically: the mount option string in `/etc/fstab`). See [systemd-remount-fs.service(8)](systemd-remount-fs.service.html#)."],
[4,421,"Takes the `/usr/` filesystem to be mounted by the initrd. If `mount.usrfstype=` or `mount.usrflags=` is set, then `mount.usr=` will default to the value set in `root=`.\n\nOtherwise, this parameter defaults to the `/usr/` entry found in `/etc/fstab` on the root filesystem.\n\n`mount.usr=` is honored by the initrd."],
[4,422,"Takes the `/usr/` filesystem type that will be passed to the mount command. If `mount.usr=` or `mount.usrflags=` is set, then `mount.usrfstype=` will default to the value set in `rootfstype=`.\n\nOtherwise, this value will be read from the `/usr/` entry in `/etc/fstab` on the root filesystem.\n\n`mount.usrfstype=` is honored by the initrd."],
[4,423,"Takes the `/usr/` filesystem mount options to use. If `mount.usr=` or `mount.usrfstype=` is set, then `mount.usrflags=` will default to the value set in `rootflags=`.\n\nOtherwise, this value will be read from the `/usr/` entry in `/etc/fstab` on the root filesystem.\n\n`mount.usrflags=` is honored by the initrd."],
[4,424,"Controls whether the system shall boot up in volatile mode. Takes a boolean argument or the special value `state`.\n\nIf false (the default), this generator makes no changes to the mount tree and the system is booted up in normal mode.\n\nIf true the generator ensures [systemd-volatile-root.service(8)](systemd-volatile-root.service.html#) is run as part of the initial RAM disk (\"initrd\"). This service changes the mount table before transitioning to the host system, so that a volatile memory file system (\"`tmpfs`\") is used as root directory, with only `/usr/` mounted into it from the configured root file system, in read-only mode. This way the system operates in fully stateless mode, with all configuration and state reset at boot and lost at shutdown, as `/etc/` and `/var/` will be served from the (initially unpopulated) volatile memory file system.\n\nIf set to `state` the generator will leave the root directory mount point unaltered, however will mount a \"`tmpfs`\" file system to `/var/`. In this mode the normal system configuration (i.e. the contents of \"`/etc/`\") is in effect (and may be modified during system runtime), however the system state (i.e. the contents of \"`/var/`\") is reset at boot and lost at shutdown.\n\nIf this setting is set to \"`overlay`\" the root file system is set up as \"`overlayfs`\" mount combining the read-only root directory with a writable \"`tmpfs`\", so that no modifications are made to disk, but the file system may be modified nonetheless with all changes being lost at reboot.\n\nNote that in none of these modes the root directory, `/etc/`, `/var/` or any other resources stored in the root file system are physically removed. It's thus safe to boot a system that is normally operated in non-volatile mode temporarily into volatile mode, without losing data.\n\nNote that with the exception of \"`overlay`\" mode, enabling this setting will only work correctly on operating systems that can boot up with only `/usr/` mounted, and are able to automatically populate `/etc/`, and also `/var/` in case of \"`systemd.volatile=yes`\".\n\nAlso see `root=tmpfs` above, for a method to combine a \"`tmpfs`\" file system with a regular `/usr/` file system (as configured via `mount.usr=`). The main distinction between `systemd.volatile=yes`, and `root=tmpfs` in combination `mount.usr=` is that the former operates on top of a regular root file system and temporarily obstructs the files and directories above its `/usr/` subdirectory, while the latter does not hide any files, but simply mounts a unpopulated tmpfs as root file system and combines it with a user picked `/usr/` file system."],
[4,425,"Takes a boolean argument or enables the option if specified without an argument. If disabled, causes the generator to ignore any swap devices configured in `/etc/fstab`. Defaults to enabled."],
[2,"fstab","",417,16],
[2,"mount.usr","",421,16],
[2,"mount.usrflags","",423,16],
[2,"mount.usrfstype","",422,16],
[2,"rd.fstab","",417,16],
[2,"root","",418,16],
[2,"rootflags","",420,16],
[2,"rootfstype","",419,16],
[2,"systemd.volatile","",424,16],
[3,17,"systemd(1)","systemd, init â€” systemd system and service manager","systemd.html"],
[4,426,"The systemd system manager reads unit configuration from various directories. Packages that want to install unit files shall place them in the directory returned by **pkg-config systemd --variable=systemdsystemunitdir**. Other directories checked are `/usr/local/lib/systemd/system` and `/usr/lib/systemd/system`. User configuration always takes precedence. **pkg-config systemd --variable=systemdsystemconfdir** returns the path of the system configuration directory. Packages should alter the content of these directories only with the **enable** and **disable** commands of the [systemctl(1)](systemctl.html#) tool. Full list of directories is provided in [systemd.unit(5)](systemd.unit.html#)."],
[4,427,"Similar rules apply for the user unit directories. However, here the [XDG Base Directory specification](http://standards.freedesktop.org/basedir-spec/basedir-spec-latest.html) is followed to find units. Applications should place their unit files in the directory returned by **pkg-config systemd --variable=systemduserunitdir**. Global configuration is done in the directory reported by **pkg-config systemd --variable=systemduserconfdir**. The **enable** and **disable** commands of the [systemctl(1)](systemctl.html#) tool can handle both global (i.e. for all users) and private (for one user) enabling/disabling of units. Full list of directories is provided in [systemd.unit(5)](systemd.unit.html#)."],
[4,428,"The location of the SysV init script directory varies between distributions. If systemd cannot find a native unit file for a requested service, it will look for a SysV init script of the same name (with the `.service` suffix removed)."],
[4,429,"The location of the SysV runlevel link farm directory varies between distributions. systemd will take the link farm into account when figuring out whether a service shall be enabled. Note that a service unit with a native unit configuration file cannot be started by activating it in the SysV runlevel link farm."],
[4,430,"Upon receiving this signal the systemd system manager serializes its state, reexecutes itself and deserializes the saved state again. This is mostly equivalent to **systemctl daemon-reexec**.\n\nsystemd user managers will start the `exit.target` unit when this signal is received. This is mostly equivalent to **systemctl --user start exit.target --job-mode=replace-irreversibly**."],
[4,431,"Upon receiving this signal the systemd system manager will start the `ctrl-alt-del.target` unit. This is mostly equivalent to **systemctl start ctrl-alt-del.target --job-mode=replace-irreversibly**. If this signal is received more than 7 times per 2s, an immediate reboot is triggered. Note that pressing **Ctrl**+**Alt**+**Del** on the console will trigger this signal. Hence, if a reboot is hanging, pressing **Ctrl**+**Alt**+**Del** more than 7 times in 2 seconds is a relatively safe way to trigger an immediate reboot.\n\nsystemd user managers treat this signal the same way as `SIGTERM`."],
[4,432,"When this signal is received the systemd system manager will start the `kbrequest.target` unit. This is mostly equivalent to **systemctl start kbrequest.target**.\n\nThis signal is ignored by systemd user managers."],
[4,433,"When this signal is received the systemd manager will start the `sigpwr.target` unit. This is mostly equivalent to **systemctl start sigpwr.target**."],
[4,434,"When this signal is received the systemd manager will try to reconnect to the D-Bus bus."],
[4,435,"When this signal is received the systemd manager will log its complete state in human-readable form. The data logged is the same as printed by **systemd-analyze dump**."],
[4,436,"Reloads the complete daemon configuration. This is mostly equivalent to **systemctl daemon-reload**."],
[4,437,"Enters default mode, starts the `default.target` unit. This is mostly equivalent to **systemctl isolate default.target**."],
[4,438,"Enters rescue mode, starts the `rescue.target` unit. This is mostly equivalent to **systemctl isolate rescue.target**."],
[4,439,"Enters emergency mode, starts the `emergency.service` unit. This is mostly equivalent to **systemctl isolate emergency.service**."],
[4,440,"Halts the machine, starts the `halt.target` unit. This is mostly equivalent to **systemctl start halt.target --job-mode=replace-irreversibly**."],
[4,441,"Powers off the machine, starts the `poweroff.target` unit. This is mostly equivalent to **systemctl start poweroff.target --job-mode=replace-irreversibly**."],
[4,442,"Reboots the machine, starts the `reboot.target` unit. This is mostly equivalent to **systemctl start reboot.target --job-mode=replace-irreversibly**."],
[4,443,"Reboots the machine via kexec, starts the `kexec.target` unit. This is mostly equivalent to **systemctl start kexec.target --job-mode=replace-irreversibly**."],
[4,444,"Immediately halts the machine."],
[4,445,"Immediately powers off the machine."],
[4,446,"Immediately reboots the machine."],
[4,447,"Immediately reboots the machine with kexec."],
[4,448,"Enables display of status messages on the console, as controlled via `systemd.show_status=1` on the kernel command line."],
[4,449,"Disables display of status messages on the console, as controlled via `systemd.show_status=0` on the kernel command line."],
[4,450,"Sets the service manager's log level to \"`debug`\", in a fashion equivalent to `systemd.log_level=debug` on the kernel command line."],
[4,451,"Restores the log level to its configured value. The configured value is derived from â€“ in order of priority â€“ the value specified with `systemd.log-level=` on the kernel command line, or the value specified with `LogLevel=` in the configuration file, or the built-in default of \"`info`\"."],
[4,452,"Immediately exits the manager (only available for --user instances)."],
[4,453,"Upon receiving this signal the systemd manager will reexecute itself. This is mostly equivalent to **systemctl daemon-reexec** except that it will be done asynchronously.\n\nThe systemd system manager treats this signal the same way as `SIGTERM`."],
[4,454,"Restores the log target to its configured value. The configured value is derived from â€“ in order of priority â€“ the value specified with `systemd.log-target=` on the kernel command line, or the value specified with `LogTarget=` in the configuration file, or the built-in default."],
[4,455,"Sets the log target to \"`console`\" on `SIGRTMIN+27` (or \"`kmsg`\" on `SIGRTMIN+28`), in a fashion equivalent to `systemd.log_target=console` (or `systemd.log_target=kmsg` on `SIGRTMIN+28`) on the kernel command line."],
[4,456,"The maximum log level of emitted messages (messages with a higher log level, i.e. less important ones, will be suppressed). Either one of (in order of decreasing importance) `emerg`, `alert`, `crit`, `err`, `warning`, `notice`, `info`, `debug`, or an integer in the range 0â€¦7. See [syslog(3)](http://man7.org/linux/man-pages/man3/syslog.3.html) for more information.\n\nThis can be overridden with `--log-level=`."],
[4,457,"A boolean. If true, messages written to the tty will be colored according to priority.\n\nThis can be overridden with `--log-color=`."],
[4,458,"A boolean. If true, console log messages will be prefixed with a timestamp.\n\nThis can be overridden with `--log-time=`."],
[4,459,"A boolean. If true, messages will be prefixed with a filename and line number in the source code where the message originates.\n\nThis can be overridden with `--log-location=`."],
[4,460,"A boolean. If true, messages will be prefixed with the current numerical thread ID (TID)."],
[4,461,"The destination for log messages. One of `console` (log to the attached tty), `console-prefixed` (log to the attached tty but with prefixes encoding the log level and \"facility\", see [syslog(3)](http://man7.org/linux/man-pages/man3/syslog.3.html), `kmsg` (log to the kernel circular log buffer), `journal` (log to the journal), `journal-or-kmsg` (log to the journal if available, and to kmsg otherwise), `auto` (determine the appropriate log target automatically, the default), `null` (disable log output).\n\nThis can be overridden with `--log-target=`."],
[4,462,"The systemd user manager uses these variables in accordance to the [XDG Base Directory specification](http://standards.freedesktop.org/basedir-spec/basedir-spec-latest.html) to find its configuration."],
[4,463,"Controls where systemd looks for unit files and generators.\n\nThese variables may contain a list of paths, separated by colons (\"`:`\"). When set, if the list ends with an empty component (\"`...:`\"), this list is prepended to the usual set of paths. Otherwise, the specified list replaces the usual set of paths."],
[4,464,"Pager to use when `--no-pager` is not given; overrides `$PAGER`. If neither `$SYSTEMD_PAGER` nor `$PAGER` are set, a set of well-known pager implementations are tried in turn, including [less(1)](http://man7.org/linux/man-pages/man1/less.1.html) and [more(1)](http://man7.org/linux/man-pages/man1/more.1.html), until one is found. If no pager implementation is discovered no pager is invoked. Setting this environment variable to an empty string or the value \"`cat`\" is equivalent to passing `--no-pager`."],
[4,465,"Override the options passed to **less** (by default \"`FRSXMK`\").\n\nUsers might want to change two options in particular:\n\n`K`[Â¶](#K \"Permalink to this term\")\n\n`X`[Â¶](#X \"Permalink to this term\")\n\nSee [less(1)](http://man7.org/linux/man-pages/man1/less.1.html) for more discussion."],
[4,466,""],
[4,467,""],
[4,468,"Override the charset passed to **less** (by default \"`utf-8`\", if the invoking terminal is determined to be UTF-8 compatible)."],
[4,469,"Takes a boolean argument. When true, the \"secure\" mode of the pager is enabled; if false, disabled. If `$SYSTEMD_PAGERSECURE` is not set at all, secure mode is enabled if the effective UID is not the same as the owner of the login session, see [geteuid(2)](http://man7.org/linux/man-pages/man2/geteuid.2.html) and [sd\\_pid\\_get\\_owner\\_uid(3)](sd_pid_get_owner_uid.html#). In secure mode, `LESSSECURE=1` will be set when invoking the pager, and the pager shall disable commands that open or create new files or start new subprocesses. When `$SYSTEMD_PAGERSECURE` is not set at all, pagers which are not known to implement secure mode will not be used. (Currently only [less(1)](http://man7.org/linux/man-pages/man1/less.1.html) implements secure mode.)\n\nNote: when commands are invoked with elevated privileges, for example under [sudo(8)](http://man7.org/linux/man-pages/man8/sudo.8.html) or [pkexec(1)](http://linux.die.net/man/1/pkexec), care must be taken to ensure that unintended interactive features are not enabled. \"Secure\" mode for the pager may be enabled automatically as describe above. Setting `SYSTEMD_PAGERSECURE=0` or not removing it from the inherited environment allows the user to invoke arbitrary commands. Note that if the `$SYSTEMD_PAGER` or `$PAGER` variables are to be honoured, `$SYSTEMD_PAGERSECURE` must be set too. It might be reasonable to completely disable the pager using `--no-pager` instead."],
[4,470,"Takes a boolean argument. When true, **systemd** and related utilities will use colors in their output, otherwise the output will be monochrome. Additionally, the variable can take one of the following special values: \"`16`\", \"`256`\" to restrict the use of colors to the base 16 or 256 ANSI colors, respectively. This can be specified to override the automatic decision based on `$TERM` and what the console is connected to."],
[4,471,"The value must be a boolean. Controls whether clickable links should be generated in the output for terminal emulators supporting this. This can be specified to override the decision that **systemd** makes based on `$TERM` and other conditions."],
[4,472,"Set by systemd for supervised processes during socket-based activation. See [sd\\_listen\\_fds(3)](sd_listen_fds.html#) for more information."],
[4,473,"Set by systemd for supervised processes for status and start-up completion notification. See [sd\\_notify(3)](sd_notify.html#) for more information."],
[4,474,"Overrides the unit to activate on boot. Defaults to `default.target`. This may be used to temporarily boot into a different boot unit, for example `rescue.target` or `emergency.service`. See [systemd.special(7)](systemd.special.html#) for details about these units. The option prefixed with \"`rd.`\" is honored only in the initial RAM disk (initrd), while the one that is not prefixed only in the main system."],
[4,475,"Takes a boolean argument or enables the option if specified without an argument. If enabled, the systemd manager (PID 1) dumps core when it crashes. Otherwise, no core dump is created. Defaults to enabled."],
[4,476,"Takes a positive integer, or a boolean argument. Can be also specified without an argument, with the same effect as a positive boolean. If a positive integer (in the range 1â€“63) is specified, the system manager (PID 1) will activate the specified virtual terminal when it crashes. Defaults to disabled, meaning that no such switch is attempted. If set to enabled, the virtual terminal the kernel messages are written to is used instead."],
[4,477,"Takes a boolean argument or enables the option if specified without an argument. If enabled, the system manager (PID 1) spawns a shell when it crashes, after a 10s delay. Otherwise, no shell is spawned. Defaults to disabled, for security reasons, as the shell is not protected by password authentication."],
[4,478,"Takes a boolean argument or enables the option if specified without an argument. If enabled, the system manager (PID 1) will reboot the machine automatically when it crashes, after a 10s delay. Otherwise, the system will hang indefinitely. Defaults to disabled, in order to avoid a reboot loop. If combined with `systemd.crash_shell`, the system is rebooted after the shell exits."],
[4,479,"Takes a boolean argument or a path to the virtual console where the confirmation messages should be emitted. Can be also specified without an argument, with the same effect as a positive boolean. If enabled, the system manager (PID 1) asks for confirmation when spawning processes using `/dev/console`. If a path or a console name (such as \"`ttyS0`\") is provided, the virtual console pointed to by this path or described by the give name will be used instead. Defaults to disabled."],
[4,480,"Takes a boolean argument. If disabled, all service runtime watchdogs (`WatchdogSec=`) and emergency actions (e.g. `OnFailure=` or `StartLimitAction=`) are ignored by the system manager (PID 1); see [systemd.service(5)](systemd.service.html#). Defaults to enabled, i.e. watchdogs and failure actions are processed normally. The hardware watchdog is not affected by this option."],
[4,481,"Takes a boolean argument or the constants `error` and `auto`. Can be also specified without an argument, with the same effect as a positive boolean. If enabled, the systemd manager (PID 1) shows terse service status updates on the console during bootup. With `error`, only messages about failures are shown, but boot is otherwise quiet. `auto` behaves like `false` until there is a significant delay in boot. Defaults to enabled, unless `quiet` is passed as kernel command line option, in which case it defaults to `error`. If specified overrides the system manager configuration file option `ShowStatus=`, see [systemd-system.conf(5)](systemd-system.conf.html#)."],
[4,482,"Takes `name`, `description` or `combined` as the value. If `name`, the system manager will use unit names in status messages. If `combined`, the system manager will use unit names and description in status messages. When specified, overrides the system manager configuration file option `StatusUnitFormat=`, see [systemd-system.conf(5)](systemd-system.conf.html#)."],
[4,483,"Controls log output, with the same effect as the `$SYSTEMD_LOG_COLOR`, `$SYSTEMD_LOG_LEVEL`, `$SYSTEMD_LOG_LOCATION`, `$SYSTEMD_LOG_TARGET`, `$SYSTEMD_LOG_TIME`, and `$SYSTEMD_LOG_TID` environment variables described above. `systemd.log_color`, `systemd.log_location`, `systemd.log_time`, and `systemd.log_tid=` can be specified without an argument, with the same effect as a positive boolean."],
[4,484,"Controls default standard output and error output for services and sockets. That is, controls the default for `StandardOutput=` and `StandardError=` (see [systemd.exec(5)](systemd.exec.html#) for details). Takes one of `inherit`, `null`, `tty`, `journal`, `journal+console`, `kmsg`, `kmsg+console`. If the argument is omitted `systemd.default-standard-output=` defaults to `journal` and `systemd.default-standard-error=` to `inherit`."],
[4,485,"Takes a string argument in the form VARIABLE=VALUE. May be used to set default environment variables to add to forked child processes. May be used more than once to set multiple variables."],
[4,486,"Takes a 32 character hex value to be used for setting the machine-id. Intended mostly for network booting where the same machine-id is desired for every boot."],
[4,487,"When specified without an argument or with a true argument, enables the usage of [unified cgroup hierarchy](https://www.kernel.org/doc/html/latest/admin-guide/cgroup-v2.html) (a.k.a.Â cgroups-v2). When specified with a false argument, fall back to hybrid or full legacy cgroup hierarchy.\n\nIf this option is not specified, the default behaviour is determined during compilation (the `-Ddefault-hierarchy=` meson option). If the kernel does not support unified cgroup hierarchy, the legacy hierarchy will be used even if this option is specified."],
[4,488,"Takes effect if the full unified cgroup hierarchy is not used (see previous option). When specified without an argument or with a true argument, disables the use of \"hybrid\" cgroup hierarchy (i.e. a cgroups-v2 tree used for systemd, and [legacy cgroup hierarchy](https://www.kernel.org/doc/Documentation/cgroup-v1/), a.k.a.Â cgroups-v1, for other controllers), and forces a full \"legacy\" mode. When specified with a false argument, enables the use of \"hybrid\" hierarchy.\n\nIf this option is not specified, the default behaviour is determined during compilation (the `-Ddefault-hierarchy=` meson option). If the kernel does not support unified cgroup hierarchy, the legacy hierarchy will be used even if this option is specified."],
[4,489,"Turn off status output at boot, much like `systemd.show_status=no` would. Note that this option is also read by the kernel itself and disables kernel log output. Passing this option hence turns off the usual output from both the system manager and the kernel."],
[4,490,"Turn on debugging output. This is equivalent to `systemd.log_level=debug`. Note that this option is also read by the kernel itself and enables kernel debug output. Passing this option hence turns on the debug output from both the system manager and the kernel."],
[4,491,"Boot into emergency mode. This is equivalent to `systemd.unit=emergency.target` or `rd.systemd.unit=emergency.target`, respectively, and provided for compatibility reasons and to be easier to type."],
[4,492,"Boot into rescue mode. This is equivalent to `systemd.unit=rescue.target` or `rd.systemd.unit=rescue.target`, respectively, and provided for compatibility reasons and to be easier to type."],
[4,493,"Boot into the specified legacy SysV runlevel. These are equivalent to `systemd.unit=runlevel2.target`, `systemd.unit=runlevel3.target`, `systemd.unit=runlevel4.target`, and `systemd.unit=runlevel5.target`, respectively, and provided for compatibility reasons and to be easier to type."],
[4,494,"Set the system locale to use. This overrides the settings in `/etc/locale.conf`. For more information, see [locale.conf(5)](http://man7.org/linux/man-pages/man5/locale.conf.5.html) and [locale(7)](http://man7.org/linux/man-pages/man7/locale.7.html)."],
[4,495,"Dump understood unit configuration items. This outputs a terse but complete list of configuration items understood in unit definition files."],
[4,496,"Dump exposed bus properties. This outputs a terse but complete list of properties exposed on D-Bus."],
[4,497,"Determine the initial start-up transaction (i.e. the list of jobs enqueued at start-up), dump it and exit â€” without actually executing any of the determined jobs. This option is useful for debugging only. Note that during regular service manager start-up additional units not shown by this operation may be started, because hardware, socket, bus or other kinds of activation might add additional jobs as the transaction is executed. Use `--system` to request the initial transaction of the system service manager (this is also the implied default), combine with `--user` to request the initial transaction of the per-user service manager instead."],
[4,498,"When used in conjunction with `--test`, selects whether to calculate the initial transaction for the system instance or for a per-user instance. These options have no effect when invoked without `--test`, as during regular (i.e. non-`--test`) invocations the service manager will automatically detect whether it shall operate in system or per-user mode, by checking whether the PID it is run as is 1 or not. Note that it is not supported booting and maintaining a system with the service manager running in `--system` mode but with a PID other than 1."],
[4,499,"Print a short help text and exit."],
[4,500,"Print a short version string and exit."],
[4,501,"Set default unit to activate on startup. If not specified, defaults to `default.target`. See `systemd.unit=` above."],
[4,502,"Enable core dumping on crash. This switch has no effect when running as user instance. Same as `systemd.dump_core=` above."],
[4,503,"Switch to a specific virtual console (VT) on crash. This switch has no effect when running as user instance. Same as `systemd.crash_chvt=` above (but not the different spelling!)."],
[4,504,"Run a shell on crash. This switch has no effect when running as user instance. See `systemd.crash_shell=` above."],
[4,505,"Automatically reboot the system on crash. This switch has no effect when running as user instance. See `systemd.crash_reboot` above."],
[4,506,"Ask for confirmation when spawning processes. This switch has no effect when run as user instance. See `systemd.confirm_spawn` above."],
[4,507,"Show terse unit status information on the console during boot-up and shutdown. See `systemd.show_status` above."],
[4,508,"Highlight important log messages. See `systemd.log_color` above."],
[4,509,"Set log level. See `systemd.log_level` above."],
[4,510,"Include code location in log messages. See `systemd.log_location` above."],
[4,511,"Set log target. See `systemd.log_target` above."],
[4,512,"Prefix console messages with timestamp. See `systemd.log_time` above."],
[4,513,"Override the machine-id set on the hard drive. See `systemd.machine_id=` above."],
[4,514,"Globally enable/disable all service watchdog timeouts and emergency actions. See `systemd.service_watchdogs` above."],
[4,515,"Sets the default output or error output for all services and sockets, respectively. See `systemd.default_standard_output=` and `systemd.default_standard_error=` above."],
[4,516,"Daemon status notification socket. This is an `AF_UNIX` datagram socket and is used to implement the daemon notification logic as implemented by [sd\\_notify(3)](sd_notify.html#)."],
[4,517,"Used internally as communication channel between [systemctl(1)](systemctl.html#) and the systemd process. This is an `AF_UNIX` stream socket. This interface is private to systemd and should not be used in external projects."],
[4,518,"Limited compatibility support for the SysV client interface, as implemented by the `systemd-initctl.service` unit. This is a named pipe in the file system. This interface is obsolete and should not be used in new applications."],
[2,"locale.LANG","",494,17],
[2,"locale.LANGUAGE","",494,17],
[2,"locale.LC_ADDRESS","",494,17],
[2,"locale.LC_COLLATE","",494,17],
[2,"locale.LC_CTYPE","",494,17],
[2,"locale.LC_IDENTIFICATION","",494,17],
[2,"locale.LC_MEASUREMENT","",494,17],
[2,"locale.LC_MESSAGES","",494,17],
[2,"locale.LC_MONETARY","",494,17],
[2,"locale.LC_NAME","",494,17],
[2,"locale.LC_NUMERIC","",494,17],
[2,"locale.LC_PAPER","",494,17],
[2,"locale.LC_TELEPHONE","",494,17],
[2,"locale.LC_TIME","",494,17],
[2,"rd.systemd.unit","",474,17],
[2,"systemd.default_standard_error","",484,17],
[2,"systemd.default_standard_output","",484,17],
[2,"systemd.log_level",", systemd.log_location",483,17],
[2,"systemd.log_target",", systemd.log_time",483,17],
[2,"systemd.machine_id","",486,17],
[2,"systemd.service_watchdogs","",480,17],
[2,"systemd.setenv","",485,17],
[2,"systemd.status_unit_format","",482,17],
[2,"systemd.unit","",474,17],
[3,18,"systemd-cryptsetup-generator(8)","systemd-cryptsetup-generator â€” Unit generator for /etc/crypttab","systemd-cryptsetup-generator.html"],
[4,519,"Takes a boolean argument. Defaults to \"`yes`\". If \"`no`\", disables the generator entirely. `rd.luks=` is honored only by initial RAM disk (initrd) while `luks=` is honored by both the main system and the initrd."],
[4,520,"Takes a boolean argument. Defaults to \"`yes`\". If \"`no`\", causes the generator to ignore any devices configured in `/etc/crypttab` (`luks.uuid=` will still work however). `rd.luks.crypttab=` is honored only by initial RAM disk (initrd) while `luks.crypttab=` is honored by both the main system and the initrd."],
[4,521,"Takes a LUKS superblock UUID as argument. This will activate the specified device as part of the boot process as if it was listed in `/etc/crypttab`. This option may be specified more than once in order to set up multiple devices. `rd.luks.uuid=` is honored only by initial RAM disk (initrd) while `luks.uuid=` is honored by both the main system and the initrd.\n\nIf /etc/crypttab contains entries with the same UUID, then the name, keyfile and options specified there will be used. Otherwise, the device will have the name \"`luks-UUID`\".\n\nIf /etc/crypttab exists, only those UUIDs specified on the kernel command line will be activated in the initrd or the real root."],
[4,522,"Takes a LUKS super block UUID followed by an \"`=`\" and a name. This implies `rd.luks.uuid=` or `luks.uuid=` and will additionally make the LUKS device given by the UUID appear under the provided name.\n\nThis parameter is the analogue of the first [crypttab(5)](crypttab.html#) field _`volume-name`_.\n\n`rd.luks.name=` is honored only by initial RAM disk (initrd) while `luks.name=` is honored by both the main system and the initrd."],
[4,523,"Takes a LUKS super block UUID followed by a \"`=`\" and a block device specification for device hosting encrypted data.\n\nFor those entries specified with `rd.luks.uuid=` or `luks.uuid=`, the data device will be set to the one specified by `rd.luks.data=` or `luks.data=` of the corresponding UUID.\n\nLUKS data device parameter is useful for specifying encrypted data devices with detached headers specified in `luks.options` entry containing \"`header=`\" argument. For example, `rd.luks.uuid=`b40f1abf-2a53-400a-889a-2eccc27eaa40 `rd.luks.options=`b40f1abf-2a53-400a-889a-2eccc27eaa40=header=/path/to/luks.hdr `rd.luks.data=`b40f1abf-2a53-400a-889a-2eccc27eaa40=/dev/sdx. Hence, in this case, we will attempt to unlock LUKS device assembled from data device \"`/dev/sdx`\" and LUKS header (metadata) put in \"`/path/to/luks.hdr`\" file. This syntax is for now only supported on a per-device basis, i.e. you have to specify LUKS device UUID.\n\nThis parameter is the analogue of the second [crypttab(5)](crypttab.html#) field _`encrypted-device`_.\n\n`rd.luks.data=` is honored only by initial RAM disk (initrd) while `luks.data=` is honored by both the main system and the initrd."],
[4,524,"Takes a password file name as argument or a LUKS super block UUID followed by a \"`=`\" and a password file name.\n\nFor those entries specified with `rd.luks.uuid=` or `luks.uuid=`, the password file will be set to the one specified by `rd.luks.key=` or `luks.key=` of the corresponding UUID, or the password file that was specified without a UUID.\n\nIt is also possible to specify an external device which should be mounted before we attempt to unlock the LUKS device. systemd-cryptsetup will use password file stored on that device. Device containing password file is specified by appending colon and a device identifier to the password file path. For example, `rd.luks.uuid=`b40f1abf-2a53-400a-889a-2eccc27eaa40 `rd.luks.key=`b40f1abf-2a53-400a-889a-2eccc27eaa40=/keyfile:LABEL=keydev. Hence, in this case, we will attempt to mount file system residing on the block device with label \"`keydev`\". This syntax is for now only supported on a per-device basis, i.e. you have to specify LUKS device UUID.\n\nThis parameter is the analogue of the third [crypttab(5)](crypttab.html#) field _`key-file`_.\n\n`rd.luks.key=` is honored only by initial RAM disk (initrd) while `luks.key=` is honored by both the main system and the initrd."],
[4,525,"Takes a LUKS super block UUID followed by an \"`=`\" and a string of options separated by commas as argument. This will override the options for the given UUID.\n\nIf only a list of options, without an UUID, is specified, they apply to any UUIDs not specified elsewhere, and without an entry in `/etc/crypttab`.\n\nThis parameter is the analogue of the fourth [crypttab(5)](crypttab.html#) field _`options`_.\n\nIt is possible to specify an external device which should be mounted before we attempt to unlock the LUKS device. systemd-cryptsetup will assemble LUKS device by combining data device specified in `luks.data` with detached LUKS header found in \"`header=`\" argument. For example, `rd.luks.uuid=`b40f1abf-2a53-400a-889a-2eccc27eaa40 `rd.luks.options=`b40f1abf-2a53-400a-889a-2eccc27eaa40=header=/luks.hdr:LABEL=hdrdev `rd.luks.data=`b40f1abf-2a53-400a-889a-2eccc27eaa40=/dev/sdx. Hence, in this case, we will attempt to mount file system residing on the block device with label \"`hdrdev`\", and look for \"`luks.hdr`\" on that file system. Said header will be used to unlock (decrypt) encrypted data stored on /dev/sdx. This syntax is for now only supported on a per-device basis, i.e. you have to specify LUKS device UUID.\n\n`rd.luks.options=` is honored only by initial RAM disk (initrd) while `luks.options=` is honored by both the main system and the initrd."],
[2,"luks.crypttab","",520,18],
[2,"luks.data","",523,18],
[2,"luks.key","",524,18],
[2,"luks.name","",522,18],
[2,"luks.options","",525,18],
[2,"luks.uuid","",521,18],
[2,"luks","",519,18],
[2,"rd.luks.crypttab","",520,18],
[2,"rd.luks.data","",523,18],
[2,"rd.luks.key","",524,18],
[2,"rd.luks.name","",522,18],
[2,"rd.luks.options","",525,18],
[2,"rd.luks.uuid","",521,18],
[2,"rd.luks","",519,18],
[3,19,"systemd-modules-load.service(8)","systemd-modules-load.service, systemd-modules-load â€” Load kernel modules at boot","systemd-modules-load.service.html"],
[4,526,"Takes a comma-separated list of kernel modules to statically load during early boot. The option prefixed with \"`rd.`\" is read by the initial RAM disk only."],
[2,"modules_load","",526,19],
[2,"rd.modules_load","",526,19],
[3,20,"systemd-udevd.service(8)","systemd-udevd.service, systemd-udevd-control.socket, systemd-udevd-kernel.socket, systemd-udevd â€” Device event managing daemon","systemd-udevd.service.html"],
[4,527,"Detach and run in the background."],
[4,528,"Print debug messages to standard error."],
[4,529,"Limit the number of events executed in parallel."],
[4,530,"Delay the execution of each ``RUN{_`program`_}`` parameter by the given number of seconds. This option might be useful when debugging system crashes during coldplug caused by loading non-working kernel modules."],
[4,531,"Set the number of seconds to wait for events to finish. After this time, the event will be terminated. The default is 180 seconds."],
[4,532,"Set the signal which `systemd-udevd` will send to forked off processes after reaching event timeout. The setting can be overridden at boot time with the kernel command line option `udev.timeout_signal=`. Setting to `SIGABRT` may be helpful in order to debug worker timeouts. Defaults to `SIGKILL`. Note that setting the option on the command line overrides the setting from the configuration file."],
[4,533,"Specify when systemd-udevd should resolve names of users and groups. When set to `early` (the default), names will be resolved when the rules are parsed. When set to `late`, names will be resolved for every event. When set to `never`, names will never be resolved and all devices will be owned by root."],
[4,534,"Print a short help text and exit."],
[4,535,"Print a short version string and exit."],
[4,536,"Set the log level."],
[4,537,"Limit the number of events executed in parallel."],
[4,538,"Delay the execution of each ``RUN{_`program`_}`` parameter by the given number of seconds. This option might be useful when debugging system crashes during coldplug caused by loading non-working kernel modules."],
[4,539,"Wait for events to finish up to the given number of seconds. This option might be useful if events are terminated due to kernel drivers taking too long to initialize."],
[4,540,"Specifies a signal that `systemd-udevd` will send to workers on timeout. Note that kernel command line option overrides both the setting in the configuration file and the one on the program command line."],
[4,541,"If specified, mark all physical block devices read-only as they appear. Synthetic block devices (such as loopback block devices or device mapper devices) are left as they are. This is useful to guarantee that the contents of physical block devices remains unmodified during runtime, for example to implement fully stateless systems, for testing or for recovery situations where corrupted file systems shall not be corrupted further through accidental modification.\n\nA block device may be marked writable again by issuing the **blockdev --setrw** command, see [blockdev(8)](http://man7.org/linux/man-pages/man8/blockdev.8.html) for details."],
[4,542,"Network interfaces are renamed to give them predictable names when possible. It is enabled by default; specifying 0 disables it."],
[4,543,"Network interfaces are renamed to give them predictable names when possible (unless `net.ifnames=0` is specified, see above). With this kernel command line option it is possible to pick a specific version of this algorithm and override the default chosen at compilation time. Expects one of the naming scheme identifiers listed in [systemd.net-naming-scheme(7)](systemd.net-naming-scheme.html#), or \"`latest`\" to select the latest scheme known (to this particular version of `systemd-udevd.service`).\n\nNote that selecting a specific scheme is not sufficient to fully stabilize interface naming: the naming is generally derived from driver attributes exposed by the kernel. As the kernel is updated, previously missing attributes `systemd-udevd.service` is checking might appear, which affects older name derivation algorithms, too."],
[2,"net.ifnames","",542,20],
[2,"net.naming-scheme","",543,20],
[2,"rd.udev.children_max","",537,20],
[2,"rd.udev.event_timeout","",539,20],
[2,"rd.udev.exec_delay","",538,20],
[2,"rd.udev.log_level","",536,20],
[2,"rd.udev.timeout_signal","",540,20],
[2,"udev.children_max","",537,20],
[2,"udev.event_timeout","",539,20],
[2,"udev.exec_delay","",538,20],
[2,"udev.log_level","",536,20],
[2,"udev.timeout_signal","",540,20],
[3,21,"systemd-quotacheck.service(8)","systemd-quotacheck.service, systemd-quotacheck â€” File system quota checker logic","systemd-quotacheck.service.html"],
[4,544,"One of \"`auto`\", \"`force`\", \"`skip`\". Controls the mode of operation. The default is \"`auto`\", and ensures that file system quota checks are done when the file system quota checker deems them necessary. \"`force`\" unconditionally results in full file system quota checks. \"`skip`\" skips any file system quota checks."],
[2,"quotacheck.mode","",544,21],
[3,22,"systemd-veritysetup-generator(8)","systemd-veritysetup-generator â€” Unit generator for verity protected block devices","systemd-veritysetup-generator.html"],
[4,545,"Takes a boolean argument. Defaults to \"`yes`\". If \"`no`\", disables the generator entirely. `rd.systemd.verity=` is honored only by the initial RAM disk (initrd) while `systemd.verity=` is honored by both the host system and the initrd."],
[4,546,"Takes a root hash value for the root file system. Expects a hash value formatted in hexadecimal characters of the appropriate length (i.e. most likely 256 bit/64 characters, or longer). If not specified via `systemd.verity_root_data=` and `systemd.verity_root_hash=`, the hash and data devices to use are automatically derived from the specified hash value. Specifically, the data partition device is looked for under a GPT partition UUID derived from the first 128bit of the root hash, the hash partition device is looked for under a GPT partition UUID derived from the last 128bit of the root hash. Hence it is usually sufficient to specify the root hash to boot from a verity protected root file system, as device paths are automatically determined from it â€” as long as the partition table is properly set up."],
[4,547,"These two settings take block device paths as arguments and may be used to explicitly configure the data partition and hash partition to use for setting up the verity protection for the root file system. If not specified, these paths are automatically derived from the `roothash=` argument (see above)."],
[4,548,"Takes a comma-separated list of dm-verity options. Expects the following options `ignore-corruption`, `restart-on-corruption`, `ignore-zero-blocks`, `check-at-most-once`, `panic-on-corruption` and `root-hash-signature`. See [veritysetup(8)](http://linux.die.net/man/8/veritysetup) for more details."],
[4,549,"Equivalent to their counterparts for the root file system as described above, but apply to the `/usr/` file system instead."],
[2,"rd.systemd.verity","",545,22],
[2,"roothash","",546,22],
[2,"systemd.verity","",545,22],
[2,"systemd.verity_root_data","",547,22],
[2,"systemd.verity_root_hash","",547,22],
[2,"systemd.verity_root_options","",548,22],
[2,"systemd.verity_usr_data","",549,22],
[2,"systemd.verity_usr_hash","",549,22],
[2,"systemd.verity_usr_options","",549,22],
[2,"usrhash","",549,22],
[3,23,"systemd-hibernate-resume-generator(8)","systemd-hibernate-resume-generator â€” Unit generator for resume= kernel parameter","systemd-hibernate-resume-generator.html"],
[4,550,"Takes a path to the resume device. Both persistent block device paths like `/dev/disk/by-foo/bar` and [fstab(5)](http://man7.org/linux/man-pages/man5/fstab.5.html)\\-style specifiers like \"`FOO=bar`\" are supported."],
[4,551,"Takes the resume device mount options to use. Defaults `rootflags=` if not specified."],
[4,552,"Do not try to resume from hibernation. If this parameter is present, `resume=` is ignored."],
[2,"resume","",550,23],
[2,"resumeflags","",551,23],
[3,24,"systemd-gpt-auto-generator(8)","systemd-gpt-auto-generator â€” Generator for automatically discovering and mounting root, /home/, /srv/, /var/ and /var/tmp/ partitions, as well as discovering and enabling swap partitions, based on GPT partition type GUIDs","systemd-gpt-auto-generator.html"],
[4,553,"Those options take an optional boolean argument, and default to yes. The generator is enabled by default, and a negative value may be used to disable it."],
[4,554,"When used with the special value \"`gpt-auto`\", automatic discovery of the root partition based on the GPT partition type is enabled. Any other value disables this generator."],
[4,555,"Mount the root partition read-write or read-only _initially_.\n\nNote that unlike most kernel command line options these settings do not override configuration in the file system, and the file system may be remounted later. See [systemd-remount-fs.service(8)](systemd-remount-fs.service.html#)."],
[2,"root","",554,24],
[3,25,"systemd-firstboot(1)","systemd-firstboot, systemd-firstboot.service â€” Initialize basic system settings on or before the first boot-up of a system","systemd-firstboot.html"],
[4,556,"Takes a directory path as an argument. All paths will be prefixed with the given alternate _`root`_ path, including config search paths. This is useful to operate on a system image mounted to the specified directory instead of the host system itself."],
[4,557,"Takes a path to a disk image file or block device node. If specified all operations are applied to file system in the indicated disk image. This is similar to `--root=` but operates on file systems stored in disk images or block devices. The disk image should either contain just a file system or a set of file systems within a GPT partition table, following the [Discoverable Partitions Specification](https://systemd.io/DISCOVERABLE_PARTITIONS). For further information on supported disk images, see [systemd-nspawn(1)](systemd-nspawn.html#)'s switch of the same name."],
[4,558,"Sets the system locale, more specifically the `LANG=` and `LC_MESSAGES` settings. The argument should be a valid locale identifier, such as \"`de_DE.UTF-8`\". This controls the [locale.conf(5)](http://man7.org/linux/man-pages/man5/locale.conf.5.html) configuration file."],
[4,559,"Sets the system keyboard layout. The argument should be a valid keyboard map, such as \"`de-latin1`\". This controls the \"`KEYMAP`\" entry in the [vconsole.conf(5)](http://man7.org/linux/man-pages/man5/vconsole.conf.5.html) configuration file."],
[4,560,"Sets the system time zone. The argument should be a valid time zone identifier, such as \"`Europe/Berlin`\". This controls the [localtime(5)](localtime.html#) symlink."],
[4,561,"Sets the system hostname. The argument should be a hostname, compatible with DNS. This controls the [hostname(5)](hostname.html#) configuration file."],
[4,562,"Sets the system's machine ID. This controls the [machine-id(5)](machine-id.html#) file."],
[4,563,"Sets the password of the system's root user. This creates/modifies the [passwd(5)](http://linux.die.net/man/5/passwd) and [shadow(5)](http://linux.die.net/man/5/shadow) files. This setting exists in three forms: `--root-password=` accepts the password to set directly on the command line, `--root-password-file=` reads it from a file and `--root-password-hashed=` accepts an already hashed password on the command line. See [shadow(5)](http://linux.die.net/man/5/shadow) for more information on the format of the hashed password. Note that it is not recommended to specify plaintext passwords on the command line, as other users might be able to see them simply by invoking [ps(1)](http://linux.die.net/man/1/ps)."],
[4,564,"Sets the shell of the system's root user. This creates/modifies the [passwd(5)](http://linux.die.net/man/5/passwd) file."],
[4,565,"Sets the system's kernel command line. This controls the `/etc/kernel/cmdline` file which is used by [kernel-install(8)](kernel-install.html#)."],
[4,566,"Prompt the user interactively for a specific basic setting. Note that any explicit configuration settings specified on the command line take precedence, and the user is not prompted for it."],
[4,567,"Query the user for locale, keymap, timezone, hostname, root's password, and root's shell. This is equivalent to specifying `--prompt-locale`, `--prompt-keymap`, `--prompt-timezone`, `--prompt-hostname`, `--prompt-root-password`, `--prompt-root-shell` in combination."],
[4,568,"Copy a specific basic setting from the host. This only works in combination with `--root=` (see above)."],
[4,569,"Copy locale, keymap, time zone, root password and shell from the host. This is equivalent to specifying `--copy-locale`, `--copy-keymap`, `--copy-timezone`, `--copy-root-password`, `--copy-root-shell` in combination."],
[4,570,"Initialize the system's machine ID to a random ID. This only works in combination with `--root=`."],
[4,571,"systemd-firstboot doesn't modify existing files unless `--force` is specified. For modifications to `/etc/passwd` and `/etc/shadow`, systemd-firstboot only modifies the entry of the \"`root`\" user instead of overwriting the entire file."],
[4,572,"Removes the password of the system's root user, enabling login as root without a password unless the root account is locked. Note that this is extremely insecure and hence this option should not be used lightly."],
[4,573,"Takes a boolean argument. By default when prompting the user for configuration options a brief welcome text is shown before the first question is asked. Pass false to this option to turn off the welcome text."],
[4,574,"Print a short help text and exit."],
[4,575,"Print a short version string and exit."],
[4,576,"A hashed or plaintext version of the root password to use, in place of prompting the user. These credentials are equivalent to the same ones defined for the [systemd-sysusers.service(8)](systemd-sysusers.service.html#) service."],
[4,577,"Specifies the shell binary to use for the specified account. Equivalent to the credential of the same name defined for the [systemd-sysusers.service(8)](systemd-sysusers.service.html#) service."],
[4,578,"These credentials specify the locale settings to set during first boot, in place of prompting the user."],
[4,579,"This credential specifies the keyboard setting to set during first boot, in place of prompting the user."],
[4,580,"This credential specifies the system timezone setting to set during first boot, in place of prompting the user."],
[4,581,"Takes a boolean argument, defaults to on. If off, `systemd-firstboot.service` won't interactively query the user for basic settings at first boot, even if those settings are not initialized yet."],
[2,"systemd.firstboot","",581,25],
[3,26,"systemd-getty-generator(8)","systemd-getty-generator â€” Generator for enabling getty instances on the console","systemd-getty-generator.html"],
[4,582,"this options take an optional boolean argument, and default to yes. The generator is enabled by default, and a false value may be used to disable it."],
[4,583,"This variable takes an optional boolean argument, and default to yes. The generator is enabled by default, and a false value may be used to disable it."],
[2,"systemd.getty_auto","",582,26],
[3,27,"systemd-journald.service(8)","systemd-journald.service, systemd-journald.socket, systemd-journald-dev-log.socket, systemd-journald-audit.socket, systemd-journald@.service, systemd-journald@.socket, systemd-journald-varlink@.socket, systemd-journald â€” Journal service","systemd-journald.service.html"],
[4,584,"Request that journal data from `/run/` is flushed to `/var/` in order to make it persistent (if this is enabled). This must be used after `/var/` is mounted, as otherwise log data from `/run/` is never flushed to `/var/` regardless of the configuration. Use the **journalctl --flush** command to request flushing of the journal files, and wait for the operation to complete. See [journalctl(1)](journalctl.html#) for details."],
[4,585,"Request immediate rotation of the journal files. Use the **journalctl --rotate** command to request journal file rotation, and wait for the operation to complete."],
[4,586,"Request that all unwritten log data is written to disk. Use the **journalctl --sync** command to trigger journal synchronization, and wait for the operation to complete."],
[4,587,"Enables/disables forwarding of collected log messages to syslog, the kernel log buffer, the system console or wall.\n\nSee [journald.conf(5)](journald.conf.html#) for information about these settings."],
[4,588,"Configure **systemd-journald** behavior. See [journald.conf(5)](journald.conf.html#)."],
[4,589,"**systemd-journald** writes entries to files in ``/run/log/journal/_`machine-id`_/`` or ``/var/log/journal/_`machine-id`_/`` with the \"`.journal`\" suffix. If the daemon is stopped uncleanly, or if the files are found to be corrupted, they are renamed using the \"`.journal~`\" suffix, and **systemd-journald** starts writing to a new file. `/run/` is used when `/var/log/journal` is not available, or when `Storage=volatile` is set in the [journald.conf(5)](journald.conf.html#) configuration file.\n\nWhen `systemd-journald` ceases writing to a journal file, it will be renamed to \"``_`original-name`_@_`suffix.journal`_``\" (or \"``_`original-name`_@_`suffix.journal~`_``\"). Such files are \"archived\" and will not be written to any more.\n\nIn general, it is safe to read or copy any journal file (active or archived). [journalctl(1)](journalctl.html#) and the functions in the [sd-journal(3)](sd-journal.html#) library should be able to read all entries that have been fully written.\n\n`systemd-journald` will automatically remove the oldest archived journal files to limit disk use. See `SystemMaxUse=` and related settings in [journald.conf(5)](journald.conf.html#)."],
[4,590,"Sockets and other file node paths that **systemd-journald** will listen on and are visible in the file system. In addition to these, **systemd-journald** can listen for audit events using [netlink(7)](http://man7.org/linux/man-pages/man7/netlink.7.html)."],
[2,"systemd.journald.forward_to_console","",587,27],
[2,"systemd.journald.forward_to_kmsg","",587,27],
[2,"systemd.journald.forward_to_syslog","",587,27],
[2,"systemd.journald.forward_to_wall","",587,27],
[3,28,"systemd-backlight@.service(8)","systemd-backlight@.service, systemd-backlight â€” Load and save the display backlight brightness at boot and shutdown","systemd-backlight@.service.html"],
[4,591,"Takes a boolean argument. Defaults to \"`1`\". If \"`0`\", does not restore the backlight settings on boot. However, settings will still be stored on shutdown."],
[2,"systemd.restore_state","",591,28],
[3,29,"systemd-rfkill.service(8)","systemd-rfkill.service, systemd-rfkill.socket, systemd-rfkill â€” Load and save the RF kill switch state at boot and change","systemd-rfkill.service.html"],
[4,592,"Takes a boolean argument. Defaults to \"`1`\". If \"`0`\", does not restore the rfkill settings on boot. However, settings will still be stored on shutdown."],
[2,"systemd.restore_state","",592,29],
[3,30,"vconsole.conf(5)","vconsole.conf â€” Configuration file for the virtual console","vconsole.conf.html"],
[4,593,"Configures the key mapping table for the keyboard. `KEYMAP=` defaults to \"`us`\" if not set. The `KEYMAP_TOGGLE=` can be used to configure a second toggle keymap and is by default unset."],
[4,594,"Configures the console font, the console map and the unicode font map."],
[4,595,"Overrides `KEYMAP=` and `KEYMAP_TOGGLE=`."],
[4,596,"Overrides `FONT=`, `FONT_MAP=`, and `FONT_UNIMAP=`."],
[2,"vconsole.font","",596,30],
[2,"vconsole.font_map","",596,30],
[2,"vconsole.font_unimap","",596,30],
[2,"vconsole.keymap","",595,30],
[2,"vconsole.keymap_toggle","",595,30],
[3,31,"homed.conf(5)","homed.conf, homed.conf.d â€” Home area/user account manager configuration files","homed.conf.html"],
[4,597,"The default storage to use for home areas. Takes one of \"`luks`\", \"`fscrypt`\", \"`directory`\", \"`subvolume`\", \"`cifs`\". For details about these options, see [homectl(1)](homectl.html#). If not configured or assigned the empty string, the default storage is automatically determined: if not running in a container environment and `/home/` is not itself encrypted, defaults to \"`luks`\". Otherwise defaults to \"`subvolume`\" if `/home/` is on a btrfs file system, and \"`directory`\" otherwise. Note that the storage selected on the **homectl** command line always takes precedence."],
[4,598,"When using \"`luks`\" as storage (see above), selects the default file system to use inside the user's LUKS volume. Takes one of \"`btrfs`\", \"`ext4`\" or \"`xfs`\". If not specified defaults to \"`btrfs`\". This setting has no effect if a different storage mechanism is used. The file system type selected on the **homectl** command line always takes precedence."],
[2,"DefaultFileSystemType","",598,31],
[2,"DefaultStorage","",597,31],
[3,32,"systemd.device(5)","systemd.device â€” Device unit configuration","systemd.device.html"],
[4,599,"Adds dependencies of type `Wants=` from the device unit to the specified units. `SYSTEMD_WANTS=` is read by the system service manager, `SYSTEMD_USER_WANTS=` by user service manager instances. These properties may be used to activate arbitrary units when a specific device becomes available.\n\nNote that this and the other udev device properties are not taken into account unless the device is tagged with the \"`systemd`\" tag in the udev database, because otherwise the device is not exposed as a systemd unit (see above).\n\nNote that systemd will only act on `Wants=` dependencies when a device first becomes active. It will not act on them if they are added to devices that are already active. Use `SYSTEMD_READY=` (see below) to configure when a udev device shall be considered active, and thus when to trigger the dependencies.\n\nThe specified property value should be a space-separated list of valid unit names. If a unit template name is specified (that is, a unit name containing an \"`@`\" character indicating a unit name to use for multiple instantiation, but with an empty instance name following the \"`@`\"), it will be automatically instantiated by the device's \"`sysfs`\" path (that is: the path is escaped and inserted as instance name into the template unit name). This is useful in order to instantiate a specific template unit once for each device that appears and matches specific properties."],
[4,600,"Adds an additional alias name to the device unit. This must be an absolute path that is automatically transformed into a unit name. (See above.)"],
[4,601,"If set to 0, systemd will consider this device unplugged even if it shows up in the udev tree. If this property is unset or set to 1, the device will be considered plugged if it is visible in the udev tree.\n\nThis option is useful for devices that initially show up in an uninitialized state in the tree, and for which a \"`changed`\" event is generated the moment they are fully set up. Note that `SYSTEMD_WANTS=` (see above) is not acted on as long as `SYSTEMD_READY=0` is set for a device."],
[4,602,"If set, this property is used as description string for the device unit."],
[2,"ID_MODEL","",602,32],
[2,"ID_MODEL_FROM_DATABASE","",602,32],
[2,"SYSTEMD_ALIAS","",600,32],
[2,"SYSTEMD_READY","",601,32],
[2,"SYSTEMD_USER_WANTS","",599,32],
[2,"SYSTEMD_WANTS","",599,32],
[3,33,"systemd-mount(1)","systemd-mount, systemd-umount â€” Establish and destroy transient mount or auto-mount points","systemd-mount.html"],
[4,603,"Do not synchronously wait for the requested operation to finish. If this is not specified, the job will be verified, enqueued and **systemd-mount** will wait until the mount or automount unit's start-up is completed. By passing this argument, it is only verified and enqueued."],
[4,604,"Do not ellipsize the output when `--list` is specified."],
[4,605,"Do not pipe output into a pager."],
[4,606,"Do not print the legend, i.e. column headers and the footer with hints."],
[4,607,"Do not query the user for authentication for privileged operations."],
[4,608,"Suppresses additional informational output while running."],
[4,609,"Enable probing of the mount source. This switch is implied if a single argument is specified on the command line. If passed, additional metadata is read from the device to enhance the unit to create. For example, a descriptive string for the transient units is generated from the file system label and device model. Moreover if a removable block device (e.g. USB stick) is detected an automount unit instead of a regular mount unit is created, with a short idle timeout, in order to ensure the file-system is placed in a clean state quickly after each access."],
[4,610,"Specifies the file system type to mount (e.g. \"`vfat`\" or \"`ext4`\"). If omitted or set to \"`auto`\", the file system type is determined automatically."],
[4,611,"Additional mount options for the mount point."],
[4,612,"Let the specified user _`USER`_ own the mounted file system. This is done by appending `uid=` and `gid=` options to the list of mount options. Only certain file systems support this option."],
[4,613,"Takes a boolean argument, defaults to on. Controls whether to run a file system check immediately before the mount operation. In the automount case (see `--automount=` below) the check will be run the moment the first access to the device is made, which might slightly delay the access."],
[4,614,"Provide a description for the mount or automount unit. See `Description=` in [systemd.unit(5)](systemd.unit.html#)."],
[4,615,"Sets a unit property for the mount unit that is created. This takes an assignment in the same format as [systemctl(1)](systemctl.html#)'s **set-property** command."],
[4,616,"Takes a boolean argument. Controls whether to create an automount point or a regular mount point. If true an automount point is created that is backed by the actual file system at the time of first access. If false a plain mount point is created that is backed by the actual file system immediately. Automount points have the benefit that the file system stays unmounted and hence in clean state until it is first accessed. In automount mode the `--timeout-idle-sec=` switch (see below) may be used to ensure the mount point is unmounted automatically after the last access and an idle period passed.\n\nIf this switch is not specified it defaults to false. If not specified and `--discover` is used (or only a single argument passed, which implies `--discover`, see above), and the file system block device is detected to be removable, it is set to true, in order to increase the chance that the file system is in a fully clean state if the device is unplugged abruptly."],
[4,617,"Equivalent to `--automount=yes`."],
[4,618,"Takes a time value that controls the idle timeout in automount mode. If set to \"`infinity`\" (the default) no automatic unmounts are done. Otherwise the file system backing the automount point is detached after the last access and the idle timeout passed. See [systemd.time(7)](systemd.time.html#) for details on the time syntax supported. This option has no effect if only a regular mount is established, and automounting is not used.\n\nNote that if `--discover` is used (or only a single argument passed, which implies `--discover`, see above), and the file system block device is detected to be removable, `--timeout-idle-sec=1s` is implied."],
[4,619,"Similar to `--property=`, but applies additional properties to the automount unit created, instead of the mount unit."],
[4,620,"This option only has an effect in automount mode, and controls whether the automount unit shall be bound to the backing device's lifetime. If set, the automount point will be removed automatically when the backing device vanishes. By default the automount point stays around, and subsequent accesses will block until backing device is replugged. This option has no effect in case of non-device mounts, such as network or virtual file system mounts.\n\nNote that if `--discover` is used (or only a single argument passed, which implies `--discover`, see above), and the file system block device is detected to be removable, this option is implied."],
[4,621,"Instead of establishing a mount or automount point, print a terse list of block devices containing file systems that may be mounted with \"`systemd-mount`\", along with useful metadata such as labels, etc."],
[4,622,"Stop the mount and automount units corresponding to the specified mount points _`WHERE`_ or the devices _`WHAT`_. **systemd-mount** with this option or **systemd-umount** can take multiple arguments which can be mount points, devices, `/etc/fstab` style node names, or backing files corresponding to loop devices, like **systemd-mount --umount /path/to/umount /dev/sda1 UUID=xxxxxx-xxxx LABEL=xxxxx /path/to/disk.img**. Note that when `-H` or `-M` is specified, only absolute paths to mount points are supported."],
[4,623,"Unload the transient unit after it completed, even if it failed. Normally, without this option, all mount units that mount and failed are kept in memory until the user explicitly resets their failure state with **systemctl reset-failed** or an equivalent command. On the other hand, units that stopped successfully are unloaded immediately. If this option is turned on the \"garbage collection\" of units is more aggressive, and unloads units regardless if they exited successfully or failed. This option is a shortcut for **\\--property=CollectMode=inactive-or-failed**, see the explanation for `CollectMode=` in [systemd.unit(5)](systemd.unit.html#) for further information."],
[4,624,"Talk to the service manager of the calling user, rather than the service manager of the system."],
[4,625,"Talk to the service manager of the system. This is the implied default."],
[4,626,"Execute the operation remotely. Specify a hostname, or a username and hostname separated by \"`@`\", to connect to. The hostname may optionally be suffixed by a port ssh is listening on, separated by \"`:`\", and then a container name, separated by \"`/`\", which connects directly to a specific container on the specified host. This will use SSH to talk to the remote machine manager instance. Container names may be enumerated with **machinectl -H _`HOST`_**. Put IPv6 addresses in brackets."],
[4,627,"Execute operation on a local container. Specify a container name to connect to, optionally prefixed by a user name to connect as and a separating \"`@`\" character. If the special string \"`.host`\" is used in place of the container name, a connection to the local system is made (which is useful to connect to a specific user's user bus: \"`--user --machine=lennart@.host`\"). If the \"`@`\" syntax is not used, the connection is made as root user. If the \"`@`\" syntax is used either the left hand side or the right hand side may be omitted (but not both) in which case the local user name and \"`.host`\" are implied."],
[4,628,"Print a short help text and exit."],
[4,629,"Print a short version string and exit."],
[4,630,"The mount options to use, if `--options=` is not used."],
[4,631,"The file system path to place the mount point at, instead of the automatically generated one."],
[2,"SYSTEMD_MOUNT_OPTIONS","",630,33],
[2,"SYSTEMD_MOUNT_WHERE","",631,33],
[3,34,"udev(7)","udev â€” Dynamic device management","udev.html"],
[4,632,"Compare for equality. (The specified key has the specified value.)"],
[4,633,"Compare for inequality. (The specified key doesn't have the specified value, or the specified key is not present at all.)"],
[4,634,"Assign a value to a key. Keys that represent a list are reset and only this single value is assigned."],
[4,635,"Add the value to a key that holds a list of entries."],
[4,636,"Remove the value from a key that holds a list of entries."],
[4,637,"Assign a value to a key finally; disallow any later changes."],
[4,638,"Match the name of the event action."],
[4,639,"Match the devpath of the event device."],
[4,640,"Match the name of the event device."],
[4,641,"Search the devpath upwards for a matching device name."],
[4,642,"Match the name of a network interface. It can be used once the NAME key has been set in one of the preceding rules."],
[4,643,"Match the name of a symlink targeting the node. It can be used once a SYMLINK key has been set in one of the preceding rules. There may be multiple symlinks; only one needs to match."],
[4,644,"Match the subsystem of the event device."],
[4,645,"Search the devpath upwards for a matching device subsystem name."],
[4,646,"Match the driver name of the event device. Only set this key for devices which are bound to a driver at the time the event is generated."],
[4,647,"Search the devpath upwards for a matching device driver name."],
[4,648,"Match sysfs attribute value of the event device.\n\nTrailing whitespace in the attribute values is ignored unless the specified match value itself contains trailing whitespace."],
[4,649,"Search the devpath upwards for a device with matching sysfs attribute values. If multiple `ATTRS` matches are specified, all of them must match on the same device.\n\nTrailing whitespace in the attribute values is ignored unless the specified match value itself contains trailing whitespace."],
[4,650,"Match a kernel parameter value."],
[4,651,"Match against a device property value."],
[4,652,"Match against a system-wide constant. Supported keys are:\n\n\"`arch`\"[Â¶](#arch \"Permalink to this term\")\n\nSystem's architecture. See `ConditionArchitecture=` in [systemd.unit(5)](systemd.unit.html#) for possible values.\n\n\"`virt`\"[Â¶](#virt \"Permalink to this term\")\n\nSystem's virtualization environment. See [systemd-detect-virt(1)](systemd-detect-virt.html#) for possible values.\n\nUnknown keys will never match."],
[4,653,"System's architecture. See `ConditionArchitecture=` in [systemd.unit(5)](systemd.unit.html#) for possible values."],
[4,654,"System's virtualization environment. See [systemd-detect-virt(1)](systemd-detect-virt.html#) for possible values."],
[4,655,"Match against a device tag."],
[4,656,"Search the devpath upwards for a device with matching tag."],
[4,657,"Test the existence of a file. An octal mode mask can be specified if needed."],
[4,658,"Execute a program to determine whether there is a match; the key is true if the program returns successfully. The device properties are made available to the executed program in the environment. The program's standard output is available in the `RESULT` key.\n\nThis can only be used for very short-running foreground tasks. For details, see `RUN`.\n\nNote that multiple `PROGRAM` keys may be specified in one rule, and \"`=`\", \"`:=`\", and \"`+=`\" have the same effect as \"`==`\"."],
[4,659,"Match the returned string of the last `PROGRAM` call. This key can be used in the same or in any later rule after a `PROGRAM` call."],
[4,660,"Matches zero or more characters."],
[4,661,"Matches any single character."],
[4,662,"Matches any single character specified within the brackets. For example, the pattern string \"`tty[SR]`\" would match either \"`ttyS`\" or \"`ttyR`\". Ranges are also supported via the \"`-`\" character. For example, to match on the range of all digits, the pattern \"`[0-9]`\" could be used. If the first character following the \"`[`\" is a \"`!`\", any characters not enclosed are matched."],
[4,663,"Separates alternative patterns. For example, the pattern string \"`abc|x*`\" would match either \"`abc`\" or \"`x*`\"."],
[4,664,"The name to use for a network interface. See [systemd.link(5)](systemd.link.html#) for a higher-level mechanism for setting the interface name. The name of a device node cannot be changed by udev, only additional symlinks can be created."],
[4,665,"The name of a symlink targeting the node. Every matching rule adds this value to the list of symlinks to be created.\n\nThe set of characters to name a symlink is limited. Allowed characters are \"`0-9A-Za-z#+-.:=@_/`\", valid UTF-8 character sequences, and \"`\\x00`\" hex encoding. All other characters are replaced by a \"`_`\" character.\n\nMultiple symlinks may be specified by separating the names by the space character. In case multiple devices claim the same name, the link always points to the device with the highest link\\_priority. If the current device goes away, the links are re-evaluated and the device with the next highest link\\_priority becomes the owner of the link. If no link\\_priority is specified, the order of the devices (and which one of them owns the link) is undefined.\n\nSymlink names must never conflict with the kernel's default device node names, as that would result in unpredictable behavior."],
[4,666,"The permissions for the device node. Every specified value overrides the compiled-in default value."],
[4,667,"Applies the specified Linux Security Module label to the device node."],
[4,668,"The value that should be written to a sysfs attribute of the event device."],
[4,669,"The value that should be written to kernel parameter."],
[4,670,"Set a device property value. Property names with a leading \"`.`\" are neither stored in the database nor exported to events or external tools (run by, for example, the `PROGRAM` match key)."],
[4,671,"Attach a tag to a device. This is used to filter events for users of libudev's monitor functionality, or to enumerate a group of tagged devices. The implementation can only work efficiently if only a few tags are attached to a device. It is only meant to be used in contexts with specific device filter requirements, and not as a general-purpose flag. Excessive use might result in inefficient event handling."],
[4,672,"Specify a program to be executed after processing of all the rules for the event. With \"`+=`\", this invocation is added to the list, and with \"`=`\" or \"`:=`\", it replaces any previous contents of the list. Please note that both \"`program`\" and \"`builtin`\" types described below share a common list, so clearing the list with \"`:=`\" and \"`=`\" affects both types.\n\n_`type`_ may be:\n\n\"`program`\"[Â¶](#program \"Permalink to this term\")\n\nExecute an external program specified as the assigned value. If no absolute path is given, the program is expected to live in `/usr/lib/udev`; otherwise, the absolute path must be specified.\n\nThis is the default if no _`type`_ is specified.\n\n\"`builtin`\"[Â¶](#builtin \"Permalink to this term\")\n\nAs `program`, but use one of the built-in programs rather than an external one.\n\nThe program name and following arguments are separated by spaces. Single quotes can be used to specify arguments with spaces.\n\nThis can only be used for very short-running foreground tasks. Running an event process for a long period of time may block all further events for this or a dependent device.\n\nNote that running programs that access the network or mount/unmount filesystems is not allowed inside of udev rules, due to the default sandbox that is enforced on `systemd-udevd.service`.\n\nStarting daemons or other long-running processes is not allowed; the forked processes, detached or not, will be unconditionally killed after the event handling has finished. In order to activate long-running processes from udev rules, provide a service unit and pull it in from a udev device using the `SYSTEMD_WANTS` device property. See [systemd.device(5)](systemd.device.html#) for details."],
[4,673,"Execute an external program specified as the assigned value. If no absolute path is given, the program is expected to live in `/usr/lib/udev`; otherwise, the absolute path must be specified.\n\nThis is the default if no _`type`_ is specified."],
[4,674,"As `program`, but use one of the built-in programs rather than an external one."],
[4,675,"A named label to which a `GOTO` may jump."],
[4,676,"Jumps to the next `LABEL` with a matching name."],
[4,677,"Import a set of variables as device properties, depending on _`type`_:\n\n\"`program`\"[Â¶](#program1 \"Permalink to this term\")\n\nExecute an external program specified as the assigned value and, if it returns successfully, import its output, which must be in environment key format. Path specification, command/argument separation, and quoting work like in `RUN`.\n\n\"`builtin`\"[Â¶](#builtin1 \"Permalink to this term\")\n\nSimilar to \"`program`\", but use one of the built-in programs rather than an external one.\n\n\"`file`\"[Â¶](#file \"Permalink to this term\")\n\nImport a text file specified as the assigned value, the content of which must be in environment key format.\n\n\"`db`\"[Â¶](#db \"Permalink to this term\")\n\nImport a single property specified as the assigned value from the current device database. This works only if the database is already populated by an earlier event.\n\n\"`cmdline`\"[Â¶](#cmdline \"Permalink to this term\")\n\nImport a single property from the kernel command line. For simple flags the value of the property is set to \"`1`\".\n\n\"`parent`\"[Â¶](#parent \"Permalink to this term\")\n\nImport the stored keys from the parent device by reading the database entry of the parent device. The value assigned to `IMPORT{parent}` is used as a filter of key names to import (with the same shell glob pattern matching used for comparisons).\n\nThis can only be used for very short-running foreground tasks. For details see `RUN`.\n\nNote that multiple `IMPORT{}` keys may be specified in one rule, and \"`=`\", \"`:=`\", and \"`+=`\" have the same effect as \"`==`\". The key is true if the import is successful, unless \"`!=`\" is used as the operator which causes the key to be true if the import failed."],
[4,678,"Execute an external program specified as the assigned value and, if it returns successfully, import its output, which must be in environment key format. Path specification, command/argument separation, and quoting work like in `RUN`."],
[4,679,"Similar to \"`program`\", but use one of the built-in programs rather than an external one."],
[4,680,"Import a text file specified as the assigned value, the content of which must be in environment key format."],
[4,681,"Import a single property specified as the assigned value from the current device database. This works only if the database is already populated by an earlier event."],
[4,682,"Import a single property from the kernel command line. For simple flags the value of the property is set to \"`1`\"."],
[4,683,"Import the stored keys from the parent device by reading the database entry of the parent device. The value assigned to `IMPORT{parent}` is used as a filter of key names to import (with the same shell glob pattern matching used for comparisons)."],
[4,684,"Rule and device options:\n\n``link_priority=_`value`_``[Â¶](#link_priority=value \"Permalink to this term\")\n\nSpecify the priority of the created symlinks. Devices with higher priorities overwrite existing symlinks of other devices. The default is 0.\n\n``string_escape=_`none|replace`_``[Â¶](#string_escape=none%7Creplace \"Permalink to this term\")\n\nWhen \"`replace`\", possibly unsafe characters in strings assigned to `NAME`, `SYMLINK`, and ``ENV{_`key`_}`` are replaced. When \"`none`\", no replacement is performed. When unset, the replacement is performed for `NAME`, `SYMLINK`, but not for ``ENV{_`key`_}``. Defaults to unset.\n\n`static_node=`[Â¶](#static_node= \"Permalink to this term\")\n\nApply the permissions specified in this rule to the static device node with the specified name. Also, for every tag specified in this rule, create a symlink in the directory ``/run/udev/static_node-tags/_`tag`_`` pointing at the static device node with the specified name. Static device node creation is performed by systemd-tmpfiles before systemd-udevd is started. The static nodes might not have a corresponding kernel device; they are used to trigger automatic kernel module loading when they are accessed.\n\n`watch`[Â¶](#watch \"Permalink to this term\")\n\nWatch the device node with inotify; when the node is closed after being opened for writing, a change uevent is synthesized.\n\n`nowatch`[Â¶](#nowatch \"Permalink to this term\")\n\nDisable the watching of a device node with inotify.\n\n`db_persist`[Â¶](#db_persist \"Permalink to this term\")\n\nSet the flag (sticky bit) on the udev database entry of the event device. Device properties are then kept in the database even when **udevadm info --cleanup-db** is called. This option can be useful in certain cases (e.g. Device Mapper devices) for persisting device state on the transition from initramfs.\n\n``log_level=_`level`_``[Â¶](#log_level=level \"Permalink to this term\")\n\nTakes a log level name like \"`debug`\" or \"`info`\", or a special value \"`reset`\". When a log level name is specified, the maximum log level is changed to that level. When \"`reset`\" is set, then the previously specified log level is revoked. Defaults to the log level of the main process of **systemd-udevd**.\n\nThis may be useful when debugging events for certain devices. Note that the log level is applied when the line including this rule is processed. So, for debugging, it is recommended that this is specified at earlier place, e.g., the first line of `00-debug.rules`.\n\nExample for debugging uevent processing for network interfaces.\n\n\\# /etc/udev/rules.d/00-debug-net.rules\nSUBSYSTEM==\"net\", OPTIONS=\"log\\_level=debug\""],
[4,685,"Specify the priority of the created symlinks. Devices with higher priorities overwrite existing symlinks of other devices. The default is 0."],
[4,686,"When \"`replace`\", possibly unsafe characters in strings assigned to `NAME`, `SYMLINK`, and ``ENV{_`key`_}`` are replaced. When \"`none`\", no replacement is performed. When unset, the replacement is performed for `NAME`, `SYMLINK`, but not for ``ENV{_`key`_}``. Defaults to unset."],
[4,687,"Apply the permissions specified in this rule to the static device node with the specified name. Also, for every tag specified in this rule, create a symlink in the directory ``/run/udev/static_node-tags/_`tag`_`` pointing at the static device node with the specified name. Static device node creation is performed by systemd-tmpfiles before systemd-udevd is started. The static nodes might not have a corresponding kernel device; they are used to trigger automatic kernel module loading when they are accessed."],
[4,688,"Watch the device node with inotify; when the node is closed after being opened for writing, a change uevent is synthesized."],
[4,689,"Disable the watching of a device node with inotify."],
[4,690,"Set the flag (sticky bit) on the udev database entry of the event device. Device properties are then kept in the database even when **udevadm info --cleanup-db** is called. This option can be useful in certain cases (e.g. Device Mapper devices) for persisting device state on the transition from initramfs."],
[4,691,"Takes a log level name like \"`debug`\" or \"`info`\", or a special value \"`reset`\". When a log level name is specified, the maximum log level is changed to that level. When \"`reset`\" is set, then the previously specified log level is revoked. Defaults to the log level of the main process of **systemd-udevd**.\n\nThis may be useful when debugging events for certain devices. Note that the log level is applied when the line including this rule is processed. So, for debugging, it is recommended that this is specified at earlier place, e.g., the first line of `00-debug.rules`.\n\nExample for debugging uevent processing for network interfaces.\n\n\\# /etc/udev/rules.d/00-debug-net.rules\nSUBSYSTEM==\"net\", OPTIONS=\"log\\_level=debug\""],
[4,692,"The kernel name for this device."],
[4,693,"The kernel number for this device. For example, \"`sda3`\" has kernel number 3."],
[4,694,"The devpath of the device."],
[4,695,"The name of the device matched while searching the devpath upwards for `SUBSYSTEMS`, `KERNELS`, `DRIVERS`, and `ATTRS`."],
[4,696,"The driver name of the device matched while searching the devpath upwards for `SUBSYSTEMS`, `KERNELS`, `DRIVERS`, and `ATTRS`."],
[4,697,"The value of a sysfs attribute found at the device where all keys of the rule have matched. If the matching device does not have such an attribute, and a previous `KERNELS`, `SUBSYSTEMS`, `DRIVERS`, or `ATTRS` test selected a parent device, then the attribute from that parent device is used.\n\nIf the attribute is a symlink, the last element of the symlink target is returned as the value."],
[4,698,"A device property value."],
[4,699,"The kernel major number for the device."],
[4,700,"The kernel minor number for the device."],
[4,701,"The string returned by the external program requested with `PROGRAM`. A single part of the string, separated by a space character, may be selected by specifying the part number as an attribute: \"`%c{N}`\". If the number is followed by the \"`+`\" character, this part plus all remaining parts of the result string are substituted: \"`%c{N+}`\"."],
[4,702,"The node name of the parent device."],
[4,703,"The current name of the device. If not changed by a rule, it is the name of the kernel device."],
[4,704,"A space-separated list of the current symlinks. The value is only set during a remove event or if an earlier rule assigned a value."],
[4,705,"The udev\\_root value."],
[4,706,"The sysfs mount point."],
[4,707,"The name of the device node."],
[4,708,"The \"`%`\" character itself."],
[4,709,"The \"`$`\" character itself."],
[2,"link_priority","value",685,34],
[2,"log_level","level",691,34],
[2,"static_node","",687,34],
[2,"string_escape","none|replace",686,34],
[3,35,"systemd.network(5)","systemd.network â€” Network configuration","systemd.network.html"],
[4,710,"A whitespace-separated list of hardware addresses. The acceptable formats are:\n\n`colon-delimited hexadecimal`[Â¶](#colon-delimited%20hexadecimal \"Permalink to this term\")\n\nEach field must be one byte. E.g. \"`12:34:56:78:90:ab`\" or \"`AA:BB:CC:DD:EE:FF`\".\n\n`hyphen-delimited hexadecimal`[Â¶](#hyphen-delimited%20hexadecimal \"Permalink to this term\")\n\nEach field must be one byte. E.g. \"`12-34-56-78-90-ab`\" or \"`AA-BB-CC-DD-EE-FF`\".\n\n`dot-delimited hexadecimal`[Â¶](#dot-delimited%20hexadecimal \"Permalink to this term\")\n\nEach field must be two bytes. E.g. \"`1234.5678.90ab`\" or \"`AABB.CCDD.EEFF`\".\n\n`IPv4 address format`[Â¶](#IPv4%20address%20format \"Permalink to this term\")\n\nE.g. \"`127.0.0.1`\" or \"`192.168.0.1`\".\n\n`IPv6 address format`[Â¶](#IPv6%20address%20format \"Permalink to this term\")\n\nE.g. \"`2001:0db8:85a3::8a2e:0370:7334`\" or \"`::1`\".\n\nThe total length of each MAC address must be 4 (for IPv4 tunnel), 6 (for Ethernet), 16 (for IPv6 tunnel), or 20 (for InfiniBand). This option may appear more than once, in which case the lists are merged. If the empty string is assigned to this option, the list of hardware addresses defined prior to this is reset. Defaults to unset."],
[4,711,"Each field must be one byte. E.g. \"`12:34:56:78:90:ab`\" or \"`AA:BB:CC:DD:EE:FF`\"."],
[4,712,"Each field must be one byte. E.g. \"`12-34-56-78-90-ab`\" or \"`AA-BB-CC-DD-EE-FF`\"."],
[4,713,"Each field must be two bytes. E.g. \"`1234.5678.90ab`\" or \"`AABB.CCDD.EEFF`\"."],
[4,714,"E.g. \"`127.0.0.1`\" or \"`192.168.0.1`\"."],
[4,715,"E.g. \"`2001:0db8:85a3::8a2e:0370:7334`\" or \"`::1`\"."],
[4,716,"A whitespace-separated list of hardware's permanent addresses. While `MACAddress=` matches the device's current MAC address, this matches the device's permanent MAC address, which may be different from the current one. Use full colon-, hyphen- or dot-delimited hexadecimal, or IPv4 or IPv6 address format. This option may appear more than once, in which case the lists are merged. If the empty string is assigned to this option, the list of hardware addresses defined prior to this is reset. Defaults to unset."],
[4,717,"A whitespace-separated list of shell-style globs matching the persistent path, as exposed by the udev property `ID_PATH`."],
[4,718,"A whitespace-separated list of shell-style globs matching the driver currently bound to the device, as exposed by the udev property `ID_NET_DRIVER` of its parent device, or if that is not set, the driver as exposed by **ethtool -i** of the device itself. If the list is prefixed with a \"!\", the test is inverted."],
[4,719,"A whitespace-separated list of shell-style globs matching the device type, as exposed by **networkctl list**. If the list is prefixed with a \"!\", the test is inverted. Some valid values are \"`ether`\", \"`loopback`\", \"`wlan`\", \"`wwan`\". Valid types are named either from the udev \"`DEVTYPE`\" attribute, or \"`ARPHRD_`\" macros in `linux/if_arp.h`, so this is not comprehensive."],
[4,720,"A whitespace-separated list of udev property names with their values after equals sign (\"`=`\"). If multiple properties are specified, the test results are ANDed. If the list is prefixed with a \"!\", the test is inverted. If a value contains white spaces, then please quote whole key and value pair. If a value contains quotation, then please escape the quotation with \"`\\`\".\n\nExample: if a .link file has the following:\n\nProperty=ID\\_MODEL\\_ID=9999 \"ID\\_VENDOR\\_FROM\\_DATABASE=vendor name\" \"KEY=with \\\\\"quotation\\\\\"\"\n\nthen, the .link file matches only when an interface has all the above three properties."],
[4,721,"A whitespace-separated list of shell-style globs matching the device name, as exposed by the udev property \"`INTERFACE`\", or device's alternative names. If the list is prefixed with a \"!\", the test is inverted."],
[4,722,"A whitespace-separated list of wireless network type. Supported values are \"`ad-hoc`\", \"`station`\", \"`ap`\", \"`ap-vlan`\", \"`wds`\", \"`monitor`\", \"`mesh-point`\", \"`p2p-client`\", \"`p2p-go`\", \"`p2p-device`\", \"`ocb`\", and \"`nan`\". If the list is prefixed with a \"!\", the test is inverted."],
[4,723,"A whitespace-separated list of shell-style globs matching the SSID of the currently connected wireless LAN. If the list is prefixed with a \"!\", the test is inverted."],
[4,724,"A whitespace-separated list of hardware address of the currently connected wireless LAN. Use full colon-, hyphen- or dot-delimited hexadecimal. See the example in `MACAddress=`. This option may appear more than once, in which case the lists are merged. If the empty string is assigned to this option, the list is reset."],
[4,725,"Matches against the hostname or machine ID of the host. See `ConditionHost=` in [systemd.unit(5)](systemd.unit.html#) for details. When prefixed with an exclamation mark (\"`!`\"), the result is negated. If an empty string is assigned, then previously assigned value is cleared."],
[4,726,"Checks whether the system is executed in a virtualized environment and optionally test whether it is a specific implementation. See `ConditionVirtualization=` in [systemd.unit(5)](systemd.unit.html#) for details. When prefixed with an exclamation mark (\"`!`\"), the result is negated. If an empty string is assigned, then previously assigned value is cleared."],
[4,727,"Checks whether a specific kernel command line option is set. See `ConditionKernelCommandLine=` in [systemd.unit(5)](systemd.unit.html#) for details. When prefixed with an exclamation mark (\"`!`\"), the result is negated. If an empty string is assigned, then previously assigned value is cleared."],
[4,728,"Checks whether the kernel version (as reported by **uname -r**) matches a certain expression. See `ConditionKernelVersion=` in [systemd.unit(5)](systemd.unit.html#) for details. When prefixed with an exclamation mark (\"`!`\"), the result is negated. If an empty string is assigned, then previously assigned value is cleared."],
[4,729,"Checks whether the system is running on a specific architecture. See `ConditionArchitecture=` in [systemd.unit(5)](systemd.unit.html#) for details. When prefixed with an exclamation mark (\"`!`\"), the result is negated. If an empty string is assigned, then previously assigned value is cleared."],
[4,730,"Checks whether the system is running on a machine with the specified firmware. See `ConditionFirmware=` in [systemd.unit(5)](systemd.unit.html#) for details. When prefixed with an exclamation mark (\"`!`\"), the result is negated. If an empty string is assigned, then previously assigned value is cleared."],
[4,731,"The hardware address to set for the device."],
[4,732,"The maximum transmission unit in bytes to set for the device. The usual suffixes K, M, G, are supported and are understood to the base of 1024.\n\nNote that if IPv6 is enabled on the interface, and the MTU is chosen below 1280 (the minimum MTU for IPv6) it will automatically be increased to this value."],
[4,733,"Takes a boolean. If set to true, the ARP (low-level Address Resolution Protocol) for this interface is enabled. When unset, the kernel's default will be used.\n\nFor example, disabling ARP is useful when creating multiple MACVLAN or VLAN virtual interfaces atop a single lower-level physical interface, which will then only serve as a link/\"bridge\" device aggregating traffic to the same physical link and not participate in the network otherwise. Defaults to unset."],
[4,734,"Takes a boolean. If set to true, the multicast flag on the device is enabled. Defaults to unset."],
[4,735,"Takes a boolean. If set to true, the driver retrieves all multicast packets from the network. This happens when multicast routing is enabled. Defaults to unset."],
[4,736,"Takes a boolean. If set to true, promiscuous mode of the interface is enabled. Defaults to unset.\n\nIf this is set to false for the underlying link of a \"`passthru`\" mode MACVLAN/MACVTAP, the virtual interface will be created with the \"`nopromisc`\" flag set."],
[4,737,"Takes a boolean. When \"`yes`\", no attempts are made to bring up or configure matching links, equivalent to when there are no matching network files. Defaults to \"`no`\".\n\nThis is useful for preventing later matching network files from interfering with certain interfaces that are fully controlled by other applications."],
[4,738,"Link groups are similar to port ranges found in managed switches. When network interfaces are added to a numbered group, operations on all the interfaces from that group can be performed at once. Takes an unsigned integer in the range 0â€¦2147483647. Defaults to unset."],
[4,739,"Takes a boolean or a minimum operational state and an optional maximum operational state. Please see [networkctl(1)](networkctl.html#) for possible operational states. When \"`yes`\", the network is deemed required when determining whether the system is online (including when running **systemd-networkd-wait-online**). When \"`no`\", the network is ignored when determining the online state. When a minimum operational state and an optional maximum operational state are set, \"`yes`\" is implied, and this controls the minimum and maximum operational state required for the network interface to be considered online.\n\nDefaults to \"`yes`\" when `ActivationPolicy=` is not set, or set to \"`up`\", \"`always-up`\", or \"`bound`\". Defaults to \"`no`\" when `ActivationPolicy=` is set to \"`manual`\" or \"`down`\". This is forced to \"`no`\" when `ActivationPolicy=` is set to \"`always-down`\".\n\nThe network will be brought up normally (as configured by `ActivationPolicy=`), but in the event that there is no address being assigned by DHCP or the cable is not plugged in, the link will simply remain offline and be skipped automatically by **systemd-networkd-wait-online** if \"`RequiredForOnline=no`\"."],
[4,740,"Takes an address family. When specified, an IP address in the given family is deemed required when determining whether the link is online (including when running **systemd-networkd-wait-online**). Takes one of \"`ipv4`\", \"`ipv6`\", \"`both`\", or \"`any`\". Defaults to \"`any`\". Note that this option has no effect if \"`RequiredForOnline=no`\", or if \"`RequiredForOnline=`\" specifies a minimum operational state below \"`degraded`\"."],
[4,741,"Specifies the policy for **systemd-networkd** managing the link administrative state. Specifically, this controls how **systemd-networkd** changes the network device's \"`IFF_UP`\" flag, which is sometimes controlled by system administrators by running e.g., **ip link set dev eth0 up** or **ip link set dev eth0 down**, and can also be changed with **networkctl up eth0** or **networkctl down eth0**.\n\nTakes one of \"`up`\", \"`always-up`\", \"`manual`\", \"`always-down`\", \"`down`\", or \"`bound`\". When \"`manual`\", **systemd-networkd** will not change the link's admin state automatically; the system administrator must bring the interface up or down manually, as desired. When \"`up`\" (the default) or \"`always-up`\", or \"`down`\" or \"`always-down`\", **systemd-networkd** will set the link up or down, respectively, when the interface is (re)configured. When \"`always-up`\" or \"`always-down`\", **systemd-networkd** will set the link up or down, respectively, any time **systemd-networkd** detects a change in the administrative state. When `BindCarrier=` is also set, this is automatically set to \"`bound`\" and any other value is ignored.\n\nWhen the policy is set to \"`down`\" or \"`manual`\", the default value of `RequiredForOnline=` is \"`no`\". When the policy is set to \"`always-down`\", the value of `RequiredForOnline=` forced to \"`no`\".\n\nThe administrative state is not the same as the carrier state, so using \"`always-up`\" does not mean the link will never lose carrier. The link carrier depends on both the administrative state as well as the network device's physical connection. However, to avoid reconfiguration failures, when using \"`always-up`\", `IgnoreCarrierLoss=` is forced to true."],
[4,742,"Specifies a Virtual Function (VF), lightweight PCIe function designed solely to move data in and out. Takes an unsigned integer in the range 0â€¦2147483646. This option is compulsory."],
[4,743,"Specifies VLAN ID of the virtual function. Takes an unsigned integer in the range 1â€¦4095."],
[4,744,"Specifies quality of service of the virtual function. Takes an unsigned integer in the range 1â€¦4294967294."],
[4,745,"Specifies VLAN protocol of the virtual function. Takes \"`802.1Q`\" or \"`802.1ad`\"."],
[4,746,"Takes a boolean. Controls the MAC spoof checking. When unset, the kernel's default will be used."],
[4,747,"Takes a boolean. Toggle the ability of querying the receive side scaling (RSS) configuration of the virtual function (VF). The VF RSS information like RSS hash key may be considered sensitive on some devices where this information is shared between VF and the physical function (PF). When unset, the kernel's default will be used."],
[4,748,"Takes a boolean. Allows to set trust mode of the virtual function (VF). When set, VF users can set a specific feature which may impact security and/or performance. When unset, the kernel's default will be used."],
[4,749,"Allows to set the link state of the virtual function (VF). Takes a boolean or a special value \"`auto`\". Setting to \"`auto`\" means a reflection of the physical function (PF) link state, \"`yes`\" lets the VF to communicate with other VFs on this host even if the PF link state is down, \"`no`\" causes the hardware to drop any packets sent by the VF. When unset, the kernel's default will be used."],
[4,750,"Specifies the MAC address for the virtual function."],
[4,751,"A description of the device. This is only used for presentation purposes."],
[4,752,"Enables DHCPv4 and/or DHCPv6 client support. Accepts \"`yes`\", \"`no`\", \"`ipv4`\", or \"`ipv6`\". Defaults to \"`no`\".\n\nNote that DHCPv6 will by default be triggered by Router Advertisement, if that is enabled, regardless of this parameter. By enabling DHCPv6 support explicitly, the DHCPv6 client will be started regardless of the presence of routers on the link, or what flags the routers pass. See \"`IPv6AcceptRA=`\".\n\nFurthermore, note that by default the domain name specified through DHCP is not used for name resolution. See option `UseDomains=` below.\n\nSee the \\[DHCPv4\\] or \\[DHCPv6\\] sections below for further configuration options for the DHCP client support."],
[4,753,"Takes a boolean. If set to \"`yes`\", DHCPv4 server will be started. Defaults to \"`no`\". Further settings for the DHCP server may be set in the \\[DHCPServer\\] section described below."],
[4,754,"Enables link-local address autoconfiguration. Accepts `yes`, `no`, `ipv4`, and `ipv6`. An IPv6 link-local address is configured when `yes` or `ipv6`. An IPv4 link-local address is configured when `yes` or `ipv4` and when DHCPv4 autoconfiguration has been unsuccessful for some time. (IPv4 link-local address autoconfiguration will usually happen in parallel with repeated attempts to acquire a DHCPv4 lease).\n\nDefaults to `no` when `KeepMaster=` or `Bridge=` is set or when the specified `MACVLAN=`/`MACVTAP=` has `Mode=passthru`, or `ipv6` otherwise."],
[4,755,"Specifies how IPv6 link local address is generated. Takes one of \"`eui64`\", \"`none`\", \"`stable-privacy`\" and \"`random`\". When unset, \"`stable-privacy`\" is used if `IPv6StableSecretAddress=` is specified, and if not, \"`eui64`\" is used. Note that if `LinkLocalAddressing=` is \"`no`\" or \"`ipv4`\", then `IPv6LinkLocalAddressGenerationMode=` will be ignored. Also, even if `LinkLocalAddressing=` is \"`yes`\" or \"`ipv6`\", setting `IPv6LinkLocalAddressGenerationMode=none` disables to configure an IPv6 link-local address."],
[4,756,"Takes an IPv6 address. The specified address will be used as a stable secret for generating IPv6 link-local address. If this setting is specified, and `IPv6LinkLocalAddressGenerationMode=` is unset, then `IPv6LinkLocalAddressGenerationMode=stable-privacy` is implied. If this setting is not specified, and \"`stable-privacy`\" is set to `IPv6LinkLocalAddressGenerationMode=`, then a stable secret address will be generated from the local machine ID and the interface name."],
[4,757,"Takes a boolean. If set to true, sets up the route needed for non-IPv4LL hosts to communicate with IPv4LL-only hosts. Defaults to false."],
[4,758,"Takes a boolean. If set to true, sets up the default route bound to the interface. Defaults to false. This is useful when creating routes on point-to-point interfaces. This is equivalent to e.g. the following,\n\nip route add default dev veth99\n\nor,\n\n\\[Route\\]\nGateway=0.0.0.0\n\nCurrently, there are no way to specify e.g., the table for the route configured by this setting. To configure the default route with such an additional property, please use the following instead:\n\n\\[Route\\]\nGateway=0.0.0.0\nTable=1234"],
[4,759,"Takes a boolean or \"`resolve`\". When true, enables [Link-Local Multicast Name Resolution](https://tools.ietf.org/html/rfc4795) on the link. When set to \"`resolve`\", only resolution is enabled, but not host registration and announcement. Defaults to true. This setting is read by [systemd-resolved.service(8)](systemd-resolved.service.html#)."],
[4,760,"Takes a boolean or \"`resolve`\". When true, enables [Multicast DNS](https://tools.ietf.org/html/rfc6762) support on the link. When set to \"`resolve`\", only resolution is enabled, but not host or service registration and announcement. Defaults to false. This setting is read by [systemd-resolved.service(8)](systemd-resolved.service.html#)."],
[4,761,"Takes a boolean or \"`opportunistic`\". When true, enables [DNS-over-TLS](https://tools.ietf.org/html/rfc7858) support on the link. When set to \"`opportunistic`\", compatibility with non-DNS-over-TLS servers is increased, by automatically turning off DNS-over-TLS servers in this case. This option defines a per-interface setting for [resolved.conf(5)](resolved.conf.html#)'s global `DNSOverTLS=` option. Defaults to unset, and the global setting will be used. This setting is read by [systemd-resolved.service(8)](systemd-resolved.service.html#)."],
[4,762,"Takes a boolean or \"`allow-downgrade`\". When true, enables [DNSSEC](https://tools.ietf.org/html/rfc4033) DNS validation support on the link. When set to \"`allow-downgrade`\", compatibility with non-DNSSEC capable networks is increased, by automatically turning off DNSSEC in this case. This option defines a per-interface setting for [resolved.conf(5)](resolved.conf.html#)'s global `DNSSEC=` option. Defaults to unset, and the global setting will be used. This setting is read by [systemd-resolved.service(8)](systemd-resolved.service.html#)."],
[4,763,"A space-separated list of DNSSEC negative trust anchor domains. If specified and DNSSEC is enabled, look-ups done via the interface's DNS server will be subject to the list of negative trust anchors, and not require authentication for the specified domains, or anything below it. Use this to disable DNSSEC authentication for specific private domains, that cannot be proven valid using the Internet DNS hierarchy. Defaults to the empty list. This setting is read by [systemd-resolved.service(8)](systemd-resolved.service.html#)."],
[4,764,"Controls support for Ethernet LLDP packet reception. LLDP is a link-layer protocol commonly implemented on professional routers and bridges which announces which physical port a system is connected to, as well as other related data. Accepts a boolean or the special value \"`routers-only`\". When true, incoming LLDP packets are accepted and a database of all LLDP neighbors maintained. If \"`routers-only`\" is set only LLDP data of various types of routers is collected and LLDP data about other types of devices ignored (such as stations, telephones and others). If false, LLDP reception is disabled. Defaults to \"`routers-only`\". Use [networkctl(1)](networkctl.html#) to query the collected neighbor data. LLDP is only available on Ethernet links. See `EmitLLDP=` below for enabling LLDP packet emission from the local system."],
[4,765,"Controls support for Ethernet LLDP packet emission. Accepts a boolean parameter or the special values \"`nearest-bridge`\", \"`non-tpmr-bridge`\" and \"`customer-bridge`\". Defaults to false, which turns off LLDP packet emission. If not false, a short LLDP packet with information about the local system is sent out in regular intervals on the link. The LLDP packet will contain information about the local hostname, the local machine ID (as stored in [machine-id(5)](machine-id.html#)) and the local interface name, as well as the pretty hostname of the system (as set in [machine-info(5)](machine-info.html#)). LLDP emission is only available on Ethernet links. Note that this setting passes data suitable for identification of host to the network and should thus not be enabled on untrusted networks, where such identification data should not be made available. Use this option to permit other systems to identify on which interfaces they are connected to this system. The three special values control propagation of the LLDP packets. The \"`nearest-bridge`\" setting permits propagation only to the nearest connected bridge, \"`non-tpmr-bridge`\" permits propagation across Two-Port MAC Relays, but not any other bridges, and \"`customer-bridge`\" permits propagation until a customer bridge is reached. For details about these concepts, see [IEEE 802.1AB-2016](https://standards.ieee.org/findstds/standard/802.1AB-2016.html). Note that configuring this setting to true is equivalent to \"`nearest-bridge`\", the recommended and most restricted level of propagation. See `LLDP=` above for an option to enable LLDP reception."],
[4,766,"A link name or a list of link names. When set, controls the behavior of the current link. When all links in the list are in an operational down state, the current link is brought down. When at least one link has carrier, the current interface is brought up.\n\nThis forces `ActivationPolicy=` to be set to \"`bound`\"."],
[4,767,"A static IPv4 or IPv6 address and its prefix length, separated by a \"`/`\" character. Specify this key more than once to configure several addresses. The format of the address must be as described in [inet\\_pton(3)](http://man7.org/linux/man-pages/man3/inet_pton.3.html). This is a short-hand for an \\[Address\\] section only containing an Address key (see below). This option may be specified more than once.\n\nIf the specified address is \"`0.0.0.0`\" (for IPv4) or \"`::`\" (for IPv6), a new address range of the requested size is automatically allocated from a system-wide pool of unused ranges. Note that the prefix length must be equal or larger than 8 for IPv4, and 64 for IPv6. The allocated range is checked against all current network interfaces and all known network configuration files to avoid address range conflicts. The default system-wide pool consists of 192.168.0.0/16, 172.16.0.0/12 and 10.0.0.0/8 for IPv4, and fd00::/8 for IPv6. This functionality is useful to manage a large number of dynamically created network interfaces with the same network configuration and automatic address range assignment."],
[4,768,"The gateway address, which must be in the format described in [inet\\_pton(3)](http://man7.org/linux/man-pages/man3/inet_pton.3.html). This is a short-hand for a \\[Route\\] section only containing a Gateway key. This option may be specified more than once."],
[4,769,"A DNS server address, which must be in the format described in [inet\\_pton(3)](http://man7.org/linux/man-pages/man3/inet_pton.3.html). This option may be specified more than once. Each address can optionally take a port number separated with \"`:`\", a network interface name or index separated with \"`%`\", and a Server Name Indication (SNI) separated with \"`#`\". When IPv6 address is specified with a port number, then the address must be in the square brackets. That is, the acceptable full formats are \"`111.222.333.444:9953%ifname#example.com`\" for IPv4 and \"`[1111:2222::3333]:9953%ifname#example.com`\" for IPv6. If an empty string is assigned, then the all previous assignments are cleared. This setting is read by [systemd-resolved.service(8)](systemd-resolved.service.html#)."],
[4,770,"A whitespace-separated list of domains which should be resolved using the DNS servers on this link. Each item in the list should be a domain name, optionally prefixed with a tilde (\"`~`\"). The domains with the prefix are called \"routing-only domains\". The domains without the prefix are called \"search domains\" and are first used as search suffixes for extending single-label hostnames (hostnames containing no dots) to become fully qualified domain names (FQDNs). If a single-label hostname is resolved on this interface, each of the specified search domains are appended to it in turn, converting it into a fully qualified domain name, until one of them may be successfully resolved.\n\nBoth \"search\" and \"routing-only\" domains are used for routing of DNS queries: look-ups for hostnames ending in those domains (hence also single label names, if any \"search domains\" are listed), are routed to the DNS servers configured for this interface. The domain routing logic is particularly useful on multi-homed hosts with DNS servers serving particular private DNS zones on each interface.\n\nThe \"routing-only\" domain \"`~.`\" (the tilde indicating definition of a routing domain, the dot referring to the DNS root domain which is the implied suffix of all valid DNS names) has special effect. It causes all DNS traffic which does not match another configured domain routing entry to be routed to DNS servers specified for this interface. This setting is useful to prefer a certain set of DNS servers if a link on which they are connected is available.\n\nThis setting is read by [systemd-resolved.service(8)](systemd-resolved.service.html#). \"Search domains\" correspond to the `domain` and `search` entries in [resolv.conf(5)](http://man7.org/linux/man-pages/man5/resolv.conf.5.html). Domain name routing has no equivalent in the traditional glibc API, which has no concept of domain name servers limited to a specific link."],
[4,771,"Takes a boolean argument. If true, this link's configured DNS servers are used for resolving domain names that do not match any link's configured `Domains=` setting. If false, this link's configured DNS servers are never used for such domains, and are exclusively used for resolving names that match at least one of the domains configured on this link. If not specified defaults to an automatic mode: queries not matching any link's configured domains will be routed to this link if it has no routing-only domains configured."],
[4,772,"An NTP server address (either an IP address, or a hostname). This option may be specified more than once. This setting is read by [systemd-timesyncd.service(8)](systemd-timesyncd.service.html#)."],
[4,773,"Configures IP packet forwarding for the system. If enabled, incoming packets on any network interface will be forwarded to any other interfaces according to the routing table. Takes a boolean, or the values \"`ipv4`\" or \"`ipv6`\", which only enable IP packet forwarding for the specified address family. This controls the `net.ipv4.ip_forward` and `net.ipv6.conf.all.forwarding` sysctl options of the network interface (see [ip-sysctl.txt](https://www.kernel.org/doc/Documentation/networking/ip-sysctl.txt) for details about sysctl options). Defaults to \"`no`\".\n\nNote: this setting controls a global kernel option, and does so one way only: if a network that has this setting enabled is set up the global setting is turned on. However, it is never turned off again, even after all networks with this setting enabled are shut down again.\n\nTo allow IP packet forwarding only between specific network interfaces use a firewall."],
[4,774,"Configures IP masquerading for the network interface. If enabled, packets forwarded from the network interface will be appear as coming from the local host. Takes one of \"`ipv4`\", \"`ipv6`\", \"`both`\", or \"`no`\". Defaults to \"`no`\". If enabled, this automatically sets `IPForward=` to one of \"`ipv4`\", \"`ipv6`\" or \"`yes`\".\n\nNote. Any positive boolean values such as \"`yes`\" or \"`true`\" are now deprecated. Please use one of the values in the above."],
[4,775,"Configures use of stateless temporary addresses that change over time (see [RFC 4941](https://tools.ietf.org/html/rfc4941), Privacy Extensions for Stateless Address Autoconfiguration in IPv6). Takes a boolean or the special values \"`prefer-public`\" and \"`kernel`\". When true, enables the privacy extensions and prefers temporary addresses over public addresses. When \"`prefer-public`\", enables the privacy extensions, but prefers public addresses over temporary addresses. When false, the privacy extensions remain disabled. When \"`kernel`\", the kernel's default setting will be left in place. Defaults to \"`no`\"."],
[4,776,"Takes a boolean. Controls IPv6 Router Advertisement (RA) reception support for the interface. If true, RAs are accepted; if false, RAs are ignored. When RAs are accepted, they may trigger the start of the DHCPv6 client if the relevant flags are set in the RA data, or if no routers are found on the link. The default is to disable RA reception for bridge devices or when IP forwarding is enabled, and to enable it otherwise. Cannot be enabled on bond devices and when link local addressing is disabled.\n\nFurther settings for the IPv6 RA support may be configured in the \\[IPv6AcceptRA\\] section, see below.\n\nAlso see [ip-sysctl.txt](https://www.kernel.org/doc/Documentation/networking/ip-sysctl.txt) in the kernel documentation regarding \"`accept_ra`\", but note that systemd's setting of `1` (i.e. true) corresponds to kernel's setting of `2`.\n\nNote that kernel's implementation of the IPv6 RA protocol is always disabled, regardless of this setting. If this option is enabled, a userspace implementation of the IPv6 RA protocol is used, and the kernel's own implementation remains disabled, since **systemd-networkd** needs to know all details supplied in the advertisements, and these are not available from the kernel if the kernel's own implementation is used."],
[4,777,"Configures the amount of IPv6 Duplicate Address Detection (DAD) probes to send. When unset, the kernel's default will be used."],
[4,778,"Configures IPv6 Hop Limit. For each router that forwards the packet, the hop limit is decremented by 1. When the hop limit field reaches zero, the packet is discarded. When unset, the kernel's default will be used."],
[4,779,"Takes a boolean. Accept packets with local source addresses. In combination with suitable routing, this can be used to direct packets between two local interfaces over the wire and have them accepted properly. When unset, the kernel's default will be used."],
[4,780,"Takes a boolean. When true, the kernel does not consider loopback addresses as martian source or destination while routing. This enables the use of 127.0.0.0/8 for local routing purposes. When unset, the kernel's default will be used."],
[4,781,"Takes a boolean. Configures proxy ARP for IPv4. Proxy ARP is the technique in which one host, usually a router, answers ARP requests intended for another machine. By \"faking\" its identity, the router accepts responsibility for routing packets to the \"real\" destination. See [RFC 1027](https://tools.ietf.org/html/rfc1027). When unset, the kernel's default will be used."],
[4,782,"Takes a boolean. Configures proxy NDP for IPv6. Proxy NDP (Neighbor Discovery Protocol) is a technique for IPv6 to allow routing of addresses to a different destination when peers expect them to be present on a certain physical link. In this case a router answers Neighbour Advertisement messages intended for another machine by offering its own MAC address as destination. Unlike proxy ARP for IPv4, it is not enabled globally, but will only send Neighbour Advertisement messages for addresses in the IPv6 neighbor proxy table, which can also be shown by **ip -6 neighbour show proxy**. systemd-networkd will control the per-interface \\`proxy\\_ndp\\` switch for each configured interface depending on this option. When unset, the kernel's default will be used."],
[4,783,"An IPv6 address, for which Neighbour Advertisement messages will be proxied. This option may be specified more than once. systemd-networkd will add the `IPv6ProxyNDPAddress=` entries to the kernel's IPv6 neighbor proxy table. This option implies `IPv6ProxyNDP=yes` but has no effect if `IPv6ProxyNDP` has been set to false. When unset, the kernel's default will be used."],
[4,784,"Whether to enable or disable Router Advertisement sending on a link. Takes a boolean value. When enabled, prefixes configured in \\[IPv6Prefix\\] sections and routes configured in \\[IPv6RoutePrefix\\] sections are distributed as defined in the \\[IPv6SendRA\\] section. If `DHCPPrefixDelegation=` is enabled, then the delegated prefixes are also distributed. See `DCHPPrefixDelegation=` setting and the \\[IPv6SendRA\\], \\[IPv6Prefix\\], \\[IPv6RoutePrefix\\], and \\[DHCPPrefixDelegation\\] sections for more configuration options."],
[4,785,"Takes a boolean value. When enabled, requests subnet prefixes acquired by a DHCPv6 client, or by a DHCPv4 client through the 6RD option configured on another link. By default, an address within each delegated prefix will be assigned, and the prefixes will be announced through IPv6 Router Advertisement when `IPv6SendRA=` is enabled. Such default settings can be configured in \\[DHCPPrefixDelegation\\] section. Defaults to disabled."],
[4,786,"Configures IPv6 maximum transmission unit (MTU). An integer greater than or equal to 1280 bytes. When unset, the kernel's default will be used."],
[4,787,"Takes a boolean value. When enabled, the current master interface index will not be changed, and `BatmanAdvanced=`, `Bond=`, `Bridge=`, and `VRF=` settings are ignored. This may be useful when a netdev with a master interface is created by another program, e.g. [systemd-nspawn(1)](systemd-nspawn.html#). Defaults to false."],
[4,788,"The name of the B.A.T.M.A.N. Advanced, bond, bridge, or VRF interface to add the link to. See [systemd.netdev(5)](systemd.netdev.html#)."],
[4,789,"The name of an IPoIB, IPVLAN, IPVTAP, L2TP, MACsec, MACVLAN, MACVTAP, tunnel, VLAN, VXLAN, or Xfrm to be created on the link. See [systemd.netdev(5)](systemd.netdev.html#). This option may be specified more than once."],
[4,790,"Takes a boolean. Specifies the new active slave. The \"`ActiveSlave=`\" option is only valid for following modes: \"`active-backup`\", \"`balance-alb`\" and \"`balance-tlb`\". Defaults to false."],
[4,791,"Takes a boolean. Specifies which slave is the primary device. The specified device will always be the active slave while it is available. Only when the primary is off-line will alternate devices be used. This is useful when one slave is preferred over another, e.g. when one slave has higher throughput than another. The \"`PrimarySlave=`\" option is only valid for following modes: \"`active-backup`\", \"`balance-alb`\" and \"`balance-tlb`\". Defaults to false."],
[4,792,"Takes a boolean. Allows networkd to configure a specific link even if it has no carrier. Defaults to false. If enabled, and the `IgnoreCarrierLoss=` setting is not explicitly set, then it is enabled as well."],
[4,793,"Takes a boolean or a timespan. When true, networkd retains both the static and dynamic configuration of the interface even if its carrier is lost. When a timespan is specified, networkd waits for the specified timespan, and ignores the carrier loss if the link regain its carrier within the timespan. Setting a finite timespan may be useful for a wireless interface connecting to a network which has multiple access points with the same SSID, or an interface which is reset on changing MTU. When unset, the value specified with `ConfigureWithoutCarrier=` is used.\n\nWhen `ActivationPolicy=` is set to \"`always-up`\", this is forced to \"`true`\"."],
[4,794,"Takes a boolean or one of \"`static`\", \"`dhcp-on-stop`\", \"`dhcp`\". When \"`static`\", **systemd-networkd** will not drop static addresses and routes on starting up process. When set to \"`dhcp-on-stop`\", **systemd-networkd** will not drop addresses and routes on stopping the daemon. When \"`dhcp`\", the addresses and routes provided by a DHCP server will never be dropped even if the DHCP lease expires. This is contrary to the DHCP specification, but may be the best choice if, e.g., the root filesystem relies on this connection. The setting \"`dhcp`\" implies \"`dhcp-on-stop`\", and \"`yes`\" implies \"`dhcp`\" and \"`static`\". Defaults to \"`no`\"."],
[4,795,"As in the \\[Network\\] section. This key is mandatory. Each \\[Address\\] section can contain one `Address=` setting."],
[4,796,"The peer address in a point-to-point connection. Accepts the same format as the `Address=` key."],
[4,797,"Takes an IPv4 address or boolean value. The address must be in the format described in [inet\\_pton(3)](http://man7.org/linux/man-pages/man3/inet_pton.3.html). If set to true, then the IPv4 broadcast address will be derived from the `Address=` setting. If set to false, then the broadcast address will not be set. Defaults to true, except for wireguard interfaces, where it default to false."],
[4,798,"Specifies the label for the IPv4 address. The label must be a 7-bit ASCII string with a length of 1â€¦15 characters. Defaults to unset."],
[4,799,"Allows the default \"preferred lifetime\" of the address to be overridden. Only three settings are accepted: \"`forever`\", \"`infinity`\", which is the default and means that the address never expires, and \"`0`\", which means that the address is considered immediately \"expired\" and will not be used, unless explicitly requested. A setting of `PreferredLifetime=0` is useful for addresses which are added to be used only by a specific application, which is then configured to use them explicitly."],
[4,800,"The scope of the address, which can be \"`global`\" (valid everywhere on the network, even through a gateway), \"`link`\" (only valid on this device, will not traverse a gateway) or \"`host`\" (only valid within the device itself, e.g. 127.0.0.1) or an unsigned integer in the range 0â€¦255. Defaults to \"`global`\"."],
[4,801,"The metric of the prefix route, which is pointing to the subnet of the configured IP address, taking the configured prefix length into account. Takes an unsigned integer in the range 0â€¦4294967295. When unset or set to 0, the kernel's default value is used. This setting will be ignored when `AddPrefixRoute=` is false."],
[4,802,"Takes a boolean. Designates this address the \"home address\" as defined in [RFC 6275](https://tools.ietf.org/html/rfc6275). Supported only on IPv6. Defaults to false."],
[4,803,"Takes one of \"`ipv4`\", \"`ipv6`\", \"`both`\", \"`none`\". When \"`ipv4`\", performs IPv4 Address Conflict Detection. See [RFC 5227](https://tools.ietf.org/html/rfc5227). When \"`ipv6`\", performs IPv6 Duplicate Address Detection. See [RFC 4862](https://tools.ietf.org/html/rfc4862). Defaults to \"`ipv6`\"."],
[4,804,"Takes a boolean. If true the kernel manage temporary addresses created from this one as template on behalf of Privacy Extensions [RFC 3041](https://tools.ietf.org/html/rfc3041). For this to become active, the use\\_tempaddr sysctl setting has to be set to a value greater than zero. The given address needs to have a prefix length of 64. This flag allows using privacy extensions in a manually configured network, just like if stateless auto-configuration was active. Defaults to false."],
[4,805,"Takes a boolean. When true, the prefix route for the address is automatically added. Defaults to true."],
[4,806,"Takes a boolean. Joining multicast group on ethernet level via **ip maddr** command would not work if we have an Ethernet switch that does IGMP snooping since the switch would not replicate multicast packets on ports that did not have IGMP reports for the multicast addresses. Linux vxlan interfaces created via **ip link add vxlan** or networkd's netdev kind vxlan have the group option that enables then to do the required join. By extending ip address command with option \"`autojoin`\" we can get similar functionality for openvswitch (OVS) vxlan interfaces as well as other tunneling mechanisms that need to receive multicast traffic. Defaults to \"`no`\"."],
[4,807,"The IP address of the neighbor."],
[4,808,"The link layer address (MAC address or IP address) of the neighbor."],
[4,809,"The label for the prefix, an unsigned integer in the range 0â€¦4294967294. 0xffffffff is reserved. This setting is mandatory."],
[4,810,"IPv6 prefix is an address with a prefix length, separated by a slash \"`/`\" character. This key is mandatory."],
[4,811,"Takes a number between 0 and 255 that specifies the type of service to match."],
[4,812,"Specifies the source address prefix to match. Possibly followed by a slash and the prefix length."],
[4,813,"Specifies the destination address prefix to match. Possibly followed by a slash and the prefix length."],
[4,814,"Specifies the iptables firewall mark value to match (a number between 1 and 4294967295). Optionally, the firewall mask (also a number between 1 and 4294967295) can be suffixed with a slash (\"`/`\"), e.g., \"`7/255`\"."],
[4,815,"Specifies the routing table identifier to lookup if the rule selector matches. Takes one of predefined names \"`default`\", \"`main`\", and \"`local`\", and names defined in `RouteTable=` in [networkd.conf(5)](networkd.conf.html#), or a number between 1 and 4294967295. Defaults to \"`main`\"."],
[4,816,"Specifies the priority of this rule. `Priority=` is an unsigned integer in the range 0â€¦4294967295. Higher number means lower priority, and rules get processed in order of increasing number. Defaults to unset, and the kernel will pick a value dynamically."],
[4,817,"Specifies incoming device to match. If the interface is loopback, the rule only matches packets originating from this host."],
[4,818,"Specifies the outgoing device to match. The outgoing interface is only available for packets originating from local sockets that are bound to a device."],
[4,819,"Specifies the source IP port or IP port range match in forwarding information base (FIB) rules. A port range is specified by the lower and upper port separated by a dash. Defaults to unset."],
[4,820,"Specifies the destination IP port or IP port range match in forwarding information base (FIB) rules. A port range is specified by the lower and upper port separated by a dash. Defaults to unset."],
[4,821,"Specifies the IP protocol to match in forwarding information base (FIB) rules. Takes IP protocol name such as \"`tcp`\", \"`udp`\" or \"`sctp`\", or IP protocol number such as \"`6`\" for \"`tcp`\" or \"`17`\" for \"`udp`\". Defaults to unset."],
[4,822,"A boolean. Specifies whether the rule is to be inverted. Defaults to false."],
[4,823,"Takes a special value \"`ipv4`\", \"`ipv6`\", or \"`both`\". By default, the address family is determined by the address specified in `To=` or `From=`. If neither `To=` nor `From=` are specified, then defaults to \"`ipv4`\"."],
[4,824,"Takes a username, a user ID, or a range of user IDs separated by a dash. Defaults to unset."],
[4,825,"Takes a number _`N`_ in the range 0â€¦128 and rejects routing decisions that have a prefix length of _`N`_ or less. Defaults to unset."],
[4,826,"Takes an integer in the range 0â€¦2147483647 and rejects routing decisions that have an interface with the same group id. It has the same meaning as `suppress_ifgroup` in **ip rule**. Defaults to unset."],
[4,827,"Specifies Routing Policy Database (RPDB) rule type. Takes one of \"`blackhole`\", \"`unreachable`\" or \"`prohibit`\"."],
[4,828,"The id of the next hop. Takes an unsigned integer in the range 1â€¦4294967295. If left unspecified, then automatically chosen by kernel."],
[4,829,"As in the \\[Network\\] section."],
[4,830,"Takes one of the special values \"`ipv4`\" or \"`ipv6`\". By default, the family is determined by the address specified in `Gateway=`. If `Gateway=` is not specified, then defaults to \"`ipv4`\"."],
[4,831,"Takes a boolean. If set to true, the kernel does not have to check if the gateway is reachable directly by the current machine (i.e., attached to the local network), so that we can insert the nexthop in the kernel table without it being complained about. Defaults to \"`no`\"."],
[4,832,"Takes a boolean. If enabled, packets to the corresponding routes are discarded silently, and `Gateway=` cannot be specified. Defaults to \"`no`\"."],
[4,833,"Takes a whitespace separated list of nexthop IDs. Each ID must be in the range 1â€¦4294967295. Optionally, each nexthop ID can take a weight after a colon (\"``_`id`_[:_`weight`_]``\"). The weight must be in the range 1â€¦255. If the weight is not specified, then it is assumed that the weight is 1. This setting cannot be specified with `Gateway=`, `Family=`, `Blackhole=`. This setting can be specified multiple times. If an empty string is assigned, then the all previous assignments are cleared. Defaults to unset."],
[4,834,"Takes the gateway address or the special values \"`_dhcp4`\" and \"`_ipv6ra`\". If \"`_dhcp4`\" or \"`_ipv6ra`\" is set, then the gateway address provided by DHCPv4 or IPv6 RA is used."],
[4,835,"Takes a boolean. If set to true, the kernel does not have to check if the gateway is reachable directly by the current machine (i.e., attached to the local network), so that we can insert the route in the kernel table without it being complained about. Defaults to \"`no`\"."],
[4,836,"The destination prefix of the route. Possibly followed by a slash and the prefix length. If omitted, a full-length host route is assumed."],
[4,837,"The source prefix of the route. Possibly followed by a slash and the prefix length. If omitted, a full-length host route is assumed."],
[4,838,"The metric of the route. Takes an unsigned integer in the range 0â€¦4294967295. Defaults to unset, and the kernel's default will be used."],
[4,839,"Specifies the route preference as defined in [RFC 4191](https://tools.ietf.org/html/rfc4191) for Router Discovery messages. Which can be one of \"`low`\" the route has a lowest priority, \"`medium`\" the route has a default priority or \"`high`\" the route has a highest priority."],
[4,840,"The scope of the IPv4 route, which can be \"`global`\", \"`site`\", \"`link`\", \"`host`\", or \"`nowhere`\":\n\n*   \"`global`\" means the route can reach hosts more than one hop away.\n    \n*   \"`site`\" means an interior route in the local autonomous system.\n    \n*   \"`link`\" means the route can only reach hosts on the local network (one hop away).\n    \n*   \"`host`\" means the route will not leave the local machine (used for internal addresses like 127.0.0.1).\n    \n*   \"`nowhere`\" means the destination doesn't exist.\n    \n\nFor IPv4 route, defaults to \"`host`\" if `Type=` is \"`local`\" or \"`nat`\", and \"`link`\" if `Type=` is \"`broadcast`\", \"`multicast`\", or \"`anycast`\". In other cases, defaults to \"`global`\". The value is not used for IPv6."],
[4,841,"The preferred source address of the route. The address must be in the format described in [inet\\_pton(3)](http://man7.org/linux/man-pages/man3/inet_pton.3.html)."],
[4,842,"The table identifier for the route. Takes one of predefined names \"`default`\", \"`main`\", and \"`local`\", and names defined in `RouteTable=` in [networkd.conf(5)](networkd.conf.html#), or a number between 1 and 4294967295. The table can be retrieved using **ip route show table _`num`_**. If unset and `Type=` is \"`local`\", \"`broadcast`\", \"`anycast`\", or \"`nat`\", then \"`local`\" is used. In other cases, defaults to \"`main`\"."],
[4,843,"The protocol identifier for the route. Takes a number between 0 and 255 or the special values \"`kernel`\", \"`boot`\", \"`static`\", \"`ra`\" and \"`dhcp`\". Defaults to \"`static`\"."],
[4,844,"Specifies the type for the route. Takes one of \"`unicast`\", \"`local`\", \"`broadcast`\", \"`anycast`\", \"`multicast`\", \"`blackhole`\", \"`unreachable`\", \"`prohibit`\", \"`throw`\", \"`nat`\", and \"`xresolve`\". If \"`unicast`\", a regular route is defined, i.e. a route indicating the path to take to a destination network address. If \"`blackhole`\", packets to the defined route are discarded silently. If \"`unreachable`\", packets to the defined route are discarded and the ICMP message \"Host Unreachable\" is generated. If \"`prohibit`\", packets to the defined route are discarded and the ICMP message \"Communication Administratively Prohibited\" is generated. If \"`throw`\", route lookup in the current routing table will fail and the route selection process will return to Routing Policy Database (RPDB). Defaults to \"`unicast`\"."],
[4,845,"The TCP initial congestion window is used during the start of a TCP connection. During the start of a TCP session, when a client requests a resource, the server's initial congestion window determines how many packets will be sent during the initial burst of data without waiting for acknowledgement. Takes a number between 1 and 1023. Note that 100 is considered an extremely large value for this option. When unset, the kernel's default (typically 10) will be used."],
[4,846,"The TCP initial advertised receive window is the amount of receive data (in bytes) that can initially be buffered at one time on a connection. The sending host can send only that amount of data before waiting for an acknowledgment and window update from the receiving host. Takes a number between 1 and 1023. Note that 100 is considered an extremely large value for this option. When unset, the kernel's default will be used."],
[4,847,"Takes a boolean. When true enables TCP quick ack mode for the route. When unset, the kernel's default will be used."],
[4,848,"Takes a boolean. When true enables TCP fastopen without a cookie on a per-route basis. When unset, the kernel's default will be used."],
[4,849,"Takes a boolean. When true enables TTL propagation at Label Switched Path (LSP) egress. When unset, the kernel's default will be used."],
[4,850,"The maximum transmission unit in bytes to set for the route. The usual suffixes K, M, G, are supported and are understood to the base of 1024.\n\nNote that if IPv6 is enabled on the interface, and the MTU is chosen below 1280 (the minimum MTU for IPv6) it will automatically be increased to this value."],
[4,851,"Takes one of the special values \"`none`\", \"`CS6`\", or \"`CS4`\". When \"`none`\" no IP sevice type is set to the packet sent from the DHCPv4 client. When \"`CS6`\" (network control) or \"`CS4`\" (realtime), the corresponding service type will be set. Defaults to \"`CS6`\"."],
[4,852,"Specifies the Path MSS (in bytes) hints given on TCP layer. The usual suffixes K, M, G, are supported and are understood to the base of 1024. An unsigned integer in the range 1â€¦4294967294. When unset, the kernel's default will be used."],
[4,853,"Configures multipath route. Multipath routing is the technique of using multiple alternative paths through a network. Takes gateway address. Optionally, takes a network interface name or index separated with \"`@`\", and a weight in 1..256 for this multipath route separated with whitespace. This setting can be specified multiple times. If an empty string is assigned, then the all previous assignments are cleared."],
[4,854,"Specifies the nexthop id. Takes an unsigned integer in the range 1â€¦4294967295. If set, the corresponding \\[NextHop\\] section must be configured. Defaults to unset."],
[4,855,"When true (the default), the machine's hostname (or the value specified with `Hostname=`, described below) will be sent to the DHCP server. Note that the hostname must consist only of 7-bit ASCII lower-case characters and no spaces or dots, and be formatted as a valid DNS domain name. Otherwise, the hostname is not sent even if this option is true."],
[4,856,"Use this value for the hostname which is sent to the DHCP server, instead of machine's hostname. Note that the specified hostname must consist only of 7-bit ASCII lower-case characters and no spaces or dots, and be formatted as a valid DNS domain name."],
[4,857,"When configured, the specified Manufacturer Usage Description (MUD) URL will be sent to the DHCPv4 server. Takes a URL of length up to 255 characters. A superficial verification that the string is a valid URL will be performed. DHCPv4 clients are intended to have at most one MUD URL associated with them. See [RFCÂ 8520](https://tools.ietf.org/html/rfc8520).\n\nMUD is an embedded software standard defined by the IETF that allows IoT device makers to advertise device specifications, including the intended communication patterns for their device when it connects to the network. The network can then use this to author a context-specific access policy, so the device functions only within those parameters."],
[4,858,"The DHCPv4 client identifier to use. Takes one of `mac`, `duid` or `duid-only`. If set to `mac`, the MAC address of the link is used. If set to `duid`, an RFC4361-compliant Client ID, which is the combination of IAID and DUID (see below), is used. If set to `duid-only`, only DUID is used, this may not be RFC compliant, but some setups may require to use this. Defaults to `duid`."],
[4,859,"The vendor class identifier used to identify vendor type and configuration."],
[4,860,"A DHCPv4 client can use UserClass option to identify the type or category of user or applications it represents. The information contained in this option is a string that represents the user class of which the client is a member. Each class sets an identifying string of information to be used by the DHCP service to classify clients. Takes a whitespace-separated list of strings."],
[4,861,"Override the global `DUIDType=` setting for this network. See [networkd.conf(5)](networkd.conf.html#) for a description of possible values."],
[4,862,"Override the global `DUIDRawData=` setting for this network. See [networkd.conf(5)](networkd.conf.html#) for a description of possible values."],
[4,863,"The DHCP Identity Association Identifier (IAID) for the interface, a 32-bit unsigned integer."],
[4,864,"Takes a boolean. When true, the options sent to the DHCP server will follow the [RFC 7844](https://tools.ietf.org/html/rfc7844) (Anonymity Profiles for DHCP Clients) to minimize disclosure of identifying information. Defaults to false.\n\nThis option should only be set to true when `MACAddressPolicy=` is set to `random` (see [systemd.link(5)](systemd.link.html#)).\n\nWhen true, `SendHostname=`, `ClientIdentifier=`, `VendorClassIdentifier=`, `UserClass=`, `RequestOptions=`, `SendOption=`, `SendVendorOption=`, and `MUDURL=` are ignored.\n\nWith this option enabled DHCP requests will mimic those generated by Microsoft Windows, in order to reduce the ability to fingerprint and recognize installations. This means DHCP request sizes will grow and lease data will be more comprehensive than normally, though most of the requested data is not actually used."],
[4,865,"Sets request options to be sent to the server in the DHCPv4 request options list. A whitespace-separated list of integers in the range 1â€¦254. Defaults to unset."],
[4,866,"Send an arbitrary raw option in the DHCPv4 request. Takes a DHCP option number, data type and data separated with a colon (\"``_`option`_:_`type`_:_`value`_``\"). The option number must be an integer in the range 1â€¦254. The type takes one of \"`uint8`\", \"`uint16`\", \"`uint32`\", \"`ipv4address`\", or \"`string`\". Special characters in the data string may be escaped using [C-style escapes](https://en.wikipedia.org/wiki/Escape_sequences_in_C#Table_of_escape_sequences). This setting can be specified multiple times. If an empty string is specified, then all options specified earlier are cleared. Defaults to unset."],
[4,867,"Send an arbitrary vendor option in the DHCPv4 request. Takes a DHCP option number, data type and data separated with a colon (\"``_`option`_:_`type`_:_`value`_``\"). The option number must be an integer in the range 1â€¦254. The type takes one of \"`uint8`\", \"`uint16`\", \"`uint32`\", \"`ipv4address`\", or \"`string`\". Special characters in the data string may be escaped using [C-style escapes](https://en.wikipedia.org/wiki/Escape_sequences_in_C#Table_of_escape_sequences). This setting can be specified multiple times. If an empty string is specified, then all options specified earlier are cleared. Defaults to unset."],
[4,868,"Specifies the label for the IPv4 address received from the DHCP server. The label must be a 7-bit ASCII string with a length of 1â€¦15 characters. Defaults to unset."],
[4,869,"When true (the default), the DNS servers received from the DHCP server will be used.\n\nThis corresponds to the `nameserver` option in [resolv.conf(5)](http://man7.org/linux/man-pages/man5/resolv.conf.5.html)."],
[4,870,"When true, the routes to the DNS servers received from the DHCP server will be configured. When `UseDNS=` is disabled, this setting is ignored. Defaults to true."],
[4,871,"When true (the default), the NTP servers received from the DHCP server will be used by `systemd-timesyncd.service`."],
[4,872,"When true, the routes to the NTP servers received from the DHCP server will be configured. When `UseNTP=` is disabled, this setting is ignored. Defaults to true."],
[4,873,"When true (the default), the SIP servers received from the DHCP server will be collected and made available to client programs."],
[4,874,"When true, the interface maximum transmission unit from the DHCP server will be used on the current link. If `MTUBytes=` is set, then this setting is ignored. Defaults to false.\n\nNote, some drivers will reset the interfaces if the MTU is changed. For such interfaces, please try to use `IgnoreCarrierLoss=` with a short timespan, e.g. \"`3 seconds`\"."],
[4,875,"When true (the default), the hostname received from the DHCP server will be set as the transient hostname of the system."],
[4,876,"Takes a boolean, or the special value `route`. When true, the domain name received from the DHCP server will be used as DNS search domain over this link, similar to the effect of the `Domains=` setting. If set to `route`, the domain name received from the DHCP server will be used for routing DNS queries only, but not for searching, similar to the effect of the `Domains=` setting when the argument is prefixed with \"`~`\". Defaults to false.\n\nIt is recommended to enable this option only on trusted networks, as setting this affects resolution of all hostnames, in particular of single-label names. It is generally safer to use the supplied domain only as routing domain, rather than as search domain, in order to not have it affect local resolution of single-label names.\n\nWhen set to true, this setting corresponds to the `domain` option in [resolv.conf(5)](http://man7.org/linux/man-pages/man5/resolv.conf.5.html)."],
[4,877,"When true (the default), the static routes will be requested from the DHCP server and added to the routing table with a metric of 1024, and a scope of `global`, `link` or `host`, depending on the route's destination and gateway. If the destination is on the local host, e.g., 127.x.x.x, or the same as the link's own address, the scope will be set to `host`. Otherwise if the gateway is null (a direct route), a `link` scope will be used. For anything else, scope defaults to `global`."],
[4,878,"Set the routing metric for routes specified by the DHCP server (including the prefix route added for the specified prefix). Takes an unsigned integer in the range 0â€¦4294967295. Defaults to 1024."],
[4,879,"The table identifier for DHCP routes (a number between 1 and 4294967295, or 0 to unset). The table can be retrieved using **ip route show table _`num`_**.\n\nWhen used in combination with `VRF=`, the VRF's routing table is used when this parameter is not specified."],
[4,880,"Specifies the MTU for the DHCP routes. Please see the \\[Route\\] section for further details."],
[4,881,"When true, the gateway will be requested from the DHCP server and added to the routing table with a metric of 1024, and a scope of `link`. When unset, the value specified with `UseRoutes=` is used."],
[4,882,"When true, the timezone received from the DHCP server will be set as timezone of the local system. Defaults to false."],
[4,883,"When true, subnets of the received IPv6 prefix are assigned to downstream interfaces which enables `DHCPPrefixDelegation=`. See also `DHCPPrefixDelegation=` in the \\[Network\\] section, the \\[DHCPPrefixDelegation\\] section, and [RFC 5969](https://tools.ietf.org/html/rfc5969). Defaults to false."],
[4,884,"Allows to set DHCPv4 lease lifetime when DHCPv4 server does not send the lease lifetime. Takes one of \"`forever`\" or \"`infinity`\". The latter means that the address never expires. Defaults to unset."],
[4,885,"Request the server to use broadcast messages before the IP address has been configured. This is necessary for devices that cannot receive RAW packets, or that cannot receive packets at all before an IP address has been configured. On the other hand, this must not be enabled on networks where broadcasts are filtered out."],
[4,886,"Specifies how many times the DHCPv4 client configuration should be attempted. Takes a number or \"`infinity`\". Defaults to \"`infinity`\". Note that the time between retries is increased exponentially, up to approximately one per minute, so the network will not be overloaded even if this number is high. The default is suitable in most circumstances."],
[4,887,"Set the port from which the DHCP client packets originate."],
[4,888,"A whitespace-separated list of IPv4 addresses. Each address can optionally take a prefix length after \"`/`\". DHCP offers from servers in the list are rejected. Note that if `AllowList=` is configured then `DenyList=` is ignored."],
[4,889,"A whitespace-separated list of IPv4 addresses. Each address can optionally take a prefix length after \"`/`\". DHCP offers from servers in the list are accepted."],
[4,890,"When true, the DHCPv4 client sends a DHCP release packet when it stops. Defaults to true."],
[4,891,"A boolean. When \"`true`\", the DHCPv4 client receives the IP address from the DHCP server. After a new IP is received, the DHCPv4 client performs IPv4 Duplicate Address Detection. If duplicate use is detected, the DHCPv4 client rejects the IP by sending a `DHCPDECLINE` packet and tries to obtain an IP address again. See [RFC 5227](https://tools.ietf.org/html/rfc5227). Defaults to \"`unset`\"."],
[4,892,"As in the \\[DHCPv4\\] section."],
[4,893,"As in the \\[DHCPv4\\] section, however because DHCPv6 uses 16-bit fields to store option numbers, the option number is an integer in the range 1â€¦65536."],
[4,894,"Send an arbitrary vendor option in the DHCPv6 request. Takes an enterprise identifier, DHCP option number, data type, and data separated with a colon (\"``_`enterprise identifier`_:_`option`_:_`type`_:_`value`_``\"). Enterprise identifier is an unsigned integer in the range 1â€¦4294967294. The option number must be an integer in the range 1â€¦254. Data type takes one of \"`uint8`\", \"`uint16`\", \"`uint32`\", \"`ipv4address`\", \"`ipv6address`\", or \"`string`\". Special characters in the data string may be escaped using [C-style escapes](https://en.wikipedia.org/wiki/Escape_sequences_in_C#Table_of_escape_sequences). This setting can be specified multiple times. If an empty string is specified, then all options specified earlier are cleared. Defaults to unset."],
[4,895,"A DHCPv6 client can use User Class option to identify the type or category of user or applications it represents. The information contained in this option is a string that represents the user class of which the client is a member. Each class sets an identifying string of information to be used by the DHCP service to classify clients. Special characters in the data string may be escaped using [C-style escapes](https://en.wikipedia.org/wiki/Escape_sequences_in_C#Table_of_escape_sequences). This setting can be specified multiple times. If an empty string is specified, then all options specified earlier are cleared. Takes a whitespace-separated list of strings. Note that currently `NUL` bytes are not allowed."],
[4,896,"A DHCPv6 client can use VendorClass option to identify the vendor that manufactured the hardware on which the client is running. The information contained in the data area of this option is contained in one or more opaque fields that identify details of the hardware configuration. Takes a whitespace-separated list of strings."],
[4,897,"Takes an IPv6 address with prefix length in the same format as the `Address=` in the \\[Network\\] section. The DHCPv6 client will include a prefix hint in the DHCPv6 solicitation sent to the server. The prefix length must be in the range 1â€¦128. Defaults to unset."],
[4,898,"When true (the default), the IP addresses provided by the DHCPv6 server will be assigned."],
[4,899,"When true (the default), the client will request the DHCPv6 server to delegate prefixes. If the server provides prefixes to be delegated, then subnets of the prefixes are assigned to the interfaces which enables `DHCPPrefixDelegation=`. See also `DHCPPrefixDelegation=` in \\[Network\\] section, \\[DHCPPrefixDelegation\\] section, and [RFC 8415](https://www.rfc-editor.org/rfc/rfc8415.html#section-6.3)."],
[4,900,"As in the \\[DHCPv4\\] section."],
[4,901,"Allows DHCPv6 client to start without router advertisements's managed or other address configuration flag. Takes one of \"`no`\", \"`solicit`\" or \"`information-request`\". If this is not specified, \"`solicit`\" is used when `DHCPPrefixDelegation=` is enabled and `UplinkInterface=:self` is specified in the \\[DHCPPrefixDelegation\\] section. Otherwise, defaults to \"`no`\", and the DHCPv6 client will be started when an RA is received. See also `DHCPv6Client=` setting in the \\[IPv6AcceptRA\\] section."],
[4,902,"Specifies the name or the index of the uplink interface, or one of the special values \"`:self`\" and \"`:auto`\". When \"`:self`\", the interface itself is considered the uplink interface, and `WithoutRA=solicit` is implied if the setting is not explicitly specified. When \"`:auto`\", the first link which acquired prefixes to be delegated from the DHCPv6 or DHCPv4 server is selected. Defaults to \"`:auto`\"."],
[4,903,"Configure a specific subnet ID on the interface from a (previously) received prefix delegation. You can either set \"auto\" (the default) or a specific subnet ID (as defined in [RFC 4291](https://tools.ietf.org/html/rfc4291#section-2.5.4), section 2.5.4), in which case the allowed value is hexadecimal, from 0 to 0x7fffffffffffffff inclusive."],
[4,904,"Takes a boolean. When enabled, and `IPv6SendRA=` in \\[Network\\] section is enabled, the delegated prefixes are distributed through the IPv6 Router Advertisement. This setting will be ignored when the `DHCPPrefixDelegation=` setting is enabled on the upstream interface. Defaults to yes."],
[4,905,"Takes a boolean. Specifies whether to add an address from the delegated prefixes which are received from the WAN interface by the DHCPv6 Prefix Delegation. When true (on LAN interfce), the EUI-64 algorithm will be used by default to form an interface identifier from the delegated prefixes. See also `Token=` setting below. Defaults to yes."],
[4,906,"Specifies an optional address generation mode for assigning an address in each delegated prefix. This accepts the same syntax as `Token=` in the \\[IPv6AcceptRA\\] section. If `Assign=` is set to false, then this setting will be ignored. Defaults to unset, which means the EUI-64 algorithm will be used."],
[4,907,"As in the \\[Address\\] section, but defaults to true."],
[4,908,"The metric of the route to the delegated prefix subnet. Takes an unsigned integer in the range 0â€¦4294967295. When set to 0, the kernel's default value is used. Defaults to 256."],
[4,909,"Specifies an optional address generation mode for the Stateless Address Autoconfiguration (SLAAC). The following values are supported:\n\n`eui64`[Â¶](#eui64 \"Permalink to this term\")\n\nThe EUI-64 algorithm will be used to generate an address for that prefix. Only supported by Ethernet or InfiniBand interfaces.\n\n``static:_`ADDRESS`_``[Â¶](#static:ADDRESS \"Permalink to this term\")\n\nAn IPv6 address must be specified after a colon (\"`:`\"), and the lower bits of the supplied address are combined with the upper bits of a prefix received in a Router Advertisement (RA) message to form a complete address. Note that if multiple prefixes are received in an RA message, or in multiple RA messages, addresses will be formed from each of them using the supplied address. This mode implements SLAAC but uses a static interface identifier instead of an identifier generated by using the EUI-64 algorithm. Because the interface identifier is static, if Duplicate Address Detection detects that the computed address is a duplicate (in use by another node on the link), then this mode will fail to provide an address for that prefix. If an IPv6 address without mode is specified, then \"`static`\" mode is assumed.\n\n``prefixstable[:_`ADDRESS`_][,_`UUID`_]``[Â¶](#prefixstable%5B:ADDRESS%5D%5B,UUID%5D \"Permalink to this term\")\n\nThe algorithm specified in [RFC 7217](https://tools.ietf.org/html/rfc7217) will be used to generate interface identifiers. This mode can optionally take an IPv6 address separated with a colon (\"`:`\"). If an IPv6 address is specified, then an interface identifier is generated only when a prefix received in an RA message matches the supplied address.\n\nThis mode can also optionally take a non-null UUID in the format which `sd_id128_from_string()` accepts, e.g. \"`86b123b969ba4b7eb8b3d8605123525a`\" or \"`86b123b9-69ba-4b7e-b8b3-d8605123525a`\". If a UUID is specified, the value is used as the secret key to generate interface identifiers. If not specified, then an application specific ID generated with the system's machine-ID will be used as the secret key. See [sd-id128(3)](sd-id128.html#), [sd\\_id128\\_from\\_string(3)](sd_id128_from_string.html#), and [sd\\_id128\\_get\\_machine(3)](sd_id128_get_machine.html#),\n\nNote that the \"`prefixstable`\" algorithm uses both the interface name and MAC address as input to the hash to compute the interface identifier, so if either of those are changed the resulting interface identifier (and address) will be changed, even if the prefix received in the RA message has not been changed.\n\nIf no address generation mode is specified (which is the default), or a received prefix does not match any of the addresses provided in \"`prefixstable`\" mode, then the EUI-64 algorithm will be used for Ethernet or InfiniBand interfaces, otherwise \"`prefixstable`\" will be used to form an interface identifier for that prefix.\n\nThis setting can be specified multiple times. If an empty string is assigned, then the all previous assignments are cleared.\n\nExamples:\n\nToken=eui64\nToken=::1a:2b:3c:4d\nToken=static:::1a:2b:3c:4d\nToken=prefixstable\nToken=prefixstable:2002:da8:1::"],
[4,910,"The EUI-64 algorithm will be used to generate an address for that prefix. Only supported by Ethernet or InfiniBand interfaces."],
[4,911,"An IPv6 address must be specified after a colon (\"`:`\"), and the lower bits of the supplied address are combined with the upper bits of a prefix received in a Router Advertisement (RA) message to form a complete address. Note that if multiple prefixes are received in an RA message, or in multiple RA messages, addresses will be formed from each of them using the supplied address. This mode implements SLAAC but uses a static interface identifier instead of an identifier generated by using the EUI-64 algorithm. Because the interface identifier is static, if Duplicate Address Detection detects that the computed address is a duplicate (in use by another node on the link), then this mode will fail to provide an address for that prefix. If an IPv6 address without mode is specified, then \"`static`\" mode is assumed."],
[4,912,"The algorithm specified in [RFC 7217](https://tools.ietf.org/html/rfc7217) will be used to generate interface identifiers. This mode can optionally take an IPv6 address separated with a colon (\"`:`\"). If an IPv6 address is specified, then an interface identifier is generated only when a prefix received in an RA message matches the supplied address.\n\nThis mode can also optionally take a non-null UUID in the format which `sd_id128_from_string()` accepts, e.g. \"`86b123b969ba4b7eb8b3d8605123525a`\" or \"`86b123b9-69ba-4b7e-b8b3-d8605123525a`\". If a UUID is specified, the value is used as the secret key to generate interface identifiers. If not specified, then an application specific ID generated with the system's machine-ID will be used as the secret key. See [sd-id128(3)](sd-id128.html#), [sd\\_id128\\_from\\_string(3)](sd_id128_from_string.html#), and [sd\\_id128\\_get\\_machine(3)](sd_id128_get_machine.html#),\n\nNote that the \"`prefixstable`\" algorithm uses both the interface name and MAC address as input to the hash to compute the interface identifier, so if either of those are changed the resulting interface identifier (and address) will be changed, even if the prefix received in the RA message has not been changed."],
[4,913,"When true (the default), the DNS servers received in the Router Advertisement will be used.\n\nThis corresponds to the `nameserver` option in [resolv.conf(5)](http://man7.org/linux/man-pages/man5/resolv.conf.5.html)."],
[4,914,"Takes a boolean, or the special value \"`route`\". When true, the domain name received via IPv6 Router Advertisement (RA) will be used as DNS search domain over this link, similar to the effect of the `Domains=` setting. If set to \"`route`\", the domain name received via IPv6 RA will be used for routing DNS queries only, but not for searching, similar to the effect of the `Domains=` setting when the argument is prefixed with \"`~`\". Defaults to false.\n\nIt is recommended to enable this option only on trusted networks, as setting this affects resolution of all hostnames, in particular of single-label names. It is generally safer to use the supplied domain only as routing domain, rather than as search domain, in order to not have it affect local resolution of single-label names.\n\nWhen set to true, this setting corresponds to the `domain` option in [resolv.conf(5)](http://man7.org/linux/man-pages/man5/resolv.conf.5.html)."],
[4,915,"The table identifier for the routes received in the Router Advertisement (a number between 1 and 4294967295, or 0 to unset). The table can be retrieved using **ip route show table _`num`_**."],
[4,916,"Set the routing metric for the routes received in the Router Advertisement. Takes an unsigned integer in the range 0â€¦4294967295. Defaults to 1024."],
[4,917,"Takes a boolean. When true, the MTU received in the Router Advertisement will be used. Defaults to true."],
[4,918,"When true (the default), the router address will be configured as the default gateway."],
[4,919,"When true (the default), the routes corresponding to the route prefixes received in the Router Advertisement will be configured."],
[4,920,"When true (the default), the autonomous prefix received in the Router Advertisement will be used and take precedence over any statically configured ones."],
[4,921,"When true (the default), the onlink prefix received in the Router Advertisement will be used and takes precedence over any statically configured ones."],
[4,922,"A whitespace-separated list of IPv6 router addresses. Each address can optionally take a prefix length after \"`/`\". Any information advertised by the listed router is ignored."],
[4,923,"A whitespace-separated list of IPv6 router addresses. Each address can optionally take a prefix length after \"`/`\". Only information advertised by the listed router is accepted. Note that if `RouterAllowList=` is configured then `RouterDenyList=` is ignored."],
[4,924,"A whitespace-separated list of IPv6 prefixes. Each prefix can optionally take its prefix length after \"`/`\". IPv6 prefixes supplied via router advertisements in the list are ignored."],
[4,925,"A whitespace-separated list of IPv6 prefixes. Each prefix can optionally take its prefix length after \"`/`\". IPv6 prefixes supplied via router advertisements in the list are allowed. Note that if `PrefixAllowList=` is configured then `PrefixDenyList=` is ignored."],
[4,926,"A whitespace-separated list of IPv6 route prefixes. Each prefix can optionally take its prefix length after \"`/`\". IPv6 route prefixes supplied via router advertisements in the list are ignored."],
[4,927,"A whitespace-separated list of IPv6 route prefixes. Each prefix can optionally take its prefix length after \"`/`\". IPv6 route prefixes supplied via router advertisements in the list are allowed. Note that if `RouteAllowList=` is configured then `RouteDenyList=` is ignored."],
[4,928,"Takes a boolean, or the special value \"`always`\". When true, the DHCPv6 client will be started when the RA has the managed or other information flag. If set to \"`always`\", the DHCPv6 client will be started in managed mode when an RA is received, even if neither managed nor other information flag is set in the RA. This will be ignored when `WithoutRA=` in the \\[DHCPv6\\] section is enabled, or `UplinkInterface=:self` in the \\[DHCPPrefixDelegation\\] section is specified. Defaults to true."],
[4,929,"Specifies server address for the DHCP server. Takes an IPv4 address with prefix length, for example \"`192.168.0.1/24`\". This setting may be useful when the link on which the DHCP server is running has multiple static addresses. When unset, one of static addresses in the link will be automatically selected. Defaults to unset."],
[4,930,"Configures the pool of addresses to hand out. The pool is a contiguous sequence of IP addresses in the subnet configured for the server address, which does not include the subnet nor the broadcast address. `PoolOffset=` takes the offset of the pool from the start of subnet, or zero to use the default value. `PoolSize=` takes the number of IP addresses in the pool or zero to use the default value. By default, the pool starts at the first address after the subnet address and takes up the rest of the subnet, excluding the broadcast address. If the pool includes the server address (the default), this is reserved and not handed out to clients."],
[4,931,"Control the default and maximum DHCP lease time to pass to clients. These settings take time values in seconds or another common time unit, depending on the suffix. The default lease time is used for clients that did not ask for a specific lease time. If a client asks for a lease time longer than the maximum lease time, it is automatically shortened to the specified time. The default lease time defaults to 1h, the maximum lease time to 12h. Shorter lease times are beneficial if the configuration data in DHCP leases changes frequently and clients shall learn the new settings with shorter latencies. Longer lease times reduce the generated DHCP network traffic."],
[4,932,"Specifies the name or the index of the uplink interface, or one of the special values \"`:none`\" and \"`:auto`\". When emitting DNS, NTP, or SIP servers is enabled but no servers are specified, the servers configured in the uplink interface will be emitted. When \"`:auto`\", the link which has a default gateway with the highest priority will be automatically selected. When \"`:none`\", no uplink interface will be selected. Defaults to \"`:auto`\"."],
[4,933,"`EmitDNS=` takes a boolean. Configures whether the DHCP leases handed out to clients shall contain DNS server information. Defaults to \"`yes`\". The DNS servers to pass to clients may be configured with the `DNS=` option, which takes a list of IPv4 addresses. If the `EmitDNS=` option is enabled but no servers configured, the servers are automatically propagated from an \"uplink\" interface that has appropriate servers set. The \"uplink\" interface is determined by the default route of the system with the highest priority. Note that this information is acquired at the time the lease is handed out, and does not take uplink interfaces into account that acquire DNS server information at a later point. If no suitable uplink interface is found the DNS server data from `/etc/resolv.conf` is used. Also, note that the leases are not refreshed if the uplink network configuration changes. To ensure clients regularly acquire the most current uplink DNS server information, it is thus advisable to shorten the DHCP lease time via `MaxLeaseTimeSec=` described above."],
[4,934,"Similar to the `EmitDNS=` and `DNS=` settings described above, these settings configure whether and what server information for the indicate protocol shall be emitted as part of the DHCP lease. The same syntax, propagation semantics and defaults apply as for `EmitDNS=` and `DNS=`."],
[4,935,"The `EmitRouter=` setting takes a boolean value, and configures whether the DHCP lease should contain the router option. The `Router=` setting takes an IPv4 address, and configures the router address to be emitted. When the `Router=` setting is not specified, then the server address will be used for the router option. When the `EmitRouter=` setting is disabled, the `Router=` setting will be ignored. The `EmitRouter=` setting defaults to true, and the `Router=` setting defaults to unset."],
[4,936,"Takes a boolean. Configures whether the DHCP leases handed out to clients shall contain timezone information. Defaults to \"`yes`\". The `Timezone=` setting takes a timezone string (such as \"`Europe/Berlin`\" or \"`UTC`\") to pass to clients. If no explicit timezone is set, the system timezone of the local host is propagated, as determined by the `/etc/localtime` symlink."],
[4,937,"Send a raw option with value via DHCPv4 server. Takes a DHCP option number, data type and data (\"``_`option`_:_`type`_:_`value`_``\"). The option number is an integer in the range 1â€¦254. The type takes one of \"`uint8`\", \"`uint16`\", \"`uint32`\", \"`ipv4address`\", \"`ipv6address`\", or \"`string`\". Special characters in the data string may be escaped using [C-style escapes](https://en.wikipedia.org/wiki/Escape_sequences_in_C#Table_of_escape_sequences). This setting can be specified multiple times. If an empty string is specified, then all options specified earlier are cleared. Defaults to unset."],
[4,938,"Send a vendor option with value via DHCPv4 server. Takes a DHCP option number, data type and data (\"``_`option`_:_`type`_:_`value`_``\"). The option number is an integer in the range 1â€¦254. The type takes one of \"`uint8`\", \"`uint16`\", \"`uint32`\", \"`ipv4address`\", or \"`string`\". Special characters in the data string may be escaped using [C-style escapes](https://en.wikipedia.org/wiki/Escape_sequences_in_C#Table_of_escape_sequences). This setting can be specified multiple times. If an empty string is specified, then all options specified earlier are cleared. Defaults to unset."],
[4,939,"Takes a boolean value. When \"`yes`\", DHCP server socket will be bound to its network interface and all socket communication will be restricted to this interface. Defaults to \"`yes`\", except if `RelayTarget=` is used (see below), in which case it defaults to \"`no`\"."],
[4,940,"Takes an IPv4 address, which must be in the format described in [inet\\_pton(3)](http://man7.org/linux/man-pages/man3/inet_pton.3.html). Turns this DHCP server into a DHCP relay agent. See [RFC 1542](https://tools.ietf.org/html/rfc1542). The address is the address of DHCP server or another relay agent to forward DHCP messages to and from."],
[4,941,"Specifies value for Agent Circuit ID suboption of Relay Agent Information option. Takes a string, which must be in the format \"``string:_`value`_``\", where \"``_`value`_``\" should be replaced with the value of the suboption. Defaults to unset (means no Agent Circuit ID suboption is generated). Ignored if `RelayTarget=` is not specified."],
[4,942,"Specifies value for Agent Remote ID suboption of Relay Agent Information option. Takes a string, which must be in the format \"``string:_`value`_``\", where \"``_`value`_``\" should be replaced with the value of the suboption. Defaults to unset (means no Agent Remote ID suboption is generated). Ignored if `RelayTarget=` is not specified."],
[4,943,"The hardware address of a device to match. This key is mandatory."],
[4,944,"The IPv4 address that should be assigned to the device that was matched with `MACAddress=`. This key is mandatory."],
[4,945,"Takes a boolean. Controls whether a DHCPv6 server is used to acquire IPv6 addresses on the network link when `Managed=` is set to \"`true`\" or if only additional network information can be obtained via DHCPv6 for the network link when `OtherInformation=` is set to \"`true`\". Both settings default to \"`false`\", which means that a DHCPv6 server is not being used."],
[4,946,"Takes a timespan. Configures the IPv6 router lifetime in seconds. The value must be 0 seconds, or between 4 seconds and 9000 seconds. When set to 0, the host is not acting as a router. Defaults to 1800 seconds (30 minutes)."],
[4,947,"Configures IPv6 router preference if `RouterLifetimeSec=` is non-zero. Valid values are \"`high`\", \"`medium`\" and \"`low`\", with \"`normal`\" and \"`default`\" added as synonyms for \"`medium`\" just to make configuration easier. See [RFC 4191](https://tools.ietf.org/html/rfc4191) for details. Defaults to \"`medium`\"."],
[4,948,"Specifies the name or the index of the uplink interface, or one of the special values \"`:none`\" and \"`:auto`\". When emitting DNS servers or search domains is enabled but no servers are specified, the servers configured in the uplink interface will be emitted. When \"`:auto`\", the value specified to the same setting in the \\[DHCPPrefixDelegation\\] section will be used if `DHCPPrefixDelegation=` is enabled, otherwise the link which has a default gateway with the highest priority will be automatically selected. When \"`:none`\", no uplink interface will be selected. Defaults to \"`:auto`\"."],
[4,949,"`DNS=` specifies a list of recursive DNS server IPv6 addresses that are distributed via Router Advertisement messages when `EmitDNS=` is true. `DNS=` also takes special value \"`_link_local`\"; in that case the IPv6 link local address is distributed. If `DNS=` is empty, DNS servers are read from the \\[Network\\] section. If the \\[Network\\] section does not contain any DNS servers either, DNS servers from the uplink interface specified in `UplinkInterface=` will be used. When `EmitDNS=` is false, no DNS server information is sent in Router Advertisement messages. `EmitDNS=` defaults to true."],
[4,950,"A list of DNS search domains distributed via Router Advertisement messages when `EmitDomains=` is true. If `Domains=` is empty, DNS search domains are read from the \\[Network\\] section. If the \\[Network\\] section does not contain any DNS search domains either, DNS search domains from the uplink interface specified in `UplinkInterface=` will be used. When `EmitDomains=` is false, no DNS search domain information is sent in Router Advertisement messages. `EmitDomains=` defaults to true."],
[4,951,"Lifetime in seconds for the DNS server addresses listed in `DNS=` and search domains listed in `Domains=`. Defaults to 3600 seconds (one hour)."],
[4,952,"Takes a boolean to specify whether IPv6 addresses can be autoconfigured with this prefix and whether the prefix can be used for onlink determination. Both settings default to \"`true`\" in order to ease configuration."],
[4,953,"The IPv6 prefix that is to be distributed to hosts. Similarly to configuring static IPv6 addresses, the setting is configured as an IPv6 prefix and its prefix length, separated by a \"`/`\" character. Use multiple \\[IPv6Prefix\\] sections to configure multiple IPv6 prefixes since prefix lifetimes, address autoconfiguration and onlink status may differ from one prefix to another."],
[4,954,"Preferred and valid lifetimes for the prefix measured in seconds. `PreferredLifetimeSec=` defaults to 1800 seconds (30 minutes) and `ValidLifetimeSec=` defaults to 3600 seconds (one hour)."],
[4,955,"Takes a boolean. When true, adds an address from the prefix. Default to false."],
[4,956,"Specifies an optional address generation mode for assigning an address in each prefix. This accepts the same syntax as `Token=` in the \\[IPv6AcceptRA\\] section. If `Assign=` is set to false, then this setting will be ignored. Defaults to unset, which means the EUI-64 algorithm will be used."],
[4,957,"The metric of the prefix route. Takes an unsigned integer in the range 0â€¦4294967295. When unset or set to 0, the kernel's default value is used. This setting is ignored when `Assign=` is false."],
[4,958,"The IPv6 route that is to be distributed to hosts. Similarly to configuring static IPv6 routes, the setting is configured as an IPv6 prefix routes and its prefix route length, separated by a \"`/`\" character. Use multiple \\[IPv6PrefixRoutes\\] sections to configure multiple IPv6 prefix routes."],
[4,959,"Lifetime for the route prefix measured in seconds. `LifetimeSec=` defaults to 3600 seconds (one hour)."],
[4,960,"Takes a boolean. Controls whether the bridge should flood traffic for which an FDB entry is missing and the destination is unknown through this port. When unset, the kernel's default will be used."],
[4,961,"Takes a boolean. Controls whether the bridge should flood traffic for which an MDB entry is missing and the destination is unknown through this port. When unset, the kernel's default will be used."],
[4,962,"Takes a boolean. Multicast to unicast works on top of the multicast snooping feature of the bridge. Which means unicast copies are only delivered to hosts which are interested in it. When unset, the kernel's default will be used."],
[4,963,"Takes a boolean. Configures whether ARP and ND neighbor suppression is enabled for this port. When unset, the kernel's default will be used."],
[4,964,"Takes a boolean. Configures whether MAC address learning is enabled for this port. When unset, the kernel's default will be used."],
[4,965,"Takes a boolean. Configures whether traffic may be sent back out of the port on which it was received. When this flag is false, then the bridge will not forward traffic back out of the receiving port. When unset, the kernel's default will be used."],
[4,966,"Takes a boolean. Configures whether STP Bridge Protocol Data Units will be processed by the bridge port. When unset, the kernel's default will be used."],
[4,967,"Takes a boolean. This flag allows the bridge to immediately stop multicast traffic on a port that receives an IGMP Leave message. It is only used with IGMP snooping if enabled on the bridge. When unset, the kernel's default will be used."],
[4,968,"Takes a boolean. Configures whether a given port is allowed to become a root port. Only used when STP is enabled on the bridge. When unset, the kernel's default will be used."],
[4,969,"Takes a boolean. Configures whether proxy ARP to be enabled on this port. When unset, the kernel's default will be used."],
[4,970,"Takes a boolean. Configures whether proxy ARP to be enabled on this port which meets extended requirements by IEEE 802.11 and Hotspot 2.0 specifications. When unset, the kernel's default will be used."],
[4,971,"Configures this port for having multicast routers attached. A port with a multicast router will receive all multicast traffic. Takes one of \"`no`\" to disable multicast routers on this port, \"`query`\" to let the system detect the presence of routers, \"`permanent`\" to permanently enable multicast traffic forwarding on this port, or \"`temporary`\" to enable multicast routers temporarily on this port, not depending on incoming queries. When unset, the kernel's default will be used."],
[4,972,"Sets the \"cost\" of sending packets of this interface. Each port in a bridge may have a different speed and the cost is used to decide which link to use. Faster interfaces should have lower costs. It is an integer value between 1 and 65535."],
[4,973,"Sets the \"priority\" of sending packets on this interface. Each port in a bridge may have a different priority which is used to decide which link to use. Lower value means higher priority. It is an integer value between 0 to 63. Networkd does not set any default, meaning the kernel default value of 32 is used."],
[4,974,"As in the \\[Network\\] section. This key is mandatory."],
[4,975,"Takes an IP address of the destination VXLAN tunnel endpoint."],
[4,976,"The VLAN ID for the new static MAC table entry. If omitted, no VLAN ID information is appended to the new static MAC table entry."],
[4,977,"The VXLAN Network Identifier (or VXLAN Segment ID) to use to connect to the remote VXLAN tunnel endpoint. Takes a number in the range 1â€¦16777215. Defaults to unset."],
[4,978,"Specifies where the address is associated with. Takes one of \"`use`\", \"`self`\", \"`master`\" or \"`router`\". \"`use`\" means the address is in use. User space can use this option to indicate to the kernel that the fdb entry is in use. \"`self`\" means the address is associated with the port drivers fdb. Usually hardware. \"`master`\" means the address is associated with master devices fdb. \"`router`\" means the destination address is associated with a router. Note that it's valid if the referenced device is a VXLAN type device and has route shortcircuit enabled. Defaults to \"`self`\"."],
[4,979,"Specifies the name or index of the outgoing interface for the VXLAN device driver to reach the remote VXLAN tunnel endpoint. Defaults to unset."],
[4,980,"Specifies the IPv4 or IPv6 multicast group address to add. This setting is mandatory."],
[4,981,"The VLAN ID for the new entry. Valid ranges are 0 (no VLAN) to 4094. Optional, defaults to 0."],
[4,982,"When configured, the specified Manufacturer Usage Descriptions (MUD) URL will be sent in LLDP packets. The syntax and semantics are the same as for `MUDURL=` in the \\[DHCPv4\\] section described above.\n\nThe MUD URLs received via LLDP packets are saved and can be read using the `sd_lldp_neighbor_get_mud_url()` function."],
[4,983,"The bitrate of CAN device in bits per second. The usual SI prefixes (K, M) with the base of 1000 can be used here. Takes a number in the range 1â€¦4294967295."],
[4,984,"Optional sample point in percent with one decimal (e.g. \"`75%`\", \"`87.5%`\") or permille (e.g. \"`875â€°`\"). This will be ignored when `BitRate=` is unspecified."],
[4,985,"Specifies the time quanta, propagation segment, phase buffer segment 1 and 2, and the synchronization jump width, which allow to define the CAN bit-timing in a hardware independent format as proposed by the Bosch CAN 2.0 Specification. `TimeQuantaNSec=` takes a timespan in nanoseconds. `PropagationSegment=`, `PhaseBufferSegment1=`, `PhaseBufferSegment2=`, and `SyncJumpWidth=` take number of time quantum specified in `TimeQuantaNSec=` and must be an unsigned integer in the range 0â€¦4294967295. These settings except for `SyncJumpWidth=` will be ignored when `BitRate=` is specified."],
[4,986,"The bitrate and sample point for the data phase, if CAN-FD is used. These settings are analogous to the `BitRate=` and `SamplePoint=` keys."],
[4,987,"Specifies the time quanta, propagation segment, phase buffer segment 1 and 2, and the synchronization jump width for the data phase, if CAN-FD is used. These settings are analogous to the `TimeQuantaNSec=` or related settings."],
[4,988,"Takes a boolean. When \"`yes`\", CAN-FD mode is enabled for the interface. Note, that a bitrate and optional sample point should also be set for the CAN-FD data phase using the `DataBitRate=` and `DataSamplePoint=` keys, or `DataTimeQuanta=` and related settings."],
[4,989,"Takes a boolean. When \"`yes`\", non-ISO CAN-FD mode is enabled for the interface. When unset, the kernel's default will be used."],
[4,990,"Automatic restart delay time. If set to a non-zero value, a restart of the CAN controller will be triggered automatically in case of a bus-off condition after the specified delay time. Subsecond delays can be specified using decimals (e.g. \"`0.1s`\") or a \"`ms`\" or \"`us`\" postfix. Using \"`infinity`\" or \"`0`\" will turn the automatic restart off. By default automatic restart is disabled."],
[4,991,"Takes a boolean or a termination resistor value in ohm in the range 0â€¦65535. When \"`yes`\", the termination resistor is set to 120 ohm. When \"`no`\" or \"`0`\" is set, the termination resistor is disabled. When unset, the kernel's default will be used."],
[4,992,"Takes a boolean. When \"`yes`\", three samples (instead of one) are used to determine the value of a received bit by majority rule. When unset, the kernel's default will be used."],
[4,993,"Takes a boolean. When \"`yes`\", reporting of CAN bus errors is activated (those include single bit, frame format, and bit stuffing errors, unable to send dominant bit, unable to send recessive bit, bus overload, active error announcement, error occurred on transmission). When unset, the kernel's default will be used. Note: in case of a CAN bus with a single CAN device, sending a CAN frame may result in a huge number of CAN bus errors."],
[4,994,"Takes a boolean. When \"`yes`\", listen-only mode is enabled. When the interface is in listen-only mode, the interface neither transmit CAN frames nor send ACK bit. Listen-only mode is important to debug CAN networks without interfering with the communication or acknowledge the CAN frame. When unset, the kernel's default will be used."],
[4,995,"Takes a boolean. When \"`yes`\", loopback mode is enabled. When the loopback mode is enabled, the interface treats messages transmitted by itself as received messages. The loopback mode is important to debug CAN networks. When unset, the kernel's default will be used."],
[4,996,"Takes a boolean. When \"`yes`\", one-shot mode is enabled. When unset, the kernel's default will be used."],
[4,997,"Takes a boolean. When \"`yes`\", the interface will ignore missing CAN ACKs. When unset, the kernel's default will be used."],
[4,998,"Takes a boolean. When \"`yes`\", the interface will handle the 4bit data length code (DLC). When unset, the kernel's default will be used."],
[4,999,"Takes one of the special values \"`datagram`\" or \"`connected`\". Defaults to unset, and the kernel's default is used.\n\nWhen \"`datagram`\", the Infiniband unreliable datagram (UD) transport is used, and so the interface MTU is equal to the IB L2 MTU minus the IPoIB encapsulation header (4 bytes). For example, in a typical IB fabric with a 2K MTU, the IPoIB MTU will be 2048 - 4 = 2044 bytes.\n\nWhen \"`connected`\", the Infiniband reliable connected (RC) transport is used. Connected mode takes advantage of the connected nature of the IB transport and allows an MTU up to the maximal IP packet size of 64K, which reduces the number of IP packets needed for handling large UDP datagrams, TCP segments, etc and increases the performance for large messages."],
[4,1000,"Takes an boolean value. When true, the kernel ignores multicast groups handled by userspace. Defaults to unset, and the kernel's default is used."],
[4,1001,"Specifies the parent Queueing Discipline (qdisc). Takes one of \"`clsact`\" or \"`ingress`\". This is mandatory."],
[4,1002,"Configures the major number of unique identifier of the qdisc, known as the handle. Takes a hexadecimal number in the range 0x1â€“0xffff. Defaults to unset."],
[4,1003,"Configures the parent Queueing Discipline (qdisc). Takes one of \"`root`\", \"`clsact`\", \"`ingress`\" or a class identifier. The class identifier is specified as the major and minor numbers in hexadecimal in the range 0x1â€“Oxffff separated with a colon (\"`major:minor`\"). Defaults to \"`root`\"."],
[4,1004,"Configures the major number of unique identifier of the qdisc, known as the handle. Takes a hexadecimal number in the range 0x1â€“0xffff. Defaults to unset."],
[4,1005,"Specifies the fixed amount of delay to be added to all packets going out of the interface. Defaults to unset."],
[4,1006,"Specifies the chosen delay to be added to the packets outgoing to the network interface. Defaults to unset."],
[4,1007,"Specifies the maximum number of packets the qdisc may hold queued at a time. An unsigned integer in the range 0â€¦4294967294. Defaults to 1000."],
[4,1008,"Specifies an independent loss probability to be added to the packets outgoing from the network interface. Takes a percentage value, suffixed with \"%\". Defaults to unset."],
[4,1009,"Specifies that the chosen percent of packets is duplicated before queuing them. Takes a percentage value, suffixed with \"%\". Defaults to unset."],
[4,1010,"Configures the parent Queueing Discipline (qdisc). Takes one of \"`root`\", \"`clsact`\", \"`ingress`\" or a class identifier. The class identifier is specified as the major and minor numbers in hexadecimal in the range 0x1â€“Oxffff separated with a colon (\"`major:minor`\"). Defaults to \"`root`\"."],
[4,1011,"Configures the major number of unique identifier of the qdisc, known as the handle. Takes a hexadecimal number in the range 0x1â€“0xffff. Defaults to unset."],
[4,1012,"Specifies the latency parameter, which specifies the maximum amount of time a packet can sit in the Token Bucket Filter (TBF). Defaults to unset."],
[4,1013,"Takes the number of bytes that can be queued waiting for tokens to become available. When the size is suffixed with K, M, or G, it is parsed as Kilobytes, Megabytes, or Gigabytes, respectively, to the base of 1024. Defaults to unset."],
[4,1014,"Specifies the size of the bucket. This is the maximum amount of bytes that tokens can be available for instantaneous transfer. When the size is suffixed with K, M, or G, it is parsed as Kilobytes, Megabytes, or Gigabytes, respectively, to the base of 1024. Defaults to unset."],
[4,1015,"Specifies the device specific bandwidth. When suffixed with K, M, or G, the specified bandwidth is parsed as Kilobits, Megabits, or Gigabits, respectively, to the base of 1000. Defaults to unset."],
[4,1016,"The Minimum Packet Unit (MPU) determines the minimal token usage (specified in bytes) for a packet. When suffixed with K, M, or G, the specified size is parsed as Kilobytes, Megabytes, or Gigabytes, respectively, to the base of 1024. Defaults to zero."],
[4,1017,"Takes the maximum depletion rate of the bucket. When suffixed with K, M, or G, the specified size is parsed as Kilobits, Megabits, or Gigabits, respectively, to the base of 1000. Defaults to unset."],
[4,1018,"Specifies the size of the peakrate bucket. When suffixed with K, M, or G, the specified size is parsed as Kilobytes, Megabytes, or Gigabytes, respectively, to the base of 1024. Defaults to unset."],
[4,1019,"Configures the parent Queueing Discipline (qdisc). Takes one of \"`root`\", \"`clsact`\", \"`ingress`\" or a class identifier. The class identifier is specified as the major and minor numbers in hexadecimal in the range 0x1â€“Oxffff separated with a colon (\"`major:minor`\"). Defaults to \"`root`\"."],
[4,1020,"Configures the major number of unique identifier of the qdisc, known as the handle. Takes a hexadecimal number in the range 0x1â€“0xffff. Defaults to unset."],
[4,1021,"Specifies the hard limit on the queue size in number of packets. When this limit is reached, incoming packets are dropped. An unsigned integer in the range 1â€¦4294967294. Defaults to unset and kernel's default is used."],
[4,1022,"Configures the parent Queueing Discipline (qdisc). Takes one of \"`root`\", \"`clsact`\", \"`ingress`\" or a class identifier. The class identifier is specified as the major and minor numbers in hexadecimal in the range 0x1â€“Oxffff separated with a colon (\"`major:minor`\"). Defaults to \"`root`\"."],
[4,1023,"Configures the major number of unique identifier of the qdisc, known as the handle. Takes a hexadecimal number in the range 0x1â€“0xffff. Defaults to unset."],
[4,1024,"Specifies the hard limit on the queue size in number of packets. When this limit is reached, incoming packets are dropped. An unsigned integer ranges 1 to 4294967294. Defaults to unset and kernel's default is used."],
[4,1025,"Configures the parent Queueing Discipline (qdisc). Takes one of \"`root`\", \"`clsact`\", \"`ingress`\" or a class identifier. The class identifier is specified as the major and minor numbers in hexadecimal in the range 0x1â€“Oxffff separated with a colon (\"`major:minor`\"). Defaults to \"`root`\"."],
[4,1026,"Configures the major number of unique identifier of the qdisc, known as the handle. Takes a hexadecimal number in the range 0x1â€“0xffff. Defaults to unset."],
[4,1027,"Specifies the hard limit on the queue size in number of packets. When this limit is reached, incoming packets are dropped. An unsigned integer in the range 0â€¦4294967294. Defaults to unset and kernel's default is used."],
[4,1028,"Configures the parent Queueing Discipline (qdisc). Takes one of \"`root`\", \"`clsact`\", \"`ingress`\" or a class identifier. The class identifier is specified as the major and minor numbers in hexadecimal in the range 0x1â€“Oxffff separated with a colon (\"`major:minor`\"). Defaults to \"`root`\"."],
[4,1029,"Configures the major number of unique identifier of the qdisc, known as the handle. Takes a hexadecimal number in the range 0x1â€“0xffff. Defaults to unset."],
[4,1030,"Specifies the interval in seconds for queue algorithm perturbation. Defaults to unset."],
[4,1031,"Configures the parent Queueing Discipline (qdisc). Takes one of \"`root`\", \"`clsact`\", \"`ingress`\" or a class identifier. The class identifier is specified as the major and minor numbers in hexadecimal in the range 0x1â€“Oxffff separated with a colon (\"`major:minor`\"). Defaults to \"`root`\"."],
[4,1032,"Configures the major number of unique identifier of the qdisc, known as the handle. Takes a hexadecimal number in the range 0x1â€“0xffff. Defaults to unset."],
[4,1033,"Specifies the hard limit in bytes on the FIFO buffer size. The size limit prevents overflow in case the kernel is unable to dequeue packets as quickly as it receives them. When this limit is reached, incoming packets are dropped. When suffixed with K, M, or G, the specified size is parsed as Kilobytes, Megabytes, or Gigabytes, respectively, to the base of 1024. Defaults to unset and kernel default is used."],
[4,1034,"Configures the parent Queueing Discipline (qdisc). Takes one of \"`root`\", \"`clsact`\", \"`ingress`\" or a class identifier. The class identifier is specified as the major and minor numbers in hexadecimal in the range 0x1â€“Oxffff separated with a colon (\"`major:minor`\"). Defaults to \"`root`\"."],
[4,1035,"Configures the major number of unique identifier of the qdisc, known as the handle. Takes a hexadecimal number in the range 0x1â€“0xffff. Defaults to unset."],
[4,1036,"Specifies the hard limit on the number of packets in the FIFO queue. The size limit prevents overflow in case the kernel is unable to dequeue packets as quickly as it receives them. When this limit is reached, incoming packets are dropped. An unsigned integer in the range 0â€¦4294967294. Defaults to unset and kernel's default is used."],
[4,1037,"Configures the parent Queueing Discipline (qdisc). Takes one of \"`root`\", \"`clsact`\", \"`ingress`\" or a class identifier. The class identifier is specified as the major and minor numbers in hexadecimal in the range 0x1â€“Oxffff separated with a colon (\"`major:minor`\"). Defaults to \"`root`\"."],
[4,1038,"Configures the major number of unique identifier of the qdisc, known as the handle. Takes a hexadecimal number in the range 0x1â€“0xffff. Defaults to unset."],
[4,1039,"As in \\[PFIFO\\] section."],
[4,1040,"Configures the parent Queueing Discipline (qdisc). Takes one of \"`root`\", \"`clsact`\", \"`ingress`\" or a class identifier. The class identifier is specified as the major and minor numbers in hexadecimal in the range 0x1â€“Oxffff separated with a colon (\"`major:minor`\"). Defaults to \"`root`\"."],
[4,1041,"Configures the major number of unique identifier of the qdisc, known as the handle. Takes a hexadecimal number in the range 0x1â€“0xffff. Defaults to unset."],
[4,1042,"Configures the parent Queueing Discipline (qdisc). Takes one of \"`root`\", \"`clsact`\", \"`ingress`\" or a class identifier. The class identifier is specified as the major and minor numbers in hexadecimal in the range 0x1â€“Oxffff separated with a colon (\"`major:minor`\"). Defaults to \"`root`\"."],
[4,1043,"Configures the major number of unique identifier of the qdisc, known as the handle. Takes a hexadecimal number in the range 0x1â€“0xffff. Defaults to unset."],
[4,1044,"Specifies the shaper bandwidth. When suffixed with K, M, or G, the specified size is parsed as Kilobits, Megabits, or Gigabits, respectively, to the base of 1000. Defaults to unset and kernel's default is used."],
[4,1045,"Takes a boolean value. Enables automatic capacity estimation based on traffic arriving at this qdisc. This is most likely to be useful with cellular links, which tend to change quality randomly. If this setting is enabled, the `Bandwidth=` setting is used as an initial estimate. Defaults to unset, and the kernel's default is used."],
[4,1046,"Specifies that bytes to be addeded to the size of each packet. Bytes may be negative. Takes an integer in the range -64â€¦256. Defaults to unset and kernel's default is used."],
[4,1047,"Rounds each packet (including overhead) up to the specified bytes. Takes an integer in the range 1â€¦256. Defaults to unset and kernel's default is used."],
[4,1048,"Takes one of \"`none`\", \"`atm`\", or \"`ptm`\". Specifies the compensation mode for overhead calculation. When \"`none`\", no compensation is taken into account. When \"`atm`\", enables the compensation for ATM cell framing, which is normally found on ADSL links. When \"`ptm`\", enables the compensation for PTM encoding, which is normally found on VDSL2 links and uses a 64b/65b encoding scheme. Defaults to unset and the kernel's default is used."],
[4,1049,"Takes a boolean value. When true, the packet size reported by the Linux kernel will be used, instead of the underlying IP packet size. Defaults to unset, and the kernel's default is used."],
[4,1050,"CAKE places packets from different flows into different queues, then packets from each queue are delivered fairly. This specifies whether the fairness is based on source address, destination address, individual flows, or any combination of those. The available values are:\n\n`none`[Â¶](#none \"Permalink to this term\")\n\nThe flow isolation is disabled, and all traffic passes through a single queue.\n\n`src-host`[Â¶](#src-host \"Permalink to this term\")\n\nFlows are defined only by source address. Equivalnet to the \"`srchost`\" option for **tc qdisc** command. See also [tc-cake(8)](http://man7.org/linux/man-pages/man8/tc-cake.8.html).\n\n`dst-host`[Â¶](#dst-host \"Permalink to this term\")\n\nFlows are defined only by destination address. Equivalnet to the \"`srchost`\" option for **tc qdisc** command. See also [tc-cake(8)](http://man7.org/linux/man-pages/man8/tc-cake.8.html).\n\n`hosts`[Â¶](#hosts \"Permalink to this term\")\n\nFlows are defined by source-destination host pairs. Equivalent to the same option for **tc qdisc** command. See also [tc-cake(8)](http://man7.org/linux/man-pages/man8/tc-cake.8.html).\n\n`flows`[Â¶](#flows \"Permalink to this term\")\n\nFlows are defined by the entire 5-tuple of source address, destination address, transport protocol, source port and destination port. Equivalent to the same option for **tc qdisc** command. See also [tc-cake(8)](http://man7.org/linux/man-pages/man8/tc-cake.8.html).\n\n`dual-src-host`[Â¶](#dual-src-host \"Permalink to this term\")\n\nFlows are defined by the 5-tuple (see \"`flows`\" in the above), and fairness is applied first over source addresses, then over individual flows. Equivalnet to the \"`dual-srchost`\" option for **tc qdisc** command. See also [tc-cake(8)](http://man7.org/linux/man-pages/man8/tc-cake.8.html).\n\n`dual-dst-host`[Â¶](#dual-dst-host \"Permalink to this term\")\n\nFlows are defined by the 5-tuple (see \"`flows`\" in the above), and fairness is applied first over destination addresses, then over individual flows. Equivalnet to the \"`dual-dsthost`\" option for **tc qdisc** command. See also [tc-cake(8)](http://man7.org/linux/man-pages/man8/tc-cake.8.html).\n\n`triple`[Â¶](#triple \"Permalink to this term\")\n\nFlows are defined by the 5-tuple (see \"`flows`\"), and fairness is applied over source and destination addresses, and also over individual flows. Equivalnet to the \"`triple-isolate`\" option for **tc qdisc** command. See also [tc-cake(8)](http://man7.org/linux/man-pages/man8/tc-cake.8.html).\n\nDefaults to unset and the kernel's default is used."],
[4,1051,"The flow isolation is disabled, and all traffic passes through a single queue."],
[4,1052,"Flows are defined only by source address. Equivalnet to the \"`srchost`\" option for **tc qdisc** command. See also [tc-cake(8)](http://man7.org/linux/man-pages/man8/tc-cake.8.html)."],
[4,1053,"Flows are defined only by destination address. Equivalnet to the \"`srchost`\" option for **tc qdisc** command. See also [tc-cake(8)](http://man7.org/linux/man-pages/man8/tc-cake.8.html)."],
[4,1054,"Flows are defined by source-destination host pairs. Equivalent to the same option for **tc qdisc** command. See also [tc-cake(8)](http://man7.org/linux/man-pages/man8/tc-cake.8.html)."],
[4,1055,"Flows are defined by the entire 5-tuple of source address, destination address, transport protocol, source port and destination port. Equivalent to the same option for **tc qdisc** command. See also [tc-cake(8)](http://man7.org/linux/man-pages/man8/tc-cake.8.html)."],
[4,1056,"Flows are defined by the 5-tuple (see \"`flows`\" in the above), and fairness is applied first over source addresses, then over individual flows. Equivalnet to the \"`dual-srchost`\" option for **tc qdisc** command. See also [tc-cake(8)](http://man7.org/linux/man-pages/man8/tc-cake.8.html)."],
[4,1057,"Flows are defined by the 5-tuple (see \"`flows`\" in the above), and fairness is applied first over destination addresses, then over individual flows. Equivalnet to the \"`dual-dsthost`\" option for **tc qdisc** command. See also [tc-cake(8)](http://man7.org/linux/man-pages/man8/tc-cake.8.html)."],
[4,1058,"Flows are defined by the 5-tuple (see \"`flows`\"), and fairness is applied over source and destination addresses, and also over individual flows. Equivalnet to the \"`triple-isolate`\" option for **tc qdisc** command. See also [tc-cake(8)](http://man7.org/linux/man-pages/man8/tc-cake.8.html)."],
[4,1059,"Takes a boolean value. When true, CAKE performs a NAT lookup before applying flow-isolation rules, to determine the true addresses and port numbers of the packet, to improve fairness between hosts inside the NAT. This has no practical effect when `FlowIsolationMode=` is \"`none`\" or \"`flows`\", or if NAT is performed on a different host. Defaults to unset, and the kernel's default is used."],
[4,1060,"CAKE divides traffic into \"`tins`\", and each tin has its own independent set of flow-isolation queues, bandwidth threshold, and priority. This specifies the preset of tin profiles. The available values are:\n\n`besteffort`[Â¶](#besteffort \"Permalink to this term\")\n\nDisables priority queueing by placing all traffic in one tin.\n\n`precedence`[Â¶](#precedence \"Permalink to this term\")\n\nEnables priority queueing based on the legacy interpretation of TOS \"`Precedence`\" field. Use of this preset on the modern Internet is firmly discouraged.\n\n`diffserv8`[Â¶](#diffserv8 \"Permalink to this term\")\n\nEnables priority queueing based on the Differentiated Service (\"`DiffServ`\") field with eight tins: Background Traffic, High Throughput, Best Effort, Video Streaming, Low Latency Transactions, Interactive Shell, Minimum Latency, and Network Control.\n\n`diffserv4`[Â¶](#diffserv4 \"Permalink to this term\")\n\nEnables priority queueing based on the Differentiated Service (\"`DiffServ`\") field with four tins: Background Traffic, Best Effort, Streaming Media, and Latency Sensitive.\n\n`diffserv3`[Â¶](#diffserv3 \"Permalink to this term\")\n\nEnables priority queueing based on the Differentiated Service (\"`DiffServ`\") field with three tins: Background Traffic, Best Effort, and Latency Sensitive.\n\nDefaults to unset, and the kernel's default is used."],
[4,1061,"Disables priority queueing by placing all traffic in one tin."],
[4,1062,"Enables priority queueing based on the legacy interpretation of TOS \"`Precedence`\" field. Use of this preset on the modern Internet is firmly discouraged."],
[4,1063,"Enables priority queueing based on the Differentiated Service (\"`DiffServ`\") field with eight tins: Background Traffic, High Throughput, Best Effort, Video Streaming, Low Latency Transactions, Interactive Shell, Minimum Latency, and Network Control."],
[4,1064,"Enables priority queueing based on the Differentiated Service (\"`DiffServ`\") field with four tins: Background Traffic, Best Effort, Streaming Media, and Latency Sensitive."],
[4,1065,"Enables priority queueing based on the Differentiated Service (\"`DiffServ`\") field with three tins: Background Traffic, Best Effort, and Latency Sensitive."],
[4,1066,"Takes an integer in the range 1â€¦4294967295. When specified, firewall-mark-based overriding of CAKE's tin selection is enabled. Defaults to unset, and the kernel's default is used."],
[4,1067,"Takes a boolean value. When true, CAKE clears the DSCP fields, except for ECN bits, of any packet passing through CAKE. Defaults to unset, and the kernel's default is used."],
[4,1068,"Takes a boolean value. When true, CAKE will split General Segmentation Offload (GSO) super-packets into their on-the-wire components and dequeue them individually. Defaults to unset, and the kernel's default is used."],
[4,1069,"Configures the parent Queueing Discipline (qdisc). Takes one of \"`root`\", \"`clsact`\", \"`ingress`\" or a class identifier. The class identifier is specified as the major and minor numbers in hexadecimal in the range 0x1â€“Oxffff separated with a colon (\"`major:minor`\"). Defaults to \"`root`\"."],
[4,1070,"Configures the major number of unique identifier of the qdisc, known as the handle. Takes a hexadecimal number in the range 0x1â€“0xffff. Defaults to unset."],
[4,1071,"Specifies the hard limit on the queue size in number of packets. When this limit is reached, incoming packets are dropped. An unsigned integer in the range 0â€¦4294967294. Defaults to unset and kernel's default is used."],
[4,1072,"Takes a timespan. Specifies the acceptable minimum standing/persistent queue delay. Defaults to unset and kernel's default is used."],
[4,1073,"Takes a timespan. This is used to ensure that the measured minimum delay does not become too stale. Defaults to unset and kernel's default is used."],
[4,1074,"Takes a boolean. This can be used to mark packets instead of dropping them. Defaults to unset and kernel's default is used."],
[4,1075,"Takes a timespan. This sets a threshold above which all packets are marked with ECN Congestion Experienced (CE). Defaults to unset and kernel's default is used."],
[4,1076,"Configures the parent Queueing Discipline (qdisc). Takes one of \"`root`\", \"`clsact`\", \"`ingress`\" or a class identifier. The class identifier is specified as the major and minor numbers in hexadecimal in the range 0x1â€“Oxffff separated with a colon (\"`major:minor`\"). Defaults to \"`root`\"."],
[4,1077,"Configures the major number of unique identifier of the qdisc, known as the handle. Takes a hexadecimal number in the range 0x1â€“0xffff. Defaults to unset."],
[4,1078,"Configures the parent Queueing Discipline (qdisc). Takes one of \"`root`\", or a qdisc identifier. The qdisc identifier is specified as the major and minor numbers in hexadecimal in the range 0x1â€“Oxffff separated with a colon (\"`major:minor`\"). Defaults to \"`root`\"."],
[4,1079,"Configures the unique identifier of the class. It is specified as the major and minor numbers in hexadecimal in the range 0x1â€“Oxffff separated with a colon (\"`major:minor`\"). Defaults to unset."],
[4,1080,"Specifies the amount of bytes a flow is allowed to dequeue before the scheduler moves to the next class. When suffixed with K, M, or G, the specified size is parsed as Kilobytes, Megabytes, or Gigabytes, respectively, to the base of 1024. Defaults to the MTU of the interface."],
[4,1081,"Configures the parent Queueing Discipline (qdisc). Takes one of \"`root`\", \"`clsact`\", \"`ingress`\" or a class identifier. The class identifier is specified as the major and minor numbers in hexadecimal in the range 0x1â€“Oxffff separated with a colon (\"`major:minor`\"). Defaults to \"`root`\"."],
[4,1082,"Configures the major number of unique identifier of the qdisc, known as the handle. Takes a hexadecimal number in the range 0x1â€“0xffff. Defaults to unset."],
[4,1083,"Specifies the number of bands. An unsigned integer in the range 1â€¦16. This value has to be at least large enough to cover the strict bands specified through the `StrictBands=` and bandwidth-sharing bands specified in `QuantumBytes=`."],
[4,1084,"Specifies the number of bands that should be created in strict mode. An unsigned integer in the range 1â€¦16."],
[4,1085,"Specifies the white-space separated list of quantum used in band-sharing bands. When suffixed with K, M, or G, the specified size is parsed as Kilobytes, Megabytes, or Gigabytes, respectively, to the base of 1024. This setting can be specified multiple times. If an empty string is assigned, then the all previous assignments are cleared."],
[4,1086,"The priority map maps the priority of a packet to a band. The argument is a whitespace separated list of numbers. The first number indicates which band the packets with priority 0 should be put to, the second is for priority 1, and so on. There can be up to 16 numbers in the list. If there are fewer, the default band that traffic with one of the unmentioned priorities goes to is the last one. Each band number must be in the range 0â€¦255. This setting can be specified multiple times. If an empty string is assigned, then the all previous assignments are cleared."],
[4,1087,"Configures the parent Queueing Discipline (qdisc). Takes one of \"`root`\", \"`clsact`\", \"`ingress`\" or a class identifier. The class identifier is specified as the major and minor numbers in hexadecimal in the range 0x1â€“Oxffff separated with a colon (\"`major:minor`\"). Defaults to \"`root`\"."],
[4,1088,"Configures the major number of unique identifier of the qdisc, known as the handle. Takes a hexadecimal number in the range 0x1â€“0xffff. Defaults to unset."],
[4,1089,"Specifies the number of virtual queues. Takes an integer in the range 1â€¦16. Defaults to unset and kernel's default is used."],
[4,1090,"Specifies the number of default virtual queue. This must be less than `VirtualQueue=`. Defaults to unset and kernel's default is used."],
[4,1091,"Takes a boolean. It turns on the RIO-like buffering scheme. Defaults to unset and kernel's default is used."],
[4,1092,"Configures the parent Queueing Discipline (qdisc). Takes one of \"`root`\", \"`clsact`\", \"`ingress`\" or a class identifier. The class identifier is specified as the major and minor numbers in hexadecimal in the range 0x1â€“Oxffff separated with a colon (\"`major:minor`\"). Defaults to \"`root`\"."],
[4,1093,"Configures the major number of unique identifier of the qdisc, known as the handle. Takes a hexadecimal number in the range 0x1â€“0xffff. Defaults to unset."],
[4,1094,"Specifies the hard limit on the real queue size. When this limit is reached, incoming packets are dropped. Defaults to unset and kernel's default is used."],
[4,1095,"Specifies the limit on the total number of bytes that can be queued in this FQ-CoDel instance. When suffixed with K, M, or G, the specified size is parsed as Kilobytes, Megabytes, or Gigabytes, respectively, to the base of 1024. Defaults to unset and kernel's default is used."],
[4,1096,"Specifies the number of flows into which the incoming packets are classified. Defaults to unset and kernel's default is used."],
[4,1097,"Takes a timespan. Specifies the acceptable minimum standing/persistent queue delay. Defaults to unset and kernel's default is used."],
[4,1098,"Takes a timespan. This is used to ensure that the measured minimum delay does not become too stale. Defaults to unset and kernel's default is used."],
[4,1099,"Specifies the number of bytes used as the \"deficit\" in the fair queuing algorithm timespan. When suffixed with K, M, or G, the specified size is parsed as Kilobytes, Megabytes, or Gigabytes, respectively, to the base of 1024. Defaults to unset and kernel's default is used."],
[4,1100,"Takes a boolean. This can be used to mark packets instead of dropping them. Defaults to unset and kernel's default is used."],
[4,1101,"Takes a timespan. This sets a threshold above which all packets are marked with ECN Congestion Experienced (CE). Defaults to unset and kernel's default is used."],
[4,1102,"Configures the parent Queueing Discipline (qdisc). Takes one of \"`root`\", \"`clsact`\", \"`ingress`\" or a class identifier. The class identifier is specified as the major and minor numbers in hexadecimal in the range 0x1â€“Oxffff separated with a colon (\"`major:minor`\"). Defaults to \"`root`\"."],
[4,1103,"Configures the major number of unique identifier of the qdisc, known as the handle. Takes a hexadecimal number in the range 0x1â€“0xffff. Defaults to unset."],
[4,1104,"Specifies the hard limit on the real queue size. When this limit is reached, incoming packets are dropped. Defaults to unset and kernel's default is used."],
[4,1105,"Specifies the hard limit on the maximum number of packets queued per flow. Defaults to unset and kernel's default is used."],
[4,1106,"Specifies the credit per dequeue RR round, i.e. the amount of bytes a flow is allowed to dequeue at once. When suffixed with K, M, or G, the specified size is parsed as Kilobytes, Megabytes, or Gigabytes, respectively, to the base of 1024. Defaults to unset and kernel's default is used."],
[4,1107,"Specifies the initial sending rate credit, i.e. the amount of bytes a new flow is allowed to dequeue initially. When suffixed with K, M, or G, the specified size is parsed as Kilobytes, Megabytes, or Gigabytes, respectively, to the base of 1024. Defaults to unset and kernel's default is used."],
[4,1108,"Specifies the maximum sending rate of a flow. When suffixed with K, M, or G, the specified size is parsed as Kilobits, Megabits, or Gigabits, respectively, to the base of 1000. Defaults to unset and kernel's default is used."],
[4,1109,"Specifies the size of the hash table used for flow lookups. Defaults to unset and kernel's default is used."],
[4,1110,"Takes an unsigned integer. For packets not owned by a socket, fq is able to mask a part of hash and reduce number of buckets associated with the traffic. Defaults to unset and kernel's default is used."],
[4,1111,"Takes a boolean, and enables or disables flow pacing. Defaults to unset and kernel's default is used."],
[4,1112,"Takes a timespan. This sets a threshold above which all packets are marked with ECN Congestion Experienced (CE). Defaults to unset and kernel's default is used."],
[4,1113,"Configures the parent Queueing Discipline (qdisc). Takes one of \"`root`\", \"`clsact`\", \"`ingress`\" or a class identifier. The class identifier is specified as the major and minor numbers in hexadecimal in the range 0x1â€“Oxffff separated with a colon (\"`major:minor`\"). Defaults to \"`root`\"."],
[4,1114,"Configures the major number of unique identifier of the qdisc, known as the handle. Takes a hexadecimal number in the range 0x1â€“0xffff. Defaults to unset."],
[4,1115,"Specifies the interface ID \"`N`\" of teql. Defaults to \"`0`\". Note that when teql is used, currently, the module `sch_teql` with `max_equalizers=N+1` option must be loaded before **systemd-networkd** is started."],
[4,1116,"Configures the parent Queueing Discipline (qdisc). Takes one of \"`root`\", \"`clsact`\", \"`ingress`\" or a class identifier. The class identifier is specified as the major and minor numbers in hexadecimal in the range 0x1â€“Oxffff separated with a colon (\"`major:minor`\"). Defaults to \"`root`\"."],
[4,1117,"Configures the major number of unique identifier of the qdisc, known as the handle. Takes a hexadecimal number in the range 0x1â€“0xffff. Defaults to unset."],
[4,1118,"Takes the minor id in hexadecimal of the default class. Unclassified traffic gets sent to the class. Defaults to unset."],
[4,1119,"Takes an unsigned integer. The DRR quantums are calculated by dividing the value configured in `Rate=` by `RateToQuantum=`."],
[4,1120,"Configures the parent Queueing Discipline (qdisc). Takes one of \"`root`\", or a qdisc identifier. The qdisc identifier is specified as the major and minor numbers in hexadecimal in the range 0x1â€“Oxffff separated with a colon (\"`major:minor`\"). Defaults to \"`root`\"."],
[4,1121,"Configures the unique identifier of the class. It is specified as the major and minor numbers in hexadecimal in the range 0x1â€“Oxffff separated with a colon (\"`major:minor`\"). Defaults to unset."],
[4,1122,"Specifies the priority of the class. In the round-robin process, classes with the lowest priority field are tried for packets first."],
[4,1123,"Specifies how many bytes to serve from leaf at once. When suffixed with K, M, or G, the specified size is parsed as Kilobytes, Megabytes, or Gigabytes, respectively, to the base of 1024."],
[4,1124,"Specifies the maximum packet size we create. When suffixed with K, M, or G, the specified size is parsed as Kilobytes, Megabytes, or Gigabytes, respectively, to the base of 1024."],
[4,1125,"Takes an unsigned integer which specifies per-packet size overhead used in rate computations. When suffixed with K, M, or G, the specified size is parsed as Kilobytes, Megabytes, or Gigabytes, respectively, to the base of 1024."],
[4,1126,"Specifies the maximum rate this class and all its children are guaranteed. When suffixed with K, M, or G, the specified size is parsed as Kilobits, Megabits, or Gigabits, respectively, to the base of 1000. This setting is mandatory."],
[4,1127,"Specifies the maximum rate at which a class can send, if its parent has bandwidth to spare. When suffixed with K, M, or G, the specified size is parsed as Kilobits, Megabits, or Gigabits, respectively, to the base of 1000. When unset, the value specified with `Rate=` is used."],
[4,1128,"Specifies the maximum bytes burst which can be accumulated during idle period. When suffixed with K, M, or G, the specified size is parsed as Kilobytes, Megabytes, or Gigabytes, respectively, to the base of 1024."],
[4,1129,"Specifies the maximum bytes burst for ceil which can be accumulated during idle period. When suffixed with K, M, or G, the specified size is parsed as Kilobytes, Megabytes, or Gigabytes, respectively, to the base of 1024."],
[4,1130,"Configures the parent Queueing Discipline (qdisc). Takes one of \"`root`\", \"`clsact`\", \"`ingress`\" or a class identifier. The class identifier is specified as the major and minor numbers in hexadecimal in the range 0x1â€“Oxffff separated with a colon (\"`major:minor`\"). Defaults to \"`root`\"."],
[4,1131,"Configures the major number of unique identifier of the qdisc, known as the handle. Takes a hexadecimal number in the range 0x1â€“0xffff. Defaults to unset."],
[4,1132,"Specifies the hard limit on the queue size in number of packets. When this limit is reached, incoming packets are dropped. An unsigned integer in the range 0â€¦4294967294. Defaults to unset and kernel's default is used."],
[4,1133,"Configures the parent Queueing Discipline (qdisc). Takes one of \"`root`\", \"`clsact`\", \"`ingress`\" or a class identifier. The class identifier is specified as the major and minor numbers in hexadecimal in the range 0x1â€“Oxffff separated with a colon (\"`major:minor`\"). Defaults to \"`root`\"."],
[4,1134,"Configures the major number of unique identifier of the qdisc, known as the handle. Takes a hexadecimal number in the range 0x1â€“0xffff. Defaults to unset."],
[4,1135,"Configures the parent Queueing Discipline (qdisc). Takes one of \"`root`\", or a qdisc identifier. The qdisc identifier is specified as the major and minor numbers in hexadecimal in the range 0x1â€“Oxffff separated with a colon (\"`major:minor`\"). Defaults to \"`root`\"."],
[4,1136,"Configures the unique identifier of the class. It is specified as the major and minor numbers in hexadecimal in the range 0x1â€“Oxffff separated with a colon (\"`major:minor`\"). Defaults to unset."],
[4,1137,"Specifies the weight of the class. Takes an integer in the range 1â€¦1023. Defaults to unset in which case the kernel default is used."],
[4,1138,"Specifies the maximum packet size in bytes for the class. When suffixed with K, M, or G, the specified size is parsed as Kilobytes, Megabytes, or Gigabytes, respectively, to the base of 1024. When unset, the kernel default is used."],
[4,1139,"The VLAN ID allowed on the port. This can be either a single ID or a range M-N. Takes an integer in the range 1â€¦4094."],
[4,1140,"The VLAN ID specified here will be used to untag frames on egress. Configuring `EgressUntagged=` implicates the use of `VLAN=` above and will enable the VLAN ID for ingress as well. This can be either a single ID or a range M-N."],
[4,1141,"The Port VLAN ID specified here is assigned to all untagged frames at ingress. `PVID=` can be used only once. Configuring `PVID=` implicates the use of `VLAN=` above and will enable the VLAN ID for ingress as well."],
[2,"ARP","",733,35],
[2,"ActivationPolicy","",741,35],
[2,"ActiveSlave","",790,35],
[2,"AddPrefixRoute","",805,35],
[2,"Address","",767,35],
[2,"AddressAutoconfiguration","",952,35],
[2,"AllMulticast","",735,35],
[2,"AllowList","",889,35],
[2,"AllowPortToBeRoot","",968,35],
[2,"Announce","",904,35],
[2,"Anonymize","",864,35],
[2,"Architecture","",729,35],
[2,"Assign","",905,35],
[2,"AssociatedWith","",978,35],
[2,"AutoJoin","",806,35],
[2,"AutoRateIngress","",1045,35],
[2,"BSSID","",724,35],
[2,"Bands","",1083,35],
[2,"Bandwidth","",1044,35],
[2,"BatmanAdvanced","",788,35],
[2,"BindCarrier","",766,35],
[2,"BindToInterface","",939,35],
[2,"BitRate","",983,35],
[2,"Blackhole","",832,35],
[2,"Bond","",788,35],
[2,"Bridge","",788,35],
[2,"Broadcast","",797,35],
[2,"Buckets","",1109,35],
[2,"BufferBytes","",1128,35],
[2,"BurstBytes","",1014,35],
[2,"BusErrorReporting","",993,35],
[2,"CEThresholdSec","",1075,35],
[2,"CeilBufferBytes","",1129,35],
[2,"CeilRate","",1127,35],
[2,"ClassId","",1079,35],
[2,"ClassicDataLengthCode","",998,35],
[2,"ClientIdentifier","",858,35],
[2,"CompensationMode","",1048,35],
[2,"ConfigureWithoutCarrier","",792,35],
[2,"Cost","",972,35],
[2,"DHCP","",752,35],
[2,"DHCPPrefixDelegation","",785,35],
[2,"DHCPServer","",753,35],
[2,"DHCPv6Client","",928,35],
[2,"DNS","",769,35],
[2,"DNSDefaultRoute","",771,35],
[2,"DNSLifetimeSec","",951,35],
[2,"DNSOverTLS","",761,35],
[2,"DNSSEC","",762,35],
[2,"DNSSECNegativeTrustAnchors","",763,35],
[2,"DUIDRawData","",862,35],
[2,"DUIDType","",861,35],
[2,"DataBitRate","",986,35],
[2,"DataPhaseBufferSegment1","",987,35],
[2,"DataPhaseBufferSegment2","",987,35],
[2,"DataPropagationSegment","",987,35],
[2,"DataSamplePoint","",986,35],
[2,"DataSyncJumpWidth","",987,35],
[2,"DataTimeQuantaNSec","",987,35],
[2,"DefaultClass","",1118,35],
[2,"DefaultLeaseTimeSec","",931,35],
[2,"DefaultRouteOnDevice","",758,35],
[2,"DefaultVirtualQueue","",1090,35],
[2,"DelayJitterSec","",1006,35],
[2,"DelaySec","",1005,35],
[2,"DenyList","",888,35],
[2,"Description","",751,35],
[2,"Destination","",836,35],
[2,"DestinationPort","",820,35],
[2,"Domains","",770,35],
[2,"Driver","",718,35],
[2,"DuplicateAddressDetection","",803,35],
[2,"DuplicateRate","",1009,35],
[2,"ECN","",1074,35],
[2,"EgressUntagged","",1140,35],
[2,"EmitDNS","",933,35],
[2,"EmitDomains","",950,35],
[2,"EmitLLDP","",765,35],
[2,"EmitLPR","",934,35],
[2,"EmitNTP","",934,35],
[2,"EmitPOP3","",934,35],
[2,"EmitRouter","",935,35],
[2,"EmitSIP","",934,35],
[2,"EmitSMTP","",934,35],
[2,"EmitTimezone","",936,35],
[2,"FDMode","",988,35],
[2,"FDNonISO","",989,35],
[2,"FallbackLeaseLifetimeSec","",884,35],
[2,"Family","",823,35],
[2,"FastLeave","",967,35],
[2,"FastOpenNoCookie","",848,35],
[2,"FirewallMark","",814,35],
[2,"Firmware","",730,35],
[2,"FlowIsolationMode","",1050,35],
[2,"FlowLimit","",1105,35],
[2,"Flows","",1096,35],
[2,"From","",812,35],
[2,"Gateway","",768,35],
[2,"GatewayOnLink","",835,35],
[2,"GenericRIO","",1091,35],
[2,"Group","",738,35],
[2,"HairPin","",965,35],
[2,"Handle","",1002,35],
[2,"HomeAddress","",802,35],
[2,"Host","",725,35],
[2,"Hostname","",856,35],
[2,"IAID","",863,35],
[2,"IPForward","",773,35],
[2,"IPMasquerade","",774,35],
[2,"IPProtocol","",821,35],
[2,"IPServiceType","",851,35],
[2,"IPVLAN","",789,35],
[2,"IPVTAP","",789,35],
[2,"IPoIB","",789,35],
[2,"IPv4AcceptLocal","",779,35],
[2,"IPv4LLRoute","",757,35],
[2,"IPv4ProxyARP","",781,35],
[2,"IPv4RouteLocalnet","",780,35],
[2,"IPv6AcceptRA","",776,35],
[2,"IPv6DuplicateAddressDetection","",777,35],
[2,"IPv6HopLimit","",778,35],
[2,"IPv6LinkLocalAddressGenerationMode","",755,35],
[2,"IPv6MTUBytes","",786,35],
[2,"IPv6Preference","",839,35],
[2,"IPv6PrivacyExtensions","",775,35],
[2,"IPv6ProxyNDP","",782,35],
[2,"IPv6ProxyNDPAddress","",783,35],
[2,"IPv6SendRA","",784,35],
[2,"IPv6StableSecretAddress","",756,35],
[2,"Id","",828,35],
[2,"IgnoreCarrierLoss","",793,35],
[2,"IgnoreUserspaceMulticastGroup","",1000,35],
[2,"IncomingInterface","",817,35],
[2,"InitialAdvertisedReceiveWindow","",846,35],
[2,"InitialCongestionWindow","",845,35],
[2,"InitialQuantumBytes","",1107,35],
[2,"IntervalSec","",1073,35],
[2,"InvertRule","",822,35],
[2,"KeepConfiguration","",794,35],
[2,"KeepMaster","",787,35],
[2,"KernelCommandLine","",727,35],
[2,"KernelVersion","",728,35],
[2,"L2TP","",789,35],
[2,"LLDP","",764,35],
[2,"LLMNR","",759,35],
[2,"LPR","",934,35],
[2,"Label","",798,35],
[2,"LatencySec","",1012,35],
[2,"Learning","",964,35],
[2,"LifetimeSec","",959,35],
[2,"LimitBytes","",1013,35],
[2,"LinkLayerAddress","",808,35],
[2,"LinkLocalAddressing","",754,35],
[2,"LinkState","",749,35],
[2,"ListenOnly","",994,35],
[2,"ListenPort","",887,35],
[2,"Loopback","",995,35],
[2,"LossRate","",1008,35],
[2,"MACAddress","",710,35],
[2,"MACSpoofCheck","",746,35],
[2,"MACVLAN","",789,35],
[2,"MACVTAP","",789,35],
[2,"MACsec","",789,35],
[2,"MPUBytes","",1016,35],
[2,"MTUBytes","",732,35],
[2,"MUDURL","",857,35],
[2,"ManageTemporaryAddress","",804,35],
[2,"Managed","",945,35],
[2,"MaxAttempts","",886,35],
[2,"MaxLeaseTimeSec","",931,35],
[2,"MaxPacketBytes","",1138,35],
[2,"MaximumRate","",1108,35],
[2,"MemoryLimitBytes","",1095,35],
[2,"Metric","",838,35],
[2,"Mode","",999,35],
[2,"MultiPathRoute","address[@name] [weight]",853,35],
[2,"Multicast","",734,35],
[2,"MulticastDNS","",760,35],
[2,"MulticastFlood","",961,35],
[2,"MulticastGroupAddress","",980,35],
[2,"MulticastRouter","",971,35],
[2,"MulticastToUnicast","",962,35],
[2,"NAT","",1059,35],
[2,"NTP","",772,35],
[2,"Name","",721,35],
[2,"NeighborSuppression","",963,35],
[2,"NextHop","",854,35],
[2,"OnLink","",831,35],
[2,"OneShot","",996,35],
[2,"OrphanMask","",1110,35],
[2,"OtherInformation","",945,35],
[2,"OutgoingInterface","",818,35],
[2,"OverheadBytes","",1046,35],
[2,"POP3","",934,35],
[2,"PVID","",1141,35],
[2,"Pacing","",1111,35],
[2,"PacketLimit","",1007,35],
[2,"Parent","",1001,35],
[2,"Path","",717,35],
[2,"PeakRate","",1017,35],
[2,"Peer","",796,35],
[2,"PermanentMACAddress","",716,35],
[2,"PerturbPeriodSec","",1030,35],
[2,"PhaseBufferSegment1","",985,35],
[2,"PhaseBufferSegment2","",985,35],
[2,"PoolOffset","",930,35],
[2,"PoolSize","",930,35],
[2,"PreferredLifetime","",799,35],
[2,"PreferredLifetimeSec","",954,35],
[2,"PreferredSource","",841,35],
[2,"Prefix","",810,35],
[2,"PrefixAllowList","",925,35],
[2,"PrefixDelegationHint","",897,35],
[2,"PrefixDenyList","",924,35],
[2,"PresumeAck","",997,35],
[2,"PrimarySlave","",791,35],
[2,"Priority","",816,35],
[2,"PriorityMap","",1086,35],
[2,"PriorityQueueingPreset","",1060,35],
[2,"Promiscuous","",736,35],
[2,"PropagationSegment","",985,35],
[2,"Property","",720,35],
[2,"Protocol","",843,35],
[2,"ProxyARP","",969,35],
[2,"ProxyARPWiFi","",970,35],
[2,"QualityOfService","",744,35],
[2,"QuantumBytes","",1080,35],
[2,"QueryReceiveSideScaling","",747,35],
[2,"QuickAck","",847,35],
[2,"Rate","",1015,35],
[2,"RateToQuantum","",1119,35],
[2,"RelayAgentCircuitId","",941,35],
[2,"RelayAgentRemoteId","",942,35],
[2,"RelayTarget","",940,35],
[2,"RequestBroadcast","",885,35],
[2,"RequestOptions","",865,35],
[2,"RequiredFamilyForOnline","",740,35],
[2,"RequiredForOnline","",739,35],
[2,"RestartSec","",990,35],
[2,"Route","",958,35],
[2,"RouteAllowList","",927,35],
[2,"RouteDenyList","",926,35],
[2,"RouteMTUBytes","",880,35],
[2,"RouteMetric","",801,35],
[2,"RouteTable","num",915,35],
[2,"Router","",935,35],
[2,"RouterAllowList","",923,35],
[2,"RouterDenyList","",922,35],
[2,"RouterLifetimeSec","",946,35],
[2,"RouterPreference","",947,35],
[2,"RoutesToDNS","",870,35],
[2,"RoutesToNTP","",872,35],
[2,"SIP","",934,35],
[2,"SMTP","",934,35],
[2,"SSID","",723,35],
[2,"SamplePoint","",984,35],
[2,"Scope","",800,35],
[2,"SendDecline","",891,35],
[2,"SendHostname","",855,35],
[2,"SendOption","",866,35],
[2,"SendRelease","",890,35],
[2,"SendVendorOption","",867,35],
[2,"ServerAddress","",929,35],
[2,"Source","",837,35],
[2,"SourcePort","",819,35],
[2,"SplitGSO","",1068,35],
[2,"StrictBands","",1084,35],
[2,"SubnetId","",903,35],
[2,"SuppressInterfaceGroup","",826,35],
[2,"SuppressPrefixLength","",825,35],
[2,"SyncJumpWidth","",985,35],
[2,"TCPAdvertisedMaximumSegmentSize","",852,35],
[2,"TTLPropagate","",849,35],
[2,"Table","",815,35],
[2,"TargetSec","",1072,35],
[2,"Termination","",991,35],
[2,"TimeQuantaNSec","",985,35],
[2,"Timezone","",936,35],
[2,"To","",813,35],
[2,"Token","",906,35],
[2,"TripleSampling","",992,35],
[2,"Trust","",748,35],
[2,"Tunnel","",789,35],
[2,"Type","",719,35],
[2,"TypeOfService","",811,35],
[2,"UnicastFlood","",960,35],
[2,"Unmanaged","",737,35],
[2,"UplinkInterface","",902,35],
[2,"Use6RD","",883,35],
[2,"UseAddress","",898,35],
[2,"UseAutonomousPrefix","",920,35],
[2,"UseBPDU","",966,35],
[2,"UseDNS","",869,35],
[2,"UseDelegatedPrefix","",899,35],
[2,"UseDomains","",876,35],
[2,"UseGateway","",881,35],
[2,"UseHostname","",875,35],
[2,"UseMTU","",874,35],
[2,"UseNTP","",871,35],
[2,"UseOnLinkPrefix","",921,35],
[2,"UseRawPacketSize","",1049,35],
[2,"UseRoutePrefix","",919,35],
[2,"UseRoutes","",877,35],
[2,"UseSIP","",873,35],
[2,"UseTimezone","",882,35],
[2,"User","",824,35],
[2,"UserClass","",860,35],
[2,"VLAN","",1139,35],
[2,"VLANId","",743,35],
[2,"VLANProtocol","",745,35],
[2,"VNI","",977,35],
[2,"VRF","",788,35],
[2,"VXLAN","",789,35],
[2,"ValidLifetimeSec","",954,35],
[2,"VendorClass","",896,35],
[2,"VendorClassIdentifier","",859,35],
[2,"VirtualFunction","",742,35],
[2,"VirtualQueues","",1089,35],
[2,"Virtualization","",726,35],
[2,"WLANInterfaceType","",722,35],
[2,"Wash","",1067,35],
[2,"Weight","",1137,35],
[2,"WithoutRA","",901,35],
[2,"Xfrm","",789,35],
[3,36,"systemd.netdev(5)","systemd.netdev â€” Virtual Network Device configuration","systemd.netdev.html"],
[4,1142,"Matches against the hostname or machine ID of the host. See `ConditionHost=` in [systemd.unit(5)](systemd.unit.html#) for details. When prefixed with an exclamation mark (\"`!`\"), the result is negated. If an empty string is assigned, then previously assigned value is cleared."],
[4,1143,"Checks whether the system is executed in a virtualized environment and optionally test whether it is a specific implementation. See `ConditionVirtualization=` in [systemd.unit(5)](systemd.unit.html#) for details. When prefixed with an exclamation mark (\"`!`\"), the result is negated. If an empty string is assigned, then previously assigned value is cleared."],
[4,1144,"Checks whether a specific kernel command line option is set. See `ConditionKernelCommandLine=` in [systemd.unit(5)](systemd.unit.html#) for details. When prefixed with an exclamation mark (\"`!`\"), the result is negated. If an empty string is assigned, then previously assigned value is cleared."],
[4,1145,"Checks whether the kernel version (as reported by **uname -r**) matches a certain expression. See `ConditionKernelVersion=` in [systemd.unit(5)](systemd.unit.html#) for details. When prefixed with an exclamation mark (\"`!`\"), the result is negated. If an empty string is assigned, then previously assigned value is cleared."],
[4,1146,"Checks whether the system is running on a specific architecture. See `ConditionArchitecture=` in [systemd.unit(5)](systemd.unit.html#) for details. When prefixed with an exclamation mark (\"`!`\"), the result is negated. If an empty string is assigned, then previously assigned value is cleared."],
[4,1147,"Checks whether the system is running on a machine with the specified firmware. See `ConditionFirmware=` in [systemd.unit(5)](systemd.unit.html#) for details. When prefixed with an exclamation mark (\"`!`\"), the result is negated. If an empty string is assigned, then previously assigned value is cleared."],
[4,1148,"A free-form description of the netdev."],
[4,1149,"The interface name used when creating the netdev. This setting is compulsory."],
[4,1150,"The netdev kind. This setting is compulsory. See the \"`Supported netdev kinds`\" section for the valid keys."],
[4,1151,"The maximum transmission unit in bytes to set for the device. The usual suffixes K, M, G are supported and are understood to the base of 1024. For \"`tun`\" or \"`tap`\" devices, `MTUBytes=` setting is not currently supported in \\[NetDev\\] section. Please specify it in \\[Link\\] section of corresponding [systemd.network(5)](systemd.network.html#) files."],
[4,1152,"Specifies the MAC address to use for the device, or takes the special value \"`none`\". When \"`none`\", **systemd-networkd** does not request the MAC address for the device, and the kernel will assign a random MAC address. For \"`tun`\", \"`tap`\", or \"`l2tp`\" devices, the `MACAddress=` setting in the \\[NetDev\\] section is not supported and will be ignored. Please specify it in the \\[Link\\] section of the corresponding [systemd.network(5)](systemd.network.html#) file. If this option is not set, \"`vlan`\" device inherits the MAC address of the master interface. For other kind of netdevs, if this option is not set, then the MAC address is generated based on the interface name and the [machine-id(5)](machine-id.html#).\n\nNote, even if \"`none`\" is specified, **systemd-udevd** will assign the persistent MAC address for the device, as `99-default.link` has `MACAddressPolicy=persistent`. So, it is also necessary to create a custom .link file for the device, if the MAC address assignment is not desired."],
[4,1153,"HelloTimeSec specifies the number of seconds between two hello packets sent out by the root bridge and the designated bridges. Hello packets are used to communicate information about the topology throughout the entire bridged local area network."],
[4,1154,"MaxAgeSec specifies the number of seconds of maximum message age. If the last seen (received) hello packet is more than this number of seconds old, the bridge in question will start the takeover procedure in attempt to become the Root Bridge itself."],
[4,1155,"ForwardDelaySec specifies the number of seconds spent in each of the Listening and Learning states before the Forwarding state is entered."],
[4,1156,"This specifies the number of seconds a MAC Address will be kept in the forwarding database after having a packet received from this MAC Address."],
[4,1157,"The priority of the bridge. An integer between 0 and 65535. A lower value means higher priority. The bridge having the lowest priority will be elected as root bridge."],
[4,1158,"A 16-bit bitmask represented as an integer which allows forwarding of link local frames with 802.1D reserved addresses (01:80:C2:00:00:0X). A logical AND is performed between the specified bitmask and the exponentiation of 2^X, the lower nibble of the last octet of the MAC address. For example, a value of 8 would allow forwarding of frames addressed to 01:80:C2:00:00:03 (802.1X PAE)."],
[4,1159,"This specifies the default port VLAN ID of a newly attached bridge port. Set this to an integer in the range 1â€¦4094 or \"`none`\" to disable the PVID."],
[4,1160,"Takes a boolean. This setting controls the IFLA\\_BR\\_MCAST\\_QUERIER option in the kernel. If enabled, the kernel will send general ICMP queries from a zero source address. This feature should allow faster convergence on startup, but it causes some multicast-aware switches to misbehave and disrupt forwarding of multicast packets. When unset, the kernel's default will be used."],
[4,1161,"Takes a boolean. This setting controls the IFLA\\_BR\\_MCAST\\_SNOOPING option in the kernel. If enabled, IGMP snooping monitors the Internet Group Management Protocol (IGMP) traffic between hosts and multicast routers. When unset, the kernel's default will be used."],
[4,1162,"Takes a boolean. This setting controls the IFLA\\_BR\\_VLAN\\_FILTERING option in the kernel. If enabled, the bridge will be started in VLAN-filtering mode. When unset, the kernel's default will be used."],
[4,1163,"Allows setting the protocol used for VLAN filtering. Takes `802.1q` or, `802.1ad`, and defaults to unset and kernel's default is used."],
[4,1164,"Takes a boolean. This enables the bridge's Spanning Tree Protocol (STP). When unset, the kernel's default will be used."],
[4,1165,"Allows changing bridge's multicast Internet Group Management Protocol (IGMP) version. Takes an integer 2 or 3. When unset, the kernel's default will be used."],
[4,1166,"The VLAN ID to use. An integer in the range 0â€¦4094. This setting is compulsory."],
[4,1167,"Allows setting the protocol used for the VLAN interface. Takes \"`802.1q`\" or, \"`802.1ad`\", and defaults to unset and kernel's default is used."],
[4,1168,"Takes a boolean. The Generic VLAN Registration Protocol (GVRP) is a protocol that allows automatic learning of VLANs on a network. When unset, the kernel's default will be used."],
[4,1169,"Takes a boolean. Multiple VLAN Registration Protocol (MVRP) formerly known as GARP VLAN Registration Protocol (GVRP) is a standards-based Layer 2 network protocol, for automatic configuration of VLAN information on switches. It was defined in the 802.1ak amendment to 802.1Q-2005. When unset, the kernel's default will be used."],
[4,1170,"Takes a boolean. The VLAN loose binding mode, in which only the operational state is passed from the parent to the associated VLANs, but the VLAN device state is not changed. When unset, the kernel's default will be used."],
[4,1171,"Takes a boolean. When enabled, the VLAN reorder header is used and VLAN interfaces behave like physical interfaces. When unset, the kernel's default will be used."],
[4,1172,"Defines a mapping of Linux internal packet priority (`SO_PRIORITY`) to VLAN header PCP field for outgoing and incoming frames, respectively. Takes a whitespace-separated list of integer pairs, where each integer must be in the range 1â€¦4294967294, in the format \"`from`\"-\"`to`\", e.g., \"`21-7 45-5`\". Note that \"`from`\" must be greater than or equal to \"`to`\". When unset, the kernel's default will be used."],
[4,1173,"The MACVLAN mode to use. The supported options are \"`private`\", \"`vepa`\", \"`bridge`\", \"`passthru`\", and \"`source`\"."],
[4,1174,"A whitespace-separated list of remote hardware addresses allowed on the MACVLAN. This option only has an effect in source mode. Use full colon-, hyphen- or dot-delimited hexadecimal. This option may appear more than once, in which case the lists are merged. If the empty string is assigned to this option, the list of hardware addresses defined prior to this is reset. Defaults to unset."],
[4,1175,"Specifies the length of the receive queue for broadcast/multicast packets. An unsigned integer in the range 0â€¦4294967294. Defaults to unset."],
[4,1176,"The IPVLAN mode to use. The supported options are \"`L2`\",\"`L3`\" and \"`L3S`\"."],
[4,1177,"The IPVLAN flags to use. The supported options are \"`bridge`\",\"`private`\" and \"`vepa`\"."],
[4,1178,"The VXLAN Network Identifier (or VXLAN Segment ID). Takes a number in the range 1â€¦16777215."],
[4,1179,"Configures destination IP address."],
[4,1180,"Configures local IP address."],
[4,1181,"Configures VXLAN multicast group IP address. All members of a VXLAN must use the same multicast group address."],
[4,1182,"The Type Of Service byte value for a vxlan interface."],
[4,1183,"A fixed Time To Live N on Virtual eXtensible Local Area Network packets. Takes \"`inherit`\" or a number in the range 0â€¦255. 0 is a special value meaning inherit the inner protocol's TTL value. \"`inherit`\" means that it will inherit the outer protocol's TTL value."],
[4,1184,"Takes a boolean. When true, enables dynamic MAC learning to discover remote MAC addresses."],
[4,1185,"The lifetime of Forwarding Database entry learnt by the kernel, in seconds."],
[4,1186,"Configures maximum number of FDB entries."],
[4,1187,"Takes a boolean. When true, bridge-connected VXLAN tunnel endpoint answers ARP requests from the local bridge on behalf of remote Distributed Overlay Virtual Ethernet [(DVOE)](https://en.wikipedia.org/wiki/Distributed_Overlay_Virtual_Ethernet) clients. Defaults to false."],
[4,1188,"Takes a boolean. When true, enables netlink LLADDR miss notifications."],
[4,1189,"Takes a boolean. When true, enables netlink IP address miss notifications."],
[4,1190,"Takes a boolean. When true, route short circuiting is turned on."],
[4,1191,"Takes a boolean. When true, transmitting UDP checksums when doing VXLAN/IPv4 is turned on."],
[4,1192,"Takes a boolean. When true, sending zero checksums in VXLAN/IPv6 is turned on."],
[4,1193,"Takes a boolean. When true, receiving zero checksums in VXLAN/IPv6 is turned on."],
[4,1194,"Takes a boolean. When true, remote transmit checksum offload of VXLAN is turned on."],
[4,1195,"Takes a boolean. When true, remote receive checksum offload in VXLAN is turned on."],
[4,1196,"Takes a boolean. When true, it enables Group Policy VXLAN extension security label mechanism across network peers based on VXLAN. For details about the Group Policy VXLAN, see the [VXLAN Group Policy](https://tools.ietf.org/html/draft-smith-vxlan-group-policy) document. Defaults to false."],
[4,1197,"Takes a boolean. When true, Generic Protocol Extension extends the existing VXLAN protocol to provide protocol typing, OAM, and versioning capabilities. For details about the VXLAN GPE Header, see the [Generic Protocol Extension for VXLAN](https://tools.ietf.org/html/draft-ietf-nvo3-vxlan-gpe-07) document. If destination port is not specified and Generic Protocol Extension is set then default port of 4790 is used. Defaults to false."],
[4,1198,"Configures the default destination UDP port. If the destination port is not specified then Linux kernel default will be used. Set to 4789 to get the IANA assigned value."],
[4,1199,"Configures the source port range for the VXLAN. The kernel assigns the source UDP port based on the flow to help the receiver to do load balancing. When this option is not set, the normal range of local UDP ports is used."],
[4,1200,"Specifies the flow label to use in outgoing packets. The valid range is 0-1048575."],
[4,1201,"Allows setting the IPv4 Do not Fragment (DF) bit in outgoing packets, or to inherit its value from the IPv4 inner header. Takes a boolean value, or \"`inherit`\". Set to \"`inherit`\" if the encapsulated protocol is IPv6. When unset, the kernel's default will be used."],
[4,1202,"Takes a boolean. When true, the vxlan interface is created without any underlying network interface. Defaults to false, which means that a .network file that requests this VXLAN interface using `VXLAN=` is required for the VXLAN to be created."],
[4,1203,"Specifies the Virtual Network Identifier (VNI) to use, a number between 0 and 16777215. This field is mandatory."],
[4,1204,"Specifies the unicast destination IP address to use in outgoing packets."],
[4,1205,"Specifies the TOS value to use in outgoing packets. Takes a number between 1 and 255."],
[4,1206,"Accepts the same values as in the \\[VXLAN\\] section, except that when unset or set to 0, the kernel's default will be used, meaning that packet TTL will be set from `/proc/sys/net/ipv4/ip_default_ttl`."],
[4,1207,"Takes a boolean. When true, specifies that UDP checksum is calculated for transmitted packets over IPv4."],
[4,1208,"Takes a boolean. When true, skip UDP checksum calculation for transmitted packets over IPv6."],
[4,1209,"Takes a boolean. When true, allows incoming UDP packets over IPv6 with zero checksum field."],
[4,1210,"Specifies destination port. Defaults to 6081. If not set or assigned the empty string, the default port of 6081 is used."],
[4,1211,"Specifies the flow label to use in outgoing packets."],
[4,1212,"Accepts the same key as in \\[VXLAN\\] section."],
[4,1213,"Specifies the destination UDP port (in range 1â€¦65535). This is mandatory."],
[4,1214,"Specifies the L3 protocol. Takes one of \"`ipv4`\", \"`ipv6`\", \"`mpls-uc`\" or \"`mpls-mc`\". This is mandatory."],
[4,1215,"Specifies the tunnel identifier. Takes an number in the range 1â€¦4294967295. The value used must match the \"`PeerTunnelId=`\" value being used at the peer. This setting is compulsory."],
[4,1216,"Specifies the peer tunnel id. Takes a number in the range 1â€¦4294967295. The value used must match the \"`TunnelId=`\" value being used at the peer. This setting is compulsory."],
[4,1217,"Specifies the IP address of the remote peer. This setting is compulsory."],
[4,1218,"Specifies the IP address of the local interface. Takes an IP address, or the special values \"`auto`\", \"`static`\", or \"`dynamic`\". When an address is set, then the local interface must have the address. If \"`auto`\", then one of the addresses on the local interface is used. Similarly, if \"`static`\" or \"`dynamic`\" is set, then one of the static or dynamic addresses on the local interface is used. Defaults to \"`auto`\"."],
[4,1219,"Specifies the encapsulation type of the tunnel. Takes one of \"`udp`\" or \"`ip`\"."],
[4,1220,"Specifies the UDP source port to be used for the tunnel. When UDP encapsulation is selected it's mandatory. Ignored when IP encapsulation is selected."],
[4,1221,"Specifies destination port. When UDP encapsulation is selected it's mandatory. Ignored when IP encapsulation is selected."],
[4,1222,"Takes a boolean. When true, specifies that UDP checksum is calculated for transmitted packets over IPv4."],
[4,1223,"Takes a boolean. When true, skip UDP checksum calculation for transmitted packets over IPv6."],
[4,1224,"Takes a boolean. When true, allows incoming UDP packets over IPv6 with zero checksum field."],
[4,1225,"Specifies the name of the session. This setting is compulsory."],
[4,1226,"Specifies the session identifier. Takes an number in the range 1â€¦4294967295. The value used must match the \"`SessionId=`\" value being used at the peer. This setting is compulsory."],
[4,1227,"Specifies the peer session identifier. Takes an number in the range 1â€¦4294967295. The value used must match the \"`PeerSessionId=`\" value being used at the peer. This setting is compulsory."],
[4,1228,"Specifies layer2specific header type of the session. One of \"`none`\" or \"`default`\". Defaults to \"`default`\"."],
[4,1229,"Specifies the port to be used for the MACsec transmit channel. The port is used to make secure channel identifier (SCI). Takes a value between 1 and 65535. Defaults to unset."],
[4,1230,"Takes a boolean. When true, enable encryption. Defaults to unset."],
[4,1231,"Specifies the port to be used for the MACsec receive channel. The port is used to make secure channel identifier (SCI). Takes a value between 1 and 65535. This option is compulsory, and is not set by default."],
[4,1232,"Specifies the MAC address to be used for the MACsec receive channel. The MAC address used to make secure channel identifier (SCI). This setting is compulsory, and is not set by default."],
[4,1233,"Specifies the packet number to be used for replay protection and the construction of the initialization vector (along with the secure channel identifier \\[SCI\\]). Takes a value between 1-4,294,967,295. Defaults to unset."],
[4,1234,"Specifies the identification for the key. Takes a number between 0-255. This option is compulsory, and is not set by default."],
[4,1235,"Specifies the encryption key used in the transmission channel. The same key must be configured on the peerâ€™s matching receive channel. This setting is compulsory, and is not set by default. Takes a 128-bit key encoded in a hexadecimal string, for example \"`dffafc8d7b9a43d5b9a3dfbbf6a30c16`\"."],
[4,1236,"Takes an absolute path to a file which contains a 128-bit key encoded in a hexadecimal string, which will be used in the transmission channel. When this option is specified, `Key=` is ignored. Note that the file must be readable by the user \"`systemd-network`\", so it should be, e.g., owned by \"`root:systemd-network`\" with a \"`0640`\" file mode. If the path refers to an `AF_UNIX` stream socket in the file system a connection is made to it and the key read from it."],
[4,1237,"Takes a boolean. If enabled, then the security association is activated. Defaults to unset."],
[4,1238,"Takes a boolean. If enabled, then the security association is used for encoding. Only one \\[MACsecTransmitAssociation\\] section can enable this option. When enabled, `Activate=yes` is implied. Defaults to unset."],
[4,1239,"Accepts the same key as in \\[MACsecReceiveChannel\\] section."],
[4,1240,"Accepts the same key as in \\[MACsecReceiveChannel\\] section."],
[4,1241,"Accepts the same key as in \\[MACsecTransmitAssociation\\] section."],
[4,1242,"Accepts the same key as in \\[MACsecTransmitAssociation\\] section."],
[4,1243,"Accepts the same key as in \\[MACsecTransmitAssociation\\] section."],
[4,1244,"Accepts the same key as in \\[MACsecTransmitAssociation\\] section."],
[4,1245,"Accepts the same key as in \\[MACsecTransmitAssociation\\] section."],
[4,1246,"A static local address for tunneled packets. It must be an address on another interface of this host, or the special value \"`any`\"."],
[4,1247,"The remote endpoint of the tunnel. Takes an IP address or the special value \"`any`\"."],
[4,1248,"The Type Of Service byte value for a tunnel interface. For details about the TOS, see the [Type of Service in the Internet Protocol Suite](http://tools.ietf.org/html/rfc1349) document."],
[4,1249,"A fixed Time To Live N on tunneled packets. N is a number in the range 1â€¦255. 0 is a special value meaning that packets inherit the TTL value. The default value for IPv4 tunnels is 0 (inherit). The default value for IPv6 tunnels is 64."],
[4,1250,"Takes a boolean. When true, enables Path MTU Discovery on the tunnel."],
[4,1251,"Configures the 20-bit flow label (see [RFC 6437](https://tools.ietf.org/html/rfc6437)) field in the IPv6 header (see [RFC 2460](https://tools.ietf.org/html/rfc2460)), which is used by a node to label packets of a flow. It is only used for IPv6 tunnels. A flow label of zero is used to indicate packets that have not been labeled. It can be configured to a value in the range 0â€¦0xFFFFF, or be set to \"`inherit`\", in which case the original flowlabel is used."],
[4,1252,"Takes a boolean. When true, the Differentiated Service Code Point (DSCP) field will be copied to the inner header from outer header during the decapsulation of an IPv6 tunnel packet. DSCP is a field in an IP packet that enables different levels of service to be assigned to network traffic. Defaults to \"`no`\"."],
[4,1253,"The Tunnel Encapsulation Limit option specifies how many additional levels of encapsulation are permitted to be prepended to the packet. For example, a Tunnel Encapsulation Limit option containing a limit value of zero means that a packet carrying that option may not enter another tunnel before exiting the current tunnel. (see [RFC 2473](https://tools.ietf.org/html/rfc2473#section-4.1.1)). The valid range is 0â€¦255 and \"`none`\". Defaults to 4."],
[4,1254,"The `Key=` parameter specifies the same key to use in both directions (`InputKey=` and `OutputKey=`). The `Key=` is either a number or an IPv4 address-like dotted quad. It is used as mark-configured SAD/SPD entry as part of the lookup key (both in data and control path) in IP XFRM (framework used to implement IPsec protocol). See [ip-xfrm â€” transform configuration](http://man7.org/linux/man-pages/man8/ip-xfrm.8.html) for details. It is only used for VTI/VTI6, GRE, GRETAP, and ERSPAN tunnels."],
[4,1255,"The `InputKey=` parameter specifies the key to use for input. The format is same as `Key=`. It is only used for VTI/VTI6, GRE, GRETAP, and ERSPAN tunnels."],
[4,1256,"The `OutputKey=` parameter specifies the key to use for output. The format is same as `Key=`. It is only used for VTI/VTI6, GRE, GRETAP, and ERSPAN tunnels."],
[4,1257,"An \"`ip6tnl`\" tunnel can be in one of three modes \"`ip6ip6`\" for IPv6 over IPv6, \"`ipip6`\" for IPv4 over IPv6 or \"`any`\" for either."],
[4,1258,"Takes a boolean. When false (the default), the tunnel is always created over some network device, and a .network file that requests this tunnel using `Tunnel=` is required for the tunnel to be created. When true, the tunnel is created independently of any network as \"tunnel@NONE\"."],
[4,1259,"Takes a boolean. If set to \"`yes`\", the loopback interface \"`lo`\" is used as the underlying device of the tunnel interface. Defaults to \"`no`\"."],
[4,1260,"Takes a boolean. When true allows tunnel traffic on `ip6tnl` devices where the remote endpoint is a local host address. When unset, the kernel's default will be used."],
[4,1261,"Takes a boolean. Specifies whether `FooOverUDP=` tunnel is to be configured. Defaults to false. This takes effects only for IPIP, SIT, GRE, and GRETAP tunnels. For more detail information see [Foo over UDP](https://lwn.net/Articles/614348)"],
[4,1262,"This setting specifies the UDP destination port for encapsulation. This field is mandatory when `FooOverUDP=yes`, and is not set by default."],
[4,1263,"This setting specifies the UDP source port for encapsulation. Defaults to `0` â€” that is, the source port for packets is left to the network stack to decide."],
[4,1264,"Accepts the same key as in the \\[FooOverUDP\\] section."],
[4,1265,"Reconfigure the tunnel for [IPv6 Rapid Deployment](https://tools.ietf.org/html/rfc5569), also known as 6rd. The value is an ISP-specific IPv6 prefix with a non-zero length. Only applicable to SIT tunnels."],
[4,1266,"Takes a boolean. If set, configures the tunnel as Intra-Site Automatic Tunnel Addressing Protocol (ISATAP) tunnel. Only applicable to SIT tunnels. When unset, the kernel's default will be used."],
[4,1267,"Takes a boolean. If set to yes, then packets are serialized. Only applies for GRE, GRETAP, and ERSPAN tunnels. When unset, the kernel's default will be used."],
[4,1268,"Specifies the ERSPAN index field for the interface, an integer in the range 1â€¦1048575 associated with the ERSPAN traffic's source port and direction. This field is mandatory."],
[4,1269,"Specifies the encapsulation mechanism used to store networking packets of various protocols inside the UDP packets. Supports the following values: \"`FooOverUDP`\" provides the simplest no-frills model of UDP encapsulation, it simply encapsulates packets directly in the UDP payload. \"`GenericUDPEncapsulation`\" is a generic and extensible encapsulation, it allows encapsulation of packets for any IP protocol and optional data as part of the encapsulation. For more detailed information see [Generic UDP Encapsulation](https://lwn.net/Articles/615044). Defaults to \"`FooOverUDP`\"."],
[4,1270,"Specifies the port number where the encapsulated packets will arrive. Those packets will be removed and manually fed back into the network stack with the encapsulation removed to be sent to the real destination. This option is mandatory."],
[4,1271,"Specifies the peer port number. Defaults to unset. Note that when peer port is set \"`Peer=`\" address is mandatory."],
[4,1272,"The `Protocol=` specifies the protocol number of the packets arriving at the UDP port. When `Encapsulation=FooOverUDP`, this field is mandatory and is not set by default. Takes an IP protocol name such as \"`gre`\" or \"`ipip`\", or an integer within the range 1â€¦255. When `Encapsulation=GenericUDPEncapsulation`, this must not be specified."],
[4,1273,"Configures peer IP address. Note that when peer address is set \"`PeerPort=`\" is mandatory."],
[4,1274,"Configures local IP address."],
[4,1275,"The interface name used when creating the netdev. This setting is compulsory."],
[4,1276,"The peer MACAddress, if not set, it is generated in the same way as the MAC address of the main interface."],
[4,1277,"The peer interface name used when creating the netdev. This setting is compulsory."],
[4,1278,"Takes a boolean. Configures whether to use multiple file descriptors (queues) to parallelize packets sending and receiving. Defaults to \"`no`\"."],
[4,1279,"Takes a boolean. Configures whether packets should be prepended with four extra bytes (two flag bytes and two protocol bytes). If disabled, it indicates that the packets will be pure IP packets. Defaults to \"`no`\"."],
[4,1280,"Takes a boolean. Configures IFF\\_VNET\\_HDR flag for a tun or tap device. It allows sending and receiving larger Generic Segmentation Offload (GSO) packets. This may increase throughput significantly. Defaults to \"`no`\"."],
[4,1281,"User to grant access to the `/dev/net/tun` device."],
[4,1282,"Group to grant access to the `/dev/net/tun` device."],
[4,1283,"The Base64 encoded private key for the interface. It can be generated using the **wg genkey** command (see [wg(8)](https://git.zx2c4.com/WireGuard/about/src/tools/wg.8)). This option or `PrivateKeyFile=` is mandatory to use WireGuard. Note that because this information is secret, you may want to set the permissions of the .netdev file to be owned by \"`root:systemd-network`\" with a \"`0640`\" file mode."],
[4,1284,"Takes an absolute path to a file which contains the Base64 encoded private key for the interface. When this option is specified, then `PrivateKey=` is ignored. Note that the file must be readable by the user \"`systemd-network`\", so it should be, e.g., owned by \"`root:systemd-network`\" with a \"`0640`\" file mode. If the path refers to an `AF_UNIX` stream socket in the file system a connection is made to it and the key read from it."],
[4,1285,"Sets UDP port for listening. Takes either value between 1 and 65535 or \"`auto`\". If \"`auto`\" is specified, the port is automatically generated based on interface name. Defaults to \"`auto`\"."],
[4,1286,"Sets a firewall mark on outgoing WireGuard packets from this interface. Takes a number between 1 and 4294967295."],
[4,1287,"The table identifier for the routes to the addresses specified in the `AllowedIPs=`. Takes the special value \"`off`\", one of the predefined names \"`default`\", \"`main`\", and \"`local`\", names defined in `RouteTable=` in [networkd.conf(5)](networkd.conf.html#), or a number in the range 1â€¦4294967295. When \"`off`\" the routes to the addresses specified in the `AllowedIPs=` setting will not be configured. Defaults to \"`main`\". This setting will be ignored when the same setting is specified in the \\[WireGuardPeer\\] section."],
[4,1288,"The priority of the routes to the addresses specified in the `AllowedIPs=`. Takes an integer in the range 0â€¦4294967295. Defaults to 0 for IPv4 addresses, and 1024 for IPv6 addresses. This setting will be ignored when the same setting is specified in the \\[WireGuardPeer\\] section."],
[4,1289,"Sets a Base64 encoded public key calculated by **wg pubkey** (see [wg(8)](https://git.zx2c4.com/WireGuard/about/src/tools/wg.8)) from a private key, and usually transmitted out of band to the author of the configuration file. This option is mandatory for this section."],
[4,1290,"Optional preshared key for the interface. It can be generated by the **wg genpsk** command. This option adds an additional layer of symmetric-key cryptography to be mixed into the already existing public-key cryptography, for post-quantum resistance. Note that because this information is secret, you may want to set the permissions of the .netdev file to be owned by \"`root:systemd-network`\" with a \"`0640`\" file mode."],
[4,1291,"Takes an absolute path to a file which contains the Base64 encoded preshared key for the peer. When this option is specified, then `PresharedKey=` is ignored. Note that the file must be readable by the user \"`systemd-network`\", so it should be, e.g., owned by \"`root:systemd-network`\" with a \"`0640`\" file mode. If the path refers to an `AF_UNIX` stream socket in the file system a connection is made to it and the key read from it."],
[4,1292,"Sets a comma-separated list of IP (v4 or v6) addresses with CIDR masks from which this peer is allowed to send incoming traffic and to which outgoing traffic for this peer is directed.\n\nThe catch-all 0.0.0.0/0 may be specified for matching all IPv4 addresses, and ::/0 may be specified for matching all IPv6 addresses.\n\nNote that this only affects _routing inside the network interface itself_, i.e. the packets that pass through the tunnel itself. To cause packets to be sent via the tunnel in the first place, an appropriate route needs to be added as well â€” either in the \"`[Routes]`\" section on the \"`.network`\" matching the wireguard interface, or externally to `systemd-networkd`."],
[4,1293,"Sets an endpoint IP address or hostname, followed by a colon, and then a port number. This endpoint will be updated automatically once to the most recent source IP address and port of correctly authenticated packets from the peer at configuration time."],
[4,1294,"Sets a seconds interval, between 1 and 65535 inclusive, of how often to send an authenticated empty packet to the peer for the purpose of keeping a stateful firewall or NAT mapping valid persistently. For example, if the interface very rarely sends traffic, but it might at anytime receive traffic from a peer, and it is behind NAT, the interface might benefit from having a persistent keepalive interval of 25 seconds. If set to 0 or \"off\", this option is disabled. By default or when unspecified, this option is off. Most users will not need this."],
[4,1295,"The table identifier for the routes to the addresses specified in the `AllowedIPs=`. Takes the special value \"`off`\", one of the predefined names \"`default`\", \"`main`\", and \"`local`\", names defined in `RouteTable=` in [networkd.conf(5)](networkd.conf.html#), or a number in the range 1â€¦4294967295. Defaults to unset, and the value specified in the same setting in the \\[WireGuard\\] section will be used."],
[4,1296,"The priority of the routes to the addresses specified in the `AllowedIPs=`. Takes an integer in the range 0â€¦4294967295. Defaults to unset, and the value specified in the same setting in the \\[WireGuard\\] section will be used."],
[4,1297,"Specifies one of the bonding policies. The default is \"`balance-rr`\" (round robin). Possible values are \"`balance-rr`\", \"`active-backup`\", \"`balance-xor`\", \"`broadcast`\", \"`802.3ad`\", \"`balance-tlb`\", and \"`balance-alb`\"."],
[4,1298,"Selects the transmit hash policy to use for slave selection in balance-xor, 802.3ad, and tlb modes. Possible values are \"`layer2`\", \"`layer3+4`\", \"`layer2+3`\", \"`encap2+3`\", and \"`encap3+4`\"."],
[4,1299,"Specifies the rate with which link partner transmits Link Aggregation Control Protocol Data Unit packets in 802.3ad mode. Possible values are \"`slow`\", which requests partner to transmit LACPDUs every 30 seconds, and \"`fast`\", which requests partner to transmit LACPDUs every second. The default value is \"`slow`\"."],
[4,1300,"Specifies the frequency that Media Independent Interface link monitoring will occur. A value of zero disables MII link monitoring. This value is rounded down to the nearest millisecond. The default value is 0."],
[4,1301,"Specifies the delay before a link is enabled after a link up status has been detected. This value is rounded down to a multiple of `MIIMonitorSec=`. The default value is 0."],
[4,1302,"Specifies the delay before a link is disabled after a link down status has been detected. This value is rounded down to a multiple of `MIIMonitorSec=`. The default value is 0."],
[4,1303,"Specifies the number of seconds between instances where the bonding driver sends learning packets to each slave peer switch. The valid range is 1â€¦0x7fffffff; the default value is 1. This option has an effect only for the balance-tlb and balance-alb modes."],
[4,1304,"Specifies the 802.3ad aggregation selection logic to use. Possible values are \"`stable`\", \"`bandwidth`\" and \"`count`\"."],
[4,1305,"Specifies the 802.3ad actor system priority. Takes a number in the range 1â€¦65535."],
[4,1306,"Specifies the 802.3ad user defined portion of the port key. Takes a number in the range 0â€¦1023."],
[4,1307,"Specifies the 802.3ad system MAC address. This cannot be a null or multicast address."],
[4,1308,"Specifies whether the active-backup mode should set all slaves to the same MAC address at the time of enslavement or, when enabled, to perform special handling of the bond's MAC address in accordance with the selected policy. The default policy is none. Possible values are \"`none`\", \"`active`\" and \"`follow`\"."],
[4,1309,"Specifies whether or not ARP probes and replies should be validated in any mode that supports ARP monitoring, or whether non-ARP traffic should be filtered (disregarded) for link monitoring purposes. Possible values are \"`none`\", \"`active`\", \"`backup`\" and \"`all`\"."],
[4,1310,"Specifies the ARP link monitoring frequency. A value of 0 disables ARP monitoring. The default value is 0, and the default unit seconds."],
[4,1311,"Specifies the IP addresses to use as ARP monitoring peers when `ARPIntervalSec=` is greater than 0. These are the targets of the ARP request sent to determine the health of the link to the targets. Specify these values in IPv4 dotted decimal format. At least one IP address must be given for ARP monitoring to function. The maximum number of targets that can be specified is 16. The default value is no IP addresses."],
[4,1312,"Specifies the quantity of `ARPIPTargets=` that must be reachable in order for the ARP monitor to consider a slave as being up. This option affects only active-backup mode for slaves with ARPValidate enabled. Possible values are \"`any`\" and \"`all`\"."],
[4,1313,"Specifies the reselection policy for the primary slave. This affects how the primary slave is chosen to become the active slave when failure of the active slave or recovery of the primary slave occurs. This option is designed to prevent flip-flopping between the primary slave and other slaves. Possible values are \"`always`\", \"`better`\" and \"`failure`\"."],
[4,1314,"Specifies the number of IGMP membership reports to be issued after a failover event. One membership report is issued immediately after the failover, subsequent packets are sent in each 200ms interval. The valid range is 0â€¦255. Defaults to 1. A value of 0 prevents the IGMP membership report from being issued in response to the failover event."],
[4,1315,"Specify the number of packets to transmit through a slave before moving to the next one. When set to 0, then a slave is chosen at random. The valid range is 0â€¦65535. Defaults to 1. This option only has effect when in balance-rr mode."],
[4,1316,"Specify the number of peer notifications (gratuitous ARPs and unsolicited IPv6 Neighbor Advertisements) to be issued after a failover event. As soon as the link is up on the new slave, a peer notification is sent on the bonding device and each VLAN sub-device. This is repeated at each link monitor interval (ARPIntervalSec or MIIMonitorSec, whichever is active) if the number is greater than 1. The valid range is 0â€¦255. The default value is 1. These options affect only the active-backup mode."],
[4,1317,"Takes a boolean. Specifies that duplicate frames (received on inactive ports) should be dropped when false, or delivered when true. Normally, bonding will drop duplicate frames (received on inactive ports), which is desirable for most users. But there are some times it is nice to allow duplicate frames to be delivered. The default value is false (drop duplicate frames received on inactive ports)."],
[4,1318,"Takes a boolean. Specifies if dynamic shuffling of flows is enabled. Applies only for balance-tlb mode. Defaults to unset."],
[4,1319,"Specifies the minimum number of links that must be active before asserting carrier. The default value is 0."],
[4,1320,"Sets the ID/key of the xfrm interface which needs to be associated with a SA/policy. Can be decimal or hexadecimal, valid range is 0-0xffffffff, defaults to 0."],
[4,1321,"Takes a boolean. If false (the default), the xfrm interface must have an underlying device which can be used for hardware offloading."],
[4,1322,"The numeric routing table identifier. This setting is compulsory."],
[4,1323,"Takes one of \"`off`\", \"`server`\", or \"`client`\". A batman-adv node can either run in server mode (sharing its internet connection with the mesh) or in client mode (searching for the most suitable internet connection in the mesh) or having the gateway support turned off entirely (which is the default setting)."],
[4,1324,"Takes a boolean value. Enables or disables aggregation of originator messages. Defaults to true."],
[4,1325,"Takes a boolean value. Enables or disables avoidance of loops on bridges. Defaults to true."],
[4,1326,"Takes a boolean value. Enables or disables the distributed ARP table. Defaults to true."],
[4,1327,"Takes a boolean value. Enables or disables fragmentation. Defaults to true."],
[4,1328,"The hop penalty setting allows to modify [batctl(8)](https://www.mankier.com/8/batctl) preference for multihop routes vs. short routes. This integer value is applied to the TQ (Transmit Quality) of each forwarded OGM (Originator Message), thereby propagating the cost of an extra hop (the packet has to be received and retransmitted which costs airtime). A higher hop penalty will make it more unlikely that other nodes will choose this node as intermediate hop towards any given destination. The default hop penalty of '15' is a reasonable value for most setups and probably does not need to be changed. However, mobile nodes could choose a value of 255 (maximum value) to avoid being chosen as a router by other nodes. The minimum value is 0."],
[4,1329,"The value specifies the interval in seconds, unless another time unit is specified in which batman-adv floods the network with its protocol information. See [systemd.time(7)](systemd.time.html#) for more information."],
[4,1330,"If the node is a server, this parameter is used to inform other nodes in the network about this node's internet connection download bandwidth in bits per second. Just enter any number suffixed with K, M, G or T (base 1000) and the batman-adv module will propagate the entered value in the mesh."],
[4,1331,"If the node is a server, this parameter is used to inform other nodes in the network about this node's internet connection upload bandwidth in bits per second. Just enter any number suffixed with K, M, G or T (base 1000) and the batman-adv module will propagate the entered value in the mesh."],
[4,1332,"This can be either \"`batman-v`\" or \"`batman-iv`\" and describes which routing\\_algo of [batctl(8)](batctl.html#) to use. The algorithm cannot be changed after interface creation. Defaults to \"`batman-v`\"."],
[4,1333,"Takes an integer in the range 1â€¦0xffff, except for 0x8000. Defaults to unset, and the kernel's default is used."],
[4,1334,"Takes one of the special values \"`datagram`\" or \"`connected`\". Defaults to unset, and the kernel's default is used.\n\nWhen \"`datagram`\", the Infiniband unreliable datagram (UD) transport is used, and so the interface MTU is equal to the IB L2 MTU minus the IPoIB encapsulation header (4 bytes). For example, in a typical IB fabric with a 2K MTU, the IPoIB MTU will be 2048 - 4 = 2044 bytes.\n\nWhen \"`connected`\", the Infiniband reliable connected (RC) transport is used. Connected mode takes advantage of the connected nature of the IB transport and allows an MTU up to the maximal IP packet size of 64K, which reduces the number of IP packets needed for handling large UDP datagrams, TCP segments, etc and increases the performance for large messages."],
[4,1335,"Takes an boolean value. When true, the kernel ignores multicast groups handled by userspace. Defaults to unset, and the kernel's default is used."],
[2,"ARPAllTargets","",1312,36],
[2,"ARPIPTargets","",1311,36],
[2,"ARPIntervalSec","",1310,36],
[2,"ARPValidate","",1309,36],
[2,"Activate","",1237,36],
[2,"AdActorSystem","",1307,36],
[2,"AdActorSystemPriority","",1305,36],
[2,"AdSelect","",1304,36],
[2,"AdUserPortKey","",1306,36],
[2,"AgeingTimeSec","",1156,36],
[2,"Aggregation","",1324,36],
[2,"AllSlavesActive","",1317,36],
[2,"AllowLocalRemote","",1260,36],
[2,"AllowedIPs","",1292,36],
[2,"Architecture","",1146,36],
[2,"AssignToLoopback","",1259,36],
[2,"BridgeLoopAvoidance","",1325,36],
[2,"BroadcastMulticastQueueLength","",1175,36],
[2,"CopyDSCP","",1252,36],
[2,"DefaultPVID","",1159,36],
[2,"Description","",1148,36],
[2,"DestinationPort","",1198,36],
[2,"DiscoverPathMTU","",1250,36],
[2,"DistributedArpTable","",1326,36],
[2,"DownDelaySec","",1302,36],
[2,"DynamicTransmitLoadBalancing","",1318,36],
[2,"ERSPANIndex","",1268,36],
[2,"EgressQOSMaps","",1172,36],
[2,"Encapsulation","",1264,36],
[2,"EncapsulationLimit","",1253,36],
[2,"EncapsulationType","",1219,36],
[2,"Encrypt","",1230,36],
[2,"Endpoint","",1293,36],
[2,"EtherType","",1214,36],
[2,"FDBAgeingSec","",1185,36],
[2,"FOUDestinationPort","",1262,36],
[2,"FOUSourcePort","",1263,36],
[2,"FailOverMACPolicy","",1308,36],
[2,"FirewallMark","",1286,36],
[2,"Firmware","",1147,36],
[2,"Flags","",1177,36],
[2,"FlowLabel","",1200,36],
[2,"FooOverUDP","",1261,36],
[2,"ForwardDelaySec","",1155,36],
[2,"Fragmentation","",1327,36],
[2,"GVRP","",1168,36],
[2,"GatewayBandwidthDown","",1330,36],
[2,"GatewayBandwidthUp","",1331,36],
[2,"GatewayMode","",1323,36],
[2,"GenericProtocolExtension","",1197,36],
[2,"GratuitousARP","",1316,36],
[2,"Group","",1181,36],
[2,"GroupForwardMask","",1158,36],
[2,"GroupPolicyExtension","",1196,36],
[2,"HelloTimeSec","",1153,36],
[2,"HopPenalty","",1328,36],
[2,"Host","",1142,36],
[2,"IPDoNotFragment","",1201,36],
[2,"IPv6FlowLabel","",1251,36],
[2,"IPv6RapidDeploymentPrefix","",1265,36],
[2,"ISATAP","",1266,36],
[2,"Id","",1166,36],
[2,"IgnoreUserspaceMulticastGroup","",1335,36],
[2,"Independent","",1202,36],
[2,"IngressQOSMaps","",1172,36],
[2,"InputKey","",1255,36],
[2,"InterfaceId","",1320,36],
[2,"KernelCommandLine","",1144,36],
[2,"KernelVersion","",1145,36],
[2,"Key","",1235,36],
[2,"KeyFile","",1236,36],
[2,"KeyId","",1234,36],
[2,"Kind","",1150,36],
[2,"L2MissNotification","",1188,36],
[2,"L3MissNotification","",1189,36],
[2,"LACPTransmitRate","",1299,36],
[2,"Layer2SpecificHeader","",1228,36],
[2,"LearnPacketIntervalSec","",1303,36],
[2,"ListenPort","",1285,36],
[2,"Local","",1180,36],
[2,"LooseBinding","",1170,36],
[2,"MACAddress","",1152,36],
[2,"MIIMonitorSec","",1300,36],
[2,"MTUBytes","",1151,36],
[2,"MVRP","",1169,36],
[2,"MacLearning","",1184,36],
[2,"MaxAgeSec","",1154,36],
[2,"MaximumFDBEntries","",1186,36],
[2,"MinLinks","",1319,36],
[2,"Mode","",1173,36],
[2,"MultiQueue","",1278,36],
[2,"MulticastIGMPVersion","",1165,36],
[2,"MulticastQuerier","",1160,36],
[2,"MulticastSnooping","",1161,36],
[2,"Name","",1149,36],
[2,"OriginatorIntervalSec","",1329,36],
[2,"OutputKey","",1256,36],
[2,"PacketInfo","",1279,36],
[2,"PacketNumber","",1233,36],
[2,"PacketsPerSlave","",1315,36],
[2,"PartitionKey","",1333,36],
[2,"Peer","",1273,36],
[2,"PeerPort","",1271,36],
[2,"PeerSessionId","",1227,36],
[2,"PeerTunnelId","",1216,36],
[2,"PersistentKeepalive","",1294,36],
[2,"Port","",1229,36],
[2,"PortRange","",1199,36],
[2,"PresharedKey","",1290,36],
[2,"PresharedKeyFile","",1291,36],
[2,"PrimaryReselectPolicy","",1313,36],
[2,"Priority","",1157,36],
[2,"PrivateKey","",1283,36],
[2,"PrivateKeyFile","",1284,36],
[2,"Protocol","",1167,36],
[2,"PublicKey","",1289,36],
[2,"ReduceARPProxy","",1187,36],
[2,"Remote","",1179,36],
[2,"RemoteChecksumRx","",1195,36],
[2,"RemoteChecksumTx","",1194,36],
[2,"ReorderHeader","",1171,36],
[2,"ResendIGMP","",1314,36],
[2,"RouteMetric","",1288,36],
[2,"RouteShortCircuit","",1190,36],
[2,"RouteTable","",1287,36],
[2,"RoutingAlgorithm","",1332,36],
[2,"STP","",1164,36],
[2,"SerializeTunneledPackets","",1267,36],
[2,"SessionId","",1226,36],
[2,"SourceMACAddress","",1174,36],
[2,"TOS","",1182,36],
[2,"TTL","",1183,36],
[2,"Table","",1322,36],
[2,"TransmitHashPolicy","",1298,36],
[2,"TunnelId","",1215,36],
[2,"UDP6ZeroChecksumRx","",1193,36],
[2,"UDP6ZeroChecksumTx","",1192,36],
[2,"UDPChecksum","",1191,36],
[2,"UDPDestinationPort","",1221,36],
[2,"UDPSourcePort","",1220,36],
[2,"UpDelaySec","",1301,36],
[2,"UseForEncoding","",1238,36],
[2,"User","",1281,36],
[2,"VLANFiltering","",1162,36],
[2,"VLANProtocol","",1163,36],
[2,"VNI","",1178,36],
[2,"VNetHeader","",1280,36],
[2,"Virtualization","",1143,36],
[3,37,"systemd.link(5)","systemd.link â€” Network device configuration","systemd.link.html"],
[4,1336,"A whitespace-separated list of hardware addresses. The acceptable formats are:\n\n`colon-delimited hexadecimal`[Â¶](#colon-delimited%20hexadecimal \"Permalink to this term\")\n\nEach field must be one byte. E.g. \"`12:34:56:78:90:ab`\" or \"`AA:BB:CC:DD:EE:FF`\".\n\n`hyphen-delimited hexadecimal`[Â¶](#hyphen-delimited%20hexadecimal \"Permalink to this term\")\n\nEach field must be one byte. E.g. \"`12-34-56-78-90-ab`\" or \"`AA-BB-CC-DD-EE-FF`\".\n\n`dot-delimited hexadecimal`[Â¶](#dot-delimited%20hexadecimal \"Permalink to this term\")\n\nEach field must be two bytes. E.g. \"`1234.5678.90ab`\" or \"`AABB.CCDD.EEFF`\".\n\n`IPv4 address format`[Â¶](#IPv4%20address%20format \"Permalink to this term\")\n\nE.g. \"`127.0.0.1`\" or \"`192.168.0.1`\".\n\n`IPv6 address format`[Â¶](#IPv6%20address%20format \"Permalink to this term\")\n\nE.g. \"`2001:0db8:85a3::8a2e:0370:7334`\" or \"`::1`\".\n\nThe total length of each MAC address must be 4 (for IPv4 tunnel), 6 (for Ethernet), 16 (for IPv6 tunnel), or 20 (for InfiniBand). This option may appear more than once, in which case the lists are merged. If the empty string is assigned to this option, the list of hardware addresses defined prior to this is reset. Defaults to unset."],
[4,1337,"Each field must be one byte. E.g. \"`12:34:56:78:90:ab`\" or \"`AA:BB:CC:DD:EE:FF`\"."],
[4,1338,"Each field must be one byte. E.g. \"`12-34-56-78-90-ab`\" or \"`AA-BB-CC-DD-EE-FF`\"."],
[4,1339,"Each field must be two bytes. E.g. \"`1234.5678.90ab`\" or \"`AABB.CCDD.EEFF`\"."],
[4,1340,"E.g. \"`127.0.0.1`\" or \"`192.168.0.1`\"."],
[4,1341,"E.g. \"`2001:0db8:85a3::8a2e:0370:7334`\" or \"`::1`\"."],
[4,1342,"A whitespace-separated list of hardware's permanent addresses. While `MACAddress=` matches the device's current MAC address, this matches the device's permanent MAC address, which may be different from the current one. Use full colon-, hyphen- or dot-delimited hexadecimal, or IPv4 or IPv6 address format. This option may appear more than once, in which case the lists are merged. If the empty string is assigned to this option, the list of hardware addresses defined prior to this is reset. Defaults to unset."],
[4,1343,"A whitespace-separated list of shell-style globs matching the persistent path, as exposed by the udev property `ID_PATH`."],
[4,1344,"A whitespace-separated list of shell-style globs matching the driver currently bound to the device, as exposed by the udev property `ID_NET_DRIVER` of its parent device, or if that is not set, the driver as exposed by **ethtool -i** of the device itself. If the list is prefixed with a \"!\", the test is inverted."],
[4,1345,"A whitespace-separated list of shell-style globs matching the device type, as exposed by **networkctl list**. If the list is prefixed with a \"!\", the test is inverted. Some valid values are \"`ether`\", \"`loopback`\", \"`wlan`\", \"`wwan`\". Valid types are named either from the udev \"`DEVTYPE`\" attribute, or \"`ARPHRD_`\" macros in `linux/if_arp.h`, so this is not comprehensive."],
[4,1346,"A whitespace-separated list of udev property names with their values after equals sign (\"`=`\"). If multiple properties are specified, the test results are ANDed. If the list is prefixed with a \"!\", the test is inverted. If a value contains white spaces, then please quote whole key and value pair. If a value contains quotation, then please escape the quotation with \"`\\`\".\n\nExample: if a .link file has the following:\n\nProperty=ID\\_MODEL\\_ID=9999 \"ID\\_VENDOR\\_FROM\\_DATABASE=vendor name\" \"KEY=with \\\\\"quotation\\\\\"\"\n\nthen, the .link file matches only when an interface has all the above three properties."],
[4,1347,"A whitespace-separated list of shell-style globs matching the device name, as exposed by the udev property \"INTERFACE\". This cannot be used to match on names that have already been changed from userspace. Caution is advised when matching on kernel-assigned names, as they are known to be unstable between reboots."],
[4,1348,"Matches against the hostname or machine ID of the host. See `ConditionHost=` in [systemd.unit(5)](systemd.unit.html#) for details. When prefixed with an exclamation mark (\"`!`\"), the result is negated. If an empty string is assigned, then previously assigned value is cleared."],
[4,1349,"Checks whether the system is executed in a virtualized environment and optionally test whether it is a specific implementation. See `ConditionVirtualization=` in [systemd.unit(5)](systemd.unit.html#) for details. When prefixed with an exclamation mark (\"`!`\"), the result is negated. If an empty string is assigned, then previously assigned value is cleared."],
[4,1350,"Checks whether a specific kernel command line option is set. See `ConditionKernelCommandLine=` in [systemd.unit(5)](systemd.unit.html#) for details. When prefixed with an exclamation mark (\"`!`\"), the result is negated. If an empty string is assigned, then previously assigned value is cleared."],
[4,1351,"Checks whether the kernel version (as reported by **uname -r**) matches a certain expression. See `ConditionKernelVersion=` in [systemd.unit(5)](systemd.unit.html#) for details. When prefixed with an exclamation mark (\"`!`\"), the result is negated. If an empty string is assigned, then previously assigned value is cleared."],
[4,1352,"Checks whether the system is running on a specific architecture. See `ConditionArchitecture=` in [systemd.unit(5)](systemd.unit.html#) for details. When prefixed with an exclamation mark (\"`!`\"), the result is negated. If an empty string is assigned, then previously assigned value is cleared."],
[4,1353,"Checks whether the system is running on a machine with the specified firmware. See `ConditionFirmware=` in [systemd.unit(5)](systemd.unit.html#) for details. When prefixed with an exclamation mark (\"`!`\"), the result is negated. If an empty string is assigned, then previously assigned value is cleared."],
[4,1354,"A description of the device."],
[4,1355,"The `ifalias` interface property is set to this value."],
[4,1356,"The policy by which the MAC address should be set. The available policies are:\n\n`persistent`[Â¶](#persistent \"Permalink to this term\")\n\nIf the hardware has a persistent MAC address, as most hardware should, and if it is used by the kernel, nothing is done. Otherwise, a new MAC address is generated which is guaranteed to be the same on every boot for the given machine and the given device, but which is otherwise random. This feature depends on ID\\_NET\\_NAME\\_\\* properties to exist for the link. On hardware where these properties are not set, the generation of a persistent MAC address will fail.\n\n`random`[Â¶](#random \"Permalink to this term\")\n\nIf the kernel is using a random MAC address, nothing is done. Otherwise, a new address is randomly generated each time the device appears, typically at boot. Either way, the random address will have the \"`unicast`\" and \"`locally administered`\" bits set.\n\n`none`[Â¶](#none \"Permalink to this term\")\n\nKeeps the MAC address assigned by the kernel. Or use the MAC address specified in `MACAddress=`.\n\nAn empty string assignment is equivalent to setting \"`none`\"."],
[4,1357,"If the hardware has a persistent MAC address, as most hardware should, and if it is used by the kernel, nothing is done. Otherwise, a new MAC address is generated which is guaranteed to be the same on every boot for the given machine and the given device, but which is otherwise random. This feature depends on ID\\_NET\\_NAME\\_\\* properties to exist for the link. On hardware where these properties are not set, the generation of a persistent MAC address will fail."],
[4,1358,"If the kernel is using a random MAC address, nothing is done. Otherwise, a new address is randomly generated each time the device appears, typically at boot. Either way, the random address will have the \"`unicast`\" and \"`locally administered`\" bits set."],
[4,1359,"Keeps the MAC address assigned by the kernel. Or use the MAC address specified in `MACAddress=`."],
[4,1360,"The interface MAC address to use. For this setting to take effect, `MACAddressPolicy=` must either be unset, empty, or \"`none`\"."],
[4,1361,"An ordered, space-separated list of policies by which the interface name should be set. `NamePolicy=` may be disabled by specifying `net.ifnames=0` on the kernel command line. Each of the policies may fail, and the first successful one is used. The name is not set directly, but is exported to udev as the property `ID_NET_NAME`, which is, by default, used by a [udev(7)](udev.html#), rule to set `NAME`. The available policies are:\n\n`kernel`[Â¶](#kernel \"Permalink to this term\")\n\nIf the kernel claims that the name it has set for a device is predictable, then no renaming is performed.\n\n`database`[Â¶](#database \"Permalink to this term\")\n\nThe name is set based on entries in the udev's Hardware Database with the key `ID_NET_NAME_FROM_DATABASE`.\n\n`onboard`[Â¶](#onboard \"Permalink to this term\")\n\nThe name is set based on information given by the firmware for on-board devices, as exported by the udev property `ID_NET_NAME_ONBOARD`. See [systemd.net-naming-scheme(7)](systemd.net-naming-scheme.html#).\n\n`slot`[Â¶](#slot \"Permalink to this term\")\n\nThe name is set based on information given by the firmware for hot-plug devices, as exported by the udev property `ID_NET_NAME_SLOT`. See [systemd.net-naming-scheme(7)](systemd.net-naming-scheme.html#).\n\n`path`[Â¶](#path \"Permalink to this term\")\n\nThe name is set based on the device's physical location, as exported by the udev property `ID_NET_NAME_PATH`. See [systemd.net-naming-scheme(7)](systemd.net-naming-scheme.html#).\n\n`mac`[Â¶](#mac \"Permalink to this term\")\n\nThe name is set based on the device's persistent MAC address, as exported by the udev property `ID_NET_NAME_MAC`. See [systemd.net-naming-scheme(7)](systemd.net-naming-scheme.html#).\n\n`keep`[Â¶](#keep \"Permalink to this term\")\n\nIf the device already had a name given by userspace (as part of creation of the device or a rename), keep it."],
[4,1362,"If the kernel claims that the name it has set for a device is predictable, then no renaming is performed."],
[4,1363,"The name is set based on entries in the udev's Hardware Database with the key `ID_NET_NAME_FROM_DATABASE`."],
[4,1364,"The name is set based on information given by the firmware for on-board devices, as exported by the udev property `ID_NET_NAME_ONBOARD`. See [systemd.net-naming-scheme(7)](systemd.net-naming-scheme.html#)."],
[4,1365,"The name is set based on information given by the firmware for hot-plug devices, as exported by the udev property `ID_NET_NAME_SLOT`. See [systemd.net-naming-scheme(7)](systemd.net-naming-scheme.html#)."],
[4,1366,"The name is set based on the device's physical location, as exported by the udev property `ID_NET_NAME_PATH`. See [systemd.net-naming-scheme(7)](systemd.net-naming-scheme.html#)."],
[4,1367,"The name is set based on the device's persistent MAC address, as exported by the udev property `ID_NET_NAME_MAC`. See [systemd.net-naming-scheme(7)](systemd.net-naming-scheme.html#)."],
[4,1368,"If the device already had a name given by userspace (as part of creation of the device or a rename), keep it."],
[4,1369,"The interface name to use. This option has lower precedence than `NamePolicy=`, so for this setting to take effect, `NamePolicy=` must either be unset, empty, disabled, or all policies configured there must fail. Also see the example below with \"`Name=dmz0`\".\n\nNote that specifying a name that the kernel might use for another interface (for example \"`eth0`\") is dangerous because the name assignment done by udev will race with the assignment done by the kernel, and only one interface may use the name. Depending on the order of operations, either udev or the kernel will win, making the naming unpredictable. It is best to use some different prefix, for example \"`internal0`\"/\"`external0`\" or \"`lan0`\"/\"`lan1`\"/\"`lan3`\"."],
[4,1370,"A space-separated list of policies by which the interface's alternative names should be set. Each of the policies may fail, and all successful policies are used. The available policies are \"`database`\", \"`onboard`\", \"`slot`\", \"`path`\", and \"`mac`\". If the kernel does not support the alternative names, then this setting will be ignored."],
[4,1371,"The alternative interface name to use. This option can be specified multiple times. If the empty string is assigned to this option, the list is reset, and all prior assignments have no effect. If the kernel does not support the alternative names, then this setting will be ignored."],
[4,1372,"Specifies the device's number of transmit queues. An integer in the range 1â€¦4096. When unset, the kernel's default will be used."],
[4,1373,"Specifies the device's number of receive queues. An integer in the range 1â€¦4096. When unset, the kernel's default will be used."],
[4,1374,"Specifies the transmit queue length of the device in number of packets. An unsigned integer in the range 0â€¦4294967294. When unset, the kernel's default will be used."],
[4,1375,"The maximum transmission unit in bytes to set for the device. The usual suffixes K, M, G are supported and are understood to the base of 1024."],
[4,1376,"The speed to set for the device, the value is rounded down to the nearest Mbps. The usual suffixes K, M, G are supported and are understood to the base of 1000."],
[4,1377,"The duplex mode to set for the device. The accepted values are `half` and `full`."],
[4,1378,"Takes a boolean. If set to yes, automatic negotiation of transmission parameters is enabled. Autonegotiation is a procedure by which two connected ethernet devices choose common transmission parameters, such as speed, duplex mode, and flow control. When unset, the kernel's default will be used.\n\nNote that if autonegotiation is enabled, speed and duplex settings are read-only. If autonegotiation is disabled, speed and duplex settings are writable if the driver supports multiple link modes."],
[4,1379,"The Wake-on-LAN policy to set for the device. Takes the special value \"`off`\" which disables Wake-on-LAN, or space separated list of the following words:\n\n`phy`[Â¶](#phy \"Permalink to this term\")\n\nWake on PHY activity.\n\n`unicast`[Â¶](#unicast \"Permalink to this term\")\n\nWake on unicast messages.\n\n`multicast`[Â¶](#multicast \"Permalink to this term\")\n\nWake on multicast messages.\n\n`broadcast`[Â¶](#broadcast \"Permalink to this term\")\n\nWake on broadcast messages.\n\n`arp`[Â¶](#arp \"Permalink to this term\")\n\nWake on ARP.\n\n`magic`[Â¶](#magic \"Permalink to this term\")\n\nWake on receipt of a magic packet.\n\n`secureon`[Â¶](#secureon \"Permalink to this term\")\n\nEnable SecureOn password for MagicPacket. Implied when `WakeOnLanPassword=` is specified. If specified without `WakeOnLanPassword=` option, then the password is read from the credential \"``_`LINK`_.link.wol.password``\" (e.g., \"`60-foo.link.wol.password`\"), and if the credential not found, then read from \"`wol.password`\". See `LoadCredential=`/`SetCredential=` in [systemd.exec(1)](systemd.exec.html#) for details. The password in the credential, must be 6 bytes in hex format with each byte separated by a colon (\"`:`\") like an Ethernet MAC address, e.g., \"`aa:bb:cc:dd:ee:ff`\".\n\nDefaults to unset, and the device's default will be used. This setting can be specified multiple times. If an empty string is assigned, then the all previous assignments are cleared."],
[4,1380,"Wake on PHY activity."],
[4,1381,"Wake on unicast messages."],
[4,1382,"Wake on multicast messages."],
[4,1383,"Wake on broadcast messages."],
[4,1384,"Wake on ARP."],
[4,1385,"Wake on receipt of a magic packet."],
[4,1386,"Enable SecureOn password for MagicPacket. Implied when `WakeOnLanPassword=` is specified. If specified without `WakeOnLanPassword=` option, then the password is read from the credential \"``_`LINK`_.link.wol.password``\" (e.g., \"`60-foo.link.wol.password`\"), and if the credential not found, then read from \"`wol.password`\". See `LoadCredential=`/`SetCredential=` in [systemd.exec(1)](systemd.exec.html#) for details. The password in the credential, must be 6 bytes in hex format with each byte separated by a colon (\"`:`\") like an Ethernet MAC address, e.g., \"`aa:bb:cc:dd:ee:ff`\"."],
[4,1387,"Specifies the SecureOn password for MagicPacket. Takes an absolute path to a regular file or an `AF_UNIX` stream socket, or the plain password. When a path to a regular file is specified, the password is read from it. When an `AF_UNIX` stream socket is specified, a connection is made to it and the password is read from it. The password must be 6 bytes in hex format with each byte separated by a colon (\"`:`\") like an Ethernet MAC address, e.g., \"`aa:bb:cc:dd:ee:ff`\". This implies `WakeOnLan=secureon`. Defaults to unset, and the current value will not be changed."],
[4,1388,"The port option is used to select the device port. The supported values are:\n\n`tp`[Â¶](#tp \"Permalink to this term\")\n\nAn Ethernet interface using Twisted-Pair cable as the medium.\n\n`aui`[Â¶](#aui \"Permalink to this term\")\n\nAttachment Unit Interface (AUI). Normally used with hubs.\n\n`bnc`[Â¶](#bnc \"Permalink to this term\")\n\nAn Ethernet interface using BNC connectors and co-axial cable.\n\n`mii`[Â¶](#mii \"Permalink to this term\")\n\nAn Ethernet interface using a Media Independent Interface (MII).\n\n`fibre`[Â¶](#fibre \"Permalink to this term\")\n\nAn Ethernet interface using Optical Fibre as the medium."],
[4,1389,"An Ethernet interface using Twisted-Pair cable as the medium."],
[4,1390,"Attachment Unit Interface (AUI). Normally used with hubs."],
[4,1391,"An Ethernet interface using BNC connectors and co-axial cable."],
[4,1392,"An Ethernet interface using a Media Independent Interface (MII)."],
[4,1393,"An Ethernet interface using Optical Fibre as the medium."],
[4,1394,"This sets what speeds and duplex modes of operation are advertised for auto-negotiation. This implies \"`AutoNegotiation=yes`\". The supported values are:\n\n**TableÂ 1.Â Supported advertise values**\n\nAdvertise\n\nSpeed (Mbps)\n\nDuplex Mode\n\n`10baset-half`\n\n10\n\nhalf\n\n`10baset-full`\n\n10\n\nfull\n\n`100baset-half`\n\n100\n\nhalf\n\n`100baset-full`\n\n100\n\nfull\n\n`1000baset-half`\n\n1000\n\nhalf\n\n`1000baset-full`\n\n1000\n\nfull\n\n`10000baset-full`\n\n10000\n\nfull\n\n`2500basex-full`\n\n2500\n\nfull\n\n`1000basekx-full`\n\n1000\n\nfull\n\n`10000basekx4-full`\n\n10000\n\nfull\n\n`10000basekr-full`\n\n10000\n\nfull\n\n`10000baser-fec`\n\n10000\n\nfull\n\n`20000basemld2-full`\n\n20000\n\nfull\n\n`20000basekr2-full`\n\n20000\n\nfull\n\n  \nBy default this is unset, i.e. all possible modes will be advertised. This option may be specified more than once, in which case all specified speeds and modes are advertised. If the empty string is assigned to this option, the list is reset, and all prior assignments have no effect."],
[4,1395,"Takes a boolean. If set to true, hardware offload for checksumming of ingress network packets is enabled. When unset, the kernel's default will be used."],
[4,1396,"Takes a boolean. If set to true, hardware offload for checksumming of egress network packets is enabled. When unset, the kernel's default will be used."],
[4,1397,"Takes a boolean. If set to true, TCP Segmentation Offload (TSO) is enabled. When unset, the kernel's default will be used."],
[4,1398,"Takes a boolean. If set to true, TCP6 Segmentation Offload (tx-tcp6-segmentation) is enabled. When unset, the kernel's default will be used."],
[4,1399,"Takes a boolean. If set to true, Generic Segmentation Offload (GSO) is enabled. When unset, the kernel's default will be used."],
[4,1400,"Takes a boolean. If set to true, Generic Receive Offload (GRO) is enabled. When unset, the kernel's default will be used."],
[4,1401,"Takes a boolean. If set to true, hardware accelerated Generic Receive Offload (GRO) is enabled. When unset, the kernel's default will be used."],
[4,1402,"Takes a boolean. If set to true, Large Receive Offload (LRO) is enabled. When unset, the kernel's default will be used."],
[4,1403,"Takes a boolean. If set to true, receive VLAN CTAG hardware acceleration is enabled. When unset, the kernel's default will be used."],
[4,1404,"Takes a boolean. If set to true, transmit VLAN CTAG hardware acceleration is enabled. When unset, the kernel's default will be used."],
[4,1405,"Takes a boolean. If set to true, receive filtering on VLAN CTAGs is enabled. When unset, the kernel's default will be used."],
[4,1406,"Takes a boolean. If set to true, transmit VLAN STAG HW acceleration is enabled. When unset, the kernel's default will be used."],
[4,1407,"Takes a boolean. If set to true, receive N-tuple filters and actions are enabled. When unset, the kernel's default will be used."],
[4,1408,"Specifies the number of receive, transmit, other, or combined channels, respectively. Takes an unsigned integer in the range 1â€¦4294967295 or \"`max`\". If set to \"`max`\", the advertised maximum value of the hardware will be used. When unset, the number will not be changed. Defaults to unset."],
[4,1409,"Specifies the maximum number of pending packets in the NIC receive buffer, mini receive buffer, jumbo receive buffer, or transmit buffer, respectively. Takes an unsigned integer in the range 1â€¦4294967295 or \"`max`\". If set to \"`max`\", the advertised maximum value of the hardware will be used. When unset, the number will not be changed. Defaults to unset."],
[4,1410,"Takes a boolean. When set, enables receive flow control, also known as the ethernet receive PAUSE message (generate and send ethernet PAUSE frames). When unset, the kernel's default will be used."],
[4,1411,"Takes a boolean. When set, enables transmit flow control, also known as the ethernet transmit PAUSE message (respond to received ethernet PAUSE frames). When unset, the kernel's default will be used."],
[4,1412,"Takes a boolean. When set, auto negotiation enables the interface to exchange state advertisements with the connected peer so that the two devices can agree on the ethernet PAUSE configuration. When unset, the kernel's default will be used."],
[4,1413,"Specifies the maximum size of a Generic Segment Offload (GSO) packet the device should accept. The usual suffixes K, M, G are supported and are understood to the base of 1024. An unsigned integer in the range 1â€¦65536. Defaults to unset."],
[4,1414,"Specifies the maximum number of Generic Segment Offload (GSO) segments the device should accept. An unsigned integer in the range 1â€¦65535. Defaults to unset."],
[4,1415,"Boolean properties that, when set, enable/disable adaptive Rx/Tx coalescing if the hardware supports it. When unset, the kernel's default will be used."],
[4,1416,"These properties configure the delay before Rx/Tx interrupts are generated after a packet is sent/received. The \"`Irq`\" properties come into effect when the host is servicing an IRQ. The \"`Low`\" and \"`High`\" properties come into effect when the packet rate drops below the low packet rate threshold or exceeds the high packet rate threshold respectively if adaptive Rx/Tx coalescing is enabled. When unset, the kernel's defaults will be used."],
[4,1417,"These properties configure the maximum number of frames that are sent/received before a Rx/Tx interrupt is generated. The \"`Irq`\" properties come into effect when the host is servicing an IRQ. The \"`Low`\" and \"`High`\" properties come into effect when the packet rate drops below the low packet rate threshold or exceeds the high packet rate threshold respectively if adaptive Rx/Tx coalescing is enabled. When unset, the kernel's defaults will be used."],
[4,1418,"These properties configure the low and high packet rate (expressed in packets per second) threshold respectively and are used to determine when the corresponding coalescing settings for low and high packet rates come into effect if adaptive Rx/Tx coalescing is enabled. If unset, the kernel's defaults will be used."],
[4,1419,"Configures how often to sample the packet rate used for adaptive Rx/Tx coalescing. This property cannot be zero. This lowest time granularity supported by this property is seconds. Partial seconds will be rounded up before being passed to the kernel. If unset, the kernel's default will be used."],
[4,1420,"How long to delay driver in-memory statistics block updates. If the driver does not have an in-memory statistic block, this property is ignored. This property cannot be zero. If unset, the kernel's default will be used."],
[2,"Advertise","",1394,37],
[2,"Alias","",1355,37],
[2,"AlternativeName","",1371,37],
[2,"AlternativeNamesPolicy","",1370,37],
[2,"Architecture","",1352,37],
[2,"AutoNegotiation","",1378,37],
[2,"AutoNegotiationFlowControl","",1412,37],
[2,"BitsPerSecond","",1376,37],
[2,"CoalescePacketRateHigh","",1418,37],
[2,"CoalescePacketRateLow","",1418,37],
[2,"CoalescePacketRateSampleIntervalSec","",1419,37],
[2,"CombinedChannels","",1408,37],
[2,"Description","",1354,37],
[2,"Driver","",1344,37],
[2,"Duplex","",1377,37],
[2,"Firmware","",1353,37],
[2,"GenericReceiveOffload","",1400,37],
[2,"GenericReceiveOffloadHardware","",1401,37],
[2,"GenericSegmentOffloadMaxBytes","",1413,37],
[2,"GenericSegmentOffloadMaxSegments","",1414,37],
[2,"GenericSegmentationOffload","",1399,37],
[2,"Host","",1348,37],
[2,"KernelCommandLine","",1350,37],
[2,"KernelVersion","",1351,37],
[2,"LargeReceiveOffload","",1402,37],
[2,"MACAddress","",1336,37],
[2,"MACAddressPolicy","",1356,37],
[2,"MTUBytes","",1375,37],
[2,"NTupleFilter","",1407,37],
[2,"Name","",1369,37],
[2,"NamePolicy","",1361,37],
[2,"OriginalName","",1347,37],
[2,"OtherChannels","",1408,37],
[2,"Path","",1343,37],
[2,"PermanentMACAddress","",1342,37],
[2,"Port","",1388,37],
[2,"Property","",1346,37],
[2,"ReceiveChecksumOffload","",1395,37],
[2,"ReceiveQueues","",1373,37],
[2,"ReceiveVLANCTAGFilter","",1405,37],
[2,"ReceiveVLANCTAGHardwareAcceleration","",1403,37],
[2,"RxBufferSize","",1409,37],
[2,"RxChannels","",1408,37],
[2,"RxCoalesceHighSec","",1416,37],
[2,"RxCoalesceIrqSec","",1416,37],
[2,"RxCoalesceLowSec","",1416,37],
[2,"RxCoalesceSec","",1416,37],
[2,"RxFlowControl","",1410,37],
[2,"RxJumboBufferSize","",1409,37],
[2,"RxMaxCoalescedFrames","",1417,37],
[2,"RxMaxCoalescedHighFrames","",1417,37],
[2,"RxMaxCoalescedIrqFrames","",1417,37],
[2,"RxMaxCoalescedLowFrames","",1417,37],
[2,"RxMiniBufferSize","",1409,37],
[2,"StatisticsBlockCoalesceSec","",1420,37],
[2,"TCP6SegmentationOffload","",1398,37],
[2,"TCPSegmentationOffload","",1397,37],
[2,"TransmitChecksumOffload","",1396,37],
[2,"TransmitQueueLength","",1374,37],
[2,"TransmitQueues","",1372,37],
[2,"TransmitVLANCTAGHardwareAcceleration","",1404,37],
[2,"TransmitVLANSTAGHardwareAcceleration","",1406,37],
[2,"TxBufferSize","",1409,37],
[2,"TxChannels","",1408,37],
[2,"TxCoalesceHighSec","",1416,37],
[2,"TxCoalesceIrqSec","",1416,37],
[2,"TxCoalesceLowSec","",1416,37],
[2,"TxCoalesceSec","",1416,37],
[2,"TxFlowControl","",1411,37],
[2,"TxMaxCoalescedFrames","",1417,37],
[2,"TxMaxCoalescedHighFrames","",1417,37],
[2,"TxMaxCoalescedIrqFrames","",1417,37],
[2,"TxMaxCoalescedLowFrames","",1417,37],
[2,"Type","",1345,37],
[2,"UseAdaptiveRxCoalesce","",1415,37],
[2,"UseAdaptiveTxCoalesce","",1415,37],
[2,"Virtualization","",1349,37],
[2,"WakeOnLan","",1379,37],
[2,"WakeOnLanPassword","",1387,37],
[3,38,"resolved.conf(5)","resolved.conf, resolved.conf.d â€” Network Name Resolution configuration files","resolved.conf.html"],
[4,1421,"A space-separated list of IPv4 and IPv6 addresses to use as system DNS servers. Each address can optionally take a port number separated with \"`:`\", a network interface name or index separated with \"`%`\", and a Server Name Indication (SNI) separated with \"`#`\". When IPv6 address is specified with a port number, then the address must be in the square brackets. That is, the acceptable full formats are \"`111.222.333.444:9953%ifname#example.com`\" for IPv4 and \"`[1111:2222::3333]:9953%ifname#example.com`\" for IPv6. DNS requests are sent to one of the listed DNS servers in parallel to suitable per-link DNS servers acquired from [systemd-networkd.service(8)](systemd-networkd.service.html#) or set at runtime by external applications. For compatibility reasons, if this setting is not specified, the DNS servers listed in `/etc/resolv.conf` are used instead, if that file exists and any servers are configured in it. This setting defaults to the empty list."],
[4,1422,"A space-separated list of IPv4 and IPv6 addresses to use as the fallback DNS servers. Please see `DNS=` for acceptable format of addresses. Any per-link DNS servers obtained from [systemd-networkd.service(8)](systemd-networkd.service.html#) take precedence over this setting, as do any servers set via `DNS=` above or `/etc/resolv.conf`. This setting is hence only used if no other DNS server information is known. If this option is not given, a compiled-in list of DNS servers is used instead."],
[4,1423,"A space-separated list of domains optionally prefixed with \"`~`\", used for two distinct purposes described below. Defaults to the empty list.\n\nAny domains _not_ prefixed with \"`~`\" are used as search suffixes when resolving single-label hostnames (domain names which contain no dot), in order to qualify them into fully-qualified domain names (FQDNs). These \"search domains\" are strictly processed in the order they are specified in, until the name with the suffix appended is found. For compatibility reasons, if this setting is not specified, the search domains listed in `/etc/resolv.conf` with the `search` keyword are used instead, if that file exists and any domains are configured in it.\n\nThe domains prefixed with \"`~`\" are called \"routing domains\". All domains listed here (both search domains and routing domains after removing the \"`~`\" prefix) define a search path that preferably directs DNS queries to this interface. This search path has an effect only when suitable per-link DNS servers are known. Such servers may be defined through the `DNS=` setting (see above) and dynamically at run time, for example from DHCP leases. If no per-link DNS servers are known, routing domains have no effect.\n\nUse the construct \"`~.`\" (which is composed from \"`~`\" to indicate a routing domain and \"`.`\" to indicate the DNS root domain that is the implied suffix of all DNS domains) to use the DNS servers defined for this link preferably for all domains."],
[4,1424,"Takes a boolean argument or \"`resolve`\". Controls Link-Local Multicast Name Resolution support ([RFC 4795](https://tools.ietf.org/html/rfc4795)) on the local host. If true, enables full LLMNR responder and resolver support. If false, disables both. If set to \"`resolve`\", only resolution support is enabled, but responding is disabled. Note that [systemd-networkd.service(8)](systemd-networkd.service.html#) also maintains per-link LLMNR settings. LLMNR will be enabled on a link only if the per-link and the global setting is on."],
[4,1425,"Takes a boolean argument or \"`resolve`\". Controls Multicast DNS support ([RFC 6762](https://tools.ietf.org/html/rfc6762)) on the local host. If true, enables full Multicast DNS responder and resolver support. If false, disables both. If set to \"`resolve`\", only resolution support is enabled, but responding is disabled. Note that [systemd-networkd.service(8)](systemd-networkd.service.html#) also maintains per-link Multicast DNS settings. Multicast DNS will be enabled on a link only if the per-link and the global setting is on."],
[4,1426,"Takes a boolean argument or \"`allow-downgrade`\". If true all DNS lookups are DNSSEC-validated locally (excluding LLMNR and Multicast DNS). If the response to a lookup request is detected to be invalid a lookup failure is returned to applications. Note that this mode requires a DNS server that supports DNSSEC. If the DNS server does not properly support DNSSEC all validations will fail. If set to \"`allow-downgrade`\" DNSSEC validation is attempted, but if the server does not support DNSSEC properly, DNSSEC mode is automatically disabled. Note that this mode makes DNSSEC validation vulnerable to \"downgrade\" attacks, where an attacker might be able to trigger a downgrade to non-DNSSEC mode by synthesizing a DNS response that suggests DNSSEC was not supported. If set to false, DNS lookups are not DNSSEC validated.\n\nNote that DNSSEC validation requires retrieval of additional DNS data, and thus results in a small DNS look-up time penalty.\n\nDNSSEC requires knowledge of \"trust anchors\" to prove data integrity. The trust anchor for the Internet root domain is built into the resolver, additional trust anchors may be defined with [dnssec-trust-anchors.d(5)](dnssec-trust-anchors.d.html#). Trust anchors may change at regular intervals, and old trust anchors may be revoked. In such a case DNSSEC validation is not possible until new trust anchors are configured locally or the resolver software package is updated with the new root trust anchor. In effect, when the built-in trust anchor is revoked and `DNSSEC=` is true, all further lookups will fail, as it cannot be proved anymore whether lookups are correctly signed, or validly unsigned. If `DNSSEC=` is set to \"`allow-downgrade`\" the resolver will automatically turn off DNSSEC validation in such a case.\n\nClient programs looking up DNS data will be informed whether lookups could be verified using DNSSEC, or whether the returned data could not be verified (either because the data was found unsigned in the DNS, or the DNS server did not support DNSSEC or no appropriate trust anchors were known). In the latter case it is assumed that client programs employ a secondary scheme to validate the returned DNS data, should this be required.\n\nIt is recommended to set `DNSSEC=` to true on systems where it is known that the DNS server supports DNSSEC correctly, and where software or trust anchor updates happen regularly. On other systems it is recommended to set `DNSSEC=` to \"`allow-downgrade`\".\n\nIn addition to this global DNSSEC setting [systemd-networkd.service(8)](systemd-networkd.service.html#) also maintains per-link DNSSEC settings. For system DNS servers (see above), only the global DNSSEC setting is in effect. For per-link DNS servers the per-link setting is in effect, unless it is unset in which case the global setting is used instead.\n\nSite-private DNS zones generally conflict with DNSSEC operation, unless a negative (if the private zone is not signed) or positive (if the private zone is signed) trust anchor is configured for them. If \"`allow-downgrade`\" mode is selected, it is attempted to detect site-private DNS zones using top-level domains (TLDs) that are not known by the DNS root server. This logic does not work in all private zone setups.\n\nDefaults to \"`allow-downgrade`\"."],
[4,1427,"Takes a boolean argument or \"`opportunistic`\". If true all connections to the server will be encrypted. Note that this mode requires a DNS server that supports DNS-over-TLS and has a valid certificate. If the hostname was specified in `DNS=` by using the format \"`address#server_name`\" it is used to validate its certificate and also to enable Server Name Indication (SNI) when opening a TLS connection. Otherwise the certificate is checked against the server's IP. If the DNS server does not support DNS-over-TLS all DNS requests will fail.\n\nWhen set to \"`opportunistic`\" DNS request are attempted to send encrypted with DNS-over-TLS. If the DNS server does not support TLS, DNS-over-TLS is disabled. Note that this mode makes DNS-over-TLS vulnerable to \"downgrade\" attacks, where an attacker might be able to trigger a downgrade to non-encrypted mode by synthesizing a response that suggests DNS-over-TLS was not supported. If set to false, DNS lookups are send over UDP.\n\nNote that DNS-over-TLS requires additional data to be send for setting up an encrypted connection, and thus results in a small DNS look-up time penalty.\n\nNote that in \"`opportunistic`\" mode the resolver is not capable of authenticating the server, so it is vulnerable to \"man-in-the-middle\" attacks.\n\nIn addition to this global `DNSOverTLS=` setting [systemd-networkd.service(8)](systemd-networkd.service.html#) also maintains per-link `DNSOverTLS=` settings. For system DNS servers (see above), only the global `DNSOverTLS=` setting is in effect. For per-link DNS servers the per-link setting is in effect, unless it is unset in which case the global setting is used instead.\n\nDefaults to off."],
[4,1428,"Takes a boolean or \"`no-negative`\" as argument. If \"`yes`\" (the default), resolving a domain name which already got queried earlier will return the previous result as long as it is still valid, and thus does not result in a new network request. Be aware that turning off caching comes at a performance penalty, which is particularly high when DNSSEC is used. If \"`no-negative`\", only positive answers are cached.\n\nNote that caching is turned off by default for host-local DNS servers. See `CacheFromLocalhost=` for details."],
[4,1429,"Takes a boolean as argument. If \"`no`\" (the default), and response cames from host-local IP address (such as 127.0.0.1 or ::1), the result wouldn't be cached in order to avoid potential duplicate local caching."],
[4,1430,"Takes a boolean argument or one of \"`udp`\" and \"`tcp`\". If \"`udp`\", a DNS stub resolver will listen for UDP requests on addresses 127.0.0.53 and 127.0.0.54, port 53. If \"`tcp`\", the stub will listen for TCP requests on the same addresses and port. If \"`yes`\" (the default), the stub listens for both UDP and TCP requests. If \"`no`\", the stub listener is disabled.\n\nThe DNS stub resolver on 127.0.0.53 provides the full feature set of the local resolver, which includes offering LLMNR/MulticastDNS resolution. The DNS stub resolver on 127.0.0.54 provides a more limited resolver, that operates in \"proxy\" mode only, i.e. it will pass most DNS messages relatively unmodified to the current upstream DNS servers and back, but not try to process the messages locally, and hence does not validate DNSSEC, or offer up LLMNR/MulticastDNS. (It will translate to DNS-over-TLS communication if needed however.)\n\nNote that the DNS stub listener is turned off implicitly when its listening address and port are already in use."],
[4,1431,"Takes an IPv4 or IPv6 address to listen on. The address may be optionally prefixed with a protocol name (\"`udp`\" or \"`tcp`\") separated with \"`:`\". If the protocol is not specified, the service will listen on both UDP and TCP. It may be also optionally suffixed by a numeric port number with separator \"`:`\". When an IPv6 address is specified with a port number, then the address must be in the square brackets. If the port is not specified, then the service uses port 53. Note that this is independent of the primary DNS stub configured with `DNSStubListener=`, and only configures _additional_ sockets to listen on. This option can be specified multiple times. If an empty string is assigned, then the all previous assignments are cleared. Defaults to unset.\n\nExamples:\n\nDNSStubListenerExtra=192.168.10.10\nDNSStubListenerExtra=2001:db8:0:f102::10\nDNSStubListenerExtra=192.168.10.11:9953\nDNSStubListenerExtra=\\[2001:db8:0:f102::11\\]:9953\nDNSStubListenerExtra=tcp:192.168.10.12\nDNSStubListenerExtra=udp:2001:db8:0:f102::12\nDNSStubListenerExtra=tcp:192.168.10.13:9953\nDNSStubListenerExtra=udp:\\[2001:db8:0:f102::13\\]:9953"],
[4,1432,"Takes a boolean argument. If \"`yes`\" (the default), **systemd-resolved** will read `/etc/hosts`, and try to resolve hosts or address by using the entries in the file before sending query to DNS servers."],
[4,1433,"Takes a boolean argument. When false (the default), **systemd-resolved** will not resolve A and AAAA queries for single-label names over classic DNS. Note that such names may still be resolved if search domains are specified (see `Domains=` above), or using other mechanisms, in particular via LLMNR or from `/etc/hosts`. When true, queries for single-label names will be forwarded to global DNS servers even if no search domains are defined.\n\nThis option is provided for compatibility with configurations where _public DNS servers are not used_. Forwarding single-label names to servers not under your control is not standard-conformant, see [IAB Statement](https://www.iab.org/documents/correspondence-reports-documents/2013-2/iab-statement-dotless-domains-considered-harmful/), and may create a privacy and security risk."],
[2,"Cache","",1428,38],
[2,"CacheFromLocalhost","",1429,38],
[2,"DNS","",1421,38],
[2,"DNSOverTLS","",1427,38],
[2,"DNSSEC","",1426,38],
[2,"DNSStubListener","",1430,38],
[2,"DNSStubListenerExtra","",1431,38],
[2,"Domains","",1423,38],
[2,"FallbackDNS","",1422,38],
[2,"LLMNR","",1424,38],
[2,"MulticastDNS","",1425,38],
[2,"ReadEtcHosts","",1432,38],
[2,"ResolveUnicastSingleLabel","",1433,38],
[3,39,"timesyncd.conf(5)","timesyncd.conf, timesyncd.conf.d â€” Network Time Synchronization configuration files","timesyncd.conf.html"],
[4,1434,"A space-separated list of NTP server host names or IP addresses. During runtime this list is combined with any per-interface NTP servers acquired from [systemd-networkd.service(8)](systemd-networkd.service.html#). **systemd-timesyncd** will contact all configured system or per-interface servers in turn, until one responds. When the empty string is assigned, the list of NTP servers is reset, and all prior assignments will have no effect. This setting defaults to an empty list."],
[4,1435,"A space-separated list of NTP server host names or IP addresses to be used as the fallback NTP servers. Any per-interface NTP servers obtained from [systemd-networkd.service(8)](systemd-networkd.service.html#) take precedence over this setting, as do any servers set via `NTP=` above. This setting is hence only relevant if no other NTP server information is known. When the empty string is assigned, the list of NTP servers is reset, and all prior assignments will have no effect. If this option is not given, a compiled-in list of NTP servers is used."],
[4,1436,"Maximum acceptable root distance, i.e. the maximum estimated time required for a packet to travel to the server we are connected to from the server with the reference clock. If the current server does not satisfy this limit, **systemd-timesyncd** will switch to a different server.\n\nTakes a time span value. The default unit is seconds, but other units may be specified, see [systemd.time(5)](systemd.time.html#). Defaults to 5 seconds."],
[4,1437,"The minimum and maximum poll intervals for NTP messages. Polling starts at the minimum poll interval, and is adjusted within the specified limits in response to received packets.\n\nEach setting takes a time span value. The default unit is seconds, but other units may be specified, see [systemd.time(5)](systemd.time.html#). `PollIntervalMinSec=` defaults to 32 seconds and must not be smaller than 16Â seconds. `PollIntervalMaxSec=` defaults to 34Â minÂ 8Â s (2048Â seconds) and must be larger than `PollIntervalMinSec=`."],
[4,1438,"Specifies the minimum delay before subsequent attempts to contact a new NTP server are made.\n\nTakes a time span value. The default unit is seconds, but other units may be specified, see [systemd.time(5)](systemd.time.html#). Defaults to 30 seconds and must not be smaller than 1 second."],
[4,1439,"The interval at which the current time is periodically saved to disk, in the absence of any recent synchronisation from an NTP server. This is especially useful for offline systems with no local RTC, as it will guarantee that the system clock remains roughly monotonic across reboots.\n\nTakes a time interval value. The default unit is seconds, but other units may be specified, see [systemd.time(5)](systemd.time.html#). Defaults to 60 seconds."],
[2,"ConnectionRetrySec","",1438,39],
[2,"FallbackNTP","",1435,39],
[2,"NTP","",1434,39],
[2,"PollIntervalMaxSec","",1437,39],
[2,"PollIntervalMinSec","",1437,39],
[2,"RootDistanceMaxSec","",1436,39],
[2,"SaveIntervalSec","",1439,39],
[3,40,"networkd.conf(5)","networkd.conf, networkd.conf.d â€” Global Network configuration files","networkd.conf.html"],
[4,1440,"Takes a boolean. If set to yes, then **systemd-networkd** measures the traffic of each interface, and **networkctl status _`INTERFACE`_** shows the measured speed. Defaults to no."],
[4,1441,"Specifies the time interval to calculate the traffic speed of each interface. If `SpeedMeter=no`, the value is ignored. Defaults to 10sec."],
[4,1442,"A boolean. When true, **systemd-networkd** will remove rules that are not configured in .network files (except for rules with protocol \"`kernel`\"). When false, it will not remove any foreign rules, keeping them even if they are not configured in a .network file. Defaults to yes."],
[4,1443,"A boolean. When true, **systemd-networkd** will remove routes that are not configured in .network files (except for routes with protocol \"`kernel`\", \"`dhcp`\" when `KeepConfiguration=` is true or \"`dhcp`\", and \"`static`\" when `KeepConfiguration=` is true or \"`static`\"). When false, it will not remove any foreign routes, keeping them even if they are not configured in a .network file. Defaults to yes."],
[4,1444,"Defines the route table name. Takes a whitespace-separated list of the pairs of route table name and number. The route table name and number in each pair are separated with a colon, i.e., \"``_`name`_:_`number`_``\". The route table name must not be \"`default`\", \"`main`\", or \"`local`\", as these route table names are predefined with route table number 253, 254, and 255, respectively. The route table number must be an integer in the range 1â€¦4294967295. This setting can be specified multiple times. If an empty string is specified, then the list specified earlier are cleared. Defaults to unset."],
[4,1445,"Specifies how the DUID should be generated. See [RFC 3315](https://tools.ietf.org/html/rfc3315#section-9) for a description of all the options.\n\nThe following values are understood:\n\n`vendor`[Â¶](#vendor \"Permalink to this term\")\n\nIf \"`DUIDType=vendor`\", then the DUID value will be generated using \"`43793`\" as the vendor identifier (systemd) and hashed contents of [machine-id(5)](machine-id.html#). This is the default if `DUIDType=` is not specified.\n\n`uuid`[Â¶](#uuid \"Permalink to this term\")\n\nIf \"`DUIDType=uuid`\", and `DUIDRawData=` is not set, then the product UUID is used as a DUID value. If a system does not have valid product UUID, then an application-specific [machine-id(5)](machine-id.html#) is used as a DUID value. About the application-specific machine ID, see [sd\\_id128\\_get\\_machine\\_app\\_specific(3)](sd_id128_get_machine_app_specific.html#).\n\n``link-layer-time[:_`TIME`_]``, `link-layer`[Â¶](#link-layer-time%5B:TIME%5D \"Permalink to this term\")\n\nIf \"`link-layer-time`\" or \"`link-layer`\" is specified, then the MAC address of the interface is used as a DUID value. The value \"`link-layer-time`\" can take additional time value after a colon, e.g. \"`link-layer-time:2018-01-23 12:34:56 UTC`\". The default time value is \"`2000-01-01 00:00:00 UTC`\".\n\nIn all cases, `DUIDRawData=` can be used to override the actual DUID value that is used."],
[4,1446,"If \"`DUIDType=vendor`\", then the DUID value will be generated using \"`43793`\" as the vendor identifier (systemd) and hashed contents of [machine-id(5)](machine-id.html#). This is the default if `DUIDType=` is not specified."],
[4,1447,"If \"`DUIDType=uuid`\", and `DUIDRawData=` is not set, then the product UUID is used as a DUID value. If a system does not have valid product UUID, then an application-specific [machine-id(5)](machine-id.html#) is used as a DUID value. About the application-specific machine ID, see [sd\\_id128\\_get\\_machine\\_app\\_specific(3)](sd_id128_get_machine_app_specific.html#)."],
[4,1448,"If \"`link-layer-time`\" or \"`link-layer`\" is specified, then the MAC address of the interface is used as a DUID value. The value \"`link-layer-time`\" can take additional time value after a colon, e.g. \"`link-layer-time:2018-01-23 12:34:56 UTC`\". The default time value is \"`2000-01-01 00:00:00 UTC`\"."],
[4,1449,"Specifies the DHCP DUID value as a single newline-terminated, hexadecimal string, with each byte separated by \"`:`\". The DUID that is sent is composed of the DUID type specified by `DUIDType=` and the value configured here.\n\nThe DUID value specified here overrides the DUID that [systemd-networkd.service(8)](systemd-networkd.service.html#) generates from the machine ID. To configure DUID per-network, see [systemd.network(5)](systemd.network.html#). The configured DHCP DUID should conform to the specification in [RFC 3315](http://tools.ietf.org/html/rfc3315#section-9), [RFC 6355](http://tools.ietf.org/html/rfc6355). To configure IAID, see [systemd.network(5)](systemd.network.html#).\n\n**ExampleÂ 1.Â A `DUIDType=vendor` with a custom value**\n\nDUIDType=vendor\nDUIDRawData=00:00:ab:11:f9:2a:c2:77:29:f9:5c:00\n\nThis specifies a 14 byte DUID, with the type DUID-EN (\"`00:02`\"), enterprise number 43793 (\"`00:00:ab:11`\"), and identifier value \"`f9:2a:c2:77:29:f9:5c:00`\"."],
[4,1450,"As in the \\[DHCPv4\\] section."],
[2,"DUIDRawData","",1449,40],
[2,"DUIDType","",1445,40],
[2,"ManageForeignRoutes","",1443,40],
[2,"ManageForeignRoutingPolicyRules","",1442,40],
[2,"RouteTable","",1444,40],
[2,"SpeedMeter","",1440,40],
[2,"SpeedMeterIntervalSec","",1441,40],
[3,41,"systemd.dnssd(5)","systemd.dnssd â€” DNS-SD configuration","systemd.dnssd.html"],
[4,1451,"An instance name of the network service as defined in the section 4.1.1 of [RFC 6763](https://tools.ietf.org/html/rfc6763), e.g. \"`webserver`\".\n\nThe option supports simple specifier expansion. The following expansions are understood:\n\n**TableÂ 1.Â Specifiers available**\n\nSpecifier\n\nMeaning\n\nDetails\n\n\"`%a`\"\n\nArchitecture\n\nA short string identifying the architecture of the local system. A string such as `x86`, `x86-64` or `arm64`. See the architectures defined for `ConditionArchitecture=` in [systemd.unit(5)](systemd.unit.html#) for a full list.\n\n\"`%A`\"\n\nOperating system image version\n\nThe operating system image version identifier of the running system, as read from the `IMAGE_VERSION=` field of `/etc/os-release`. If not set, resolves to an empty string. See [os-release(5)](os-release.html#) for more information.\n\n\"`%b`\"\n\nBoot ID\n\nThe boot ID of the running system, formatted as string. See [random(4)](http://man7.org/linux/man-pages/man4/random.4.html) for more information.\n\n\"`%B`\"\n\nOperating system build ID\n\nThe operating system build identifier of the running system, as read from the `BUILD_ID=` field of `/etc/os-release`. If not set, resolves to an empty string. See [os-release(5)](os-release.html#) for more information.\n\n\"`%H`\"\n\nHost name\n\nThe hostname of the running system.\n\n\"`%m`\"\n\nMachine ID\n\nThe machine ID of the running system, formatted as string. See [machine-id(5)](machine-id.html#) for more information.\n\n\"`%M`\"\n\nOperating system image identifier\n\nThe operating system image identifier of the running system, as read from the `IMAGE_ID=` field of `/etc/os-release`. If not set, resolves to an empty string. See [os-release(5)](os-release.html#) for more information.\n\n\"`%o`\"\n\nOperating system ID\n\nThe operating system identifier of the running system, as read from the `ID=` field of `/etc/os-release`. See [os-release(5)](os-release.html#) for more information.\n\n\"`%v`\"\n\nKernel release\n\nIdentical to **uname -r** output.\n\n\"`%w`\"\n\nOperating system version ID\n\nThe operating system version identifier of the running system, as read from the `VERSION_ID=` field of `/etc/os-release`. If not set, resolves to an empty string. See [os-release(5)](os-release.html#) for more information.\n\n\"`%W`\"\n\nOperating system variant ID\n\nThe operating system variant identifier of the running system, as read from the `VARIANT_ID=` field of `/etc/os-release`. If not set, resolves to an empty string. See [os-release(5)](os-release.html#) for more information.\n\n\"`%%`\"\n\nSingle percent sign\n\nUse \"`%%`\" in place of \"`%`\" to specify a single percent sign."],
[4,1452,"A type of the network service as defined in the section 4.1.2 of [RFC 6763](https://tools.ietf.org/html/rfc6763), e.g. \"`_http._tcp`\"."],
[4,1453,"An IP port number of the network service."],
[4,1454,"A priority number set in `SRV` resource records corresponding to the network service."],
[4,1455,"A weight number set in `SRV` resource records corresponding to the network service."],
[4,1456,"A whitespace-separated list of arbitrary key/value pairs conveying additional information about the named service in the corresponding TXT resource record, e.g. \"`path=/portal/index.html`\". Keys and values can contain C-style escape sequences which get translated upon reading configuration files.\n\nThis option together with `TxtData=` may be specified more than once, in which case multiple TXT resource records will be created for the service. If the empty string is assigned to this option, the list is reset and all prior assignments will have no effect."],
[4,1457,"A whitespace-separated list of arbitrary key/value pairs conveying additional information about the named service in the corresponding TXT resource record where values are base64-encoded string representing any binary data, e.g. \"`data=YW55IGJpbmFyeSBkYXRhCg==`\". Keys can contain C-style escape sequences which get translated upon reading configuration files.\n\nThis option together with `TxtText=` may be specified more than once, in which case multiple TXT resource records will be created for the service. If the empty string is assigned to this option, the list is reset and all prior assignments will have no effect."],
[2,"Name","",1451,41],
[2,"Port","",1453,41],
[2,"Priority","",1454,41],
[2,"TxtData","",1457,41],
[2,"TxtText","",1456,41],
[2,"Type","",1452,41],
[2,"Weight","",1455,41],
[3,42,"systemd.journal-fields(7)","systemd.journal-fields â€” Special journal fields","systemd.journal-fields.html"],
[4,1458,"The human-readable message string for this entry. This is supposed to be the primary text shown to the user. It is usually not translated (but might be in some cases), and is not supposed to be parsed for metadata."],
[4,1459,"A 128-bit message identifier ID for recognizing certain message types, if this is desirable. This should contain a 128-bit ID formatted as a lower-case hexadecimal string, without any separating dashes or suchlike. This is recommended to be a UUID-compatible ID, but this is not enforced, and formatted differently. Developers can generate a new ID for this purpose with **systemd-id128 new**."],
[4,1460,"A priority value between 0 (\"`emerg`\") and 7 (\"`debug`\") formatted as a decimal string. This field is compatible with syslog's priority concept."],
[4,1461,"The code location generating this message, if known. Contains the source filename, the line number and the function name."],
[4,1462,"The low-level Unix error number causing this entry, if any. Contains the numeric value of [errno(3)](http://man7.org/linux/man-pages/man3/errno.3.html) formatted as a decimal string."],
[4,1463,"A randomized, unique 128-bit ID identifying each runtime cycle of the unit. This is different from `_SYSTEMD_INVOCATION_ID` in that it is only used for messages coming from systemd code (e.g. logs from the system/user manager or from forked processes performing systemd-related setup)."],
[4,1464,"Syslog compatibility fields containing the facility (formatted as decimal string), the identifier string (i.e. \"tag\"), the client PID, and the timestamp as specified in the original datagram. (Note that the tag is usually derived from glibc's `program_invocation_short_name` variable, see [program\\_invocation\\_short\\_name(3)](http://linux.die.net/man/3/program_invocation_short_name).)\n\nNote that the journal service does not validate the values of any structured journal fields whose name is not prefixed with an underscore, and this includes any syslog related fields such as these. Hence, applications that supply a facility, PID, or log level are expected to do so properly formatted, i.e. as numeric integers formatted as decimal strings."],
[4,1465,"The original contents of the syslog line as received in the syslog datagram. This field is only included if the `MESSAGE=` field was modified compared to the original payload or the timestamp could not be located properly and is not included in `SYSLOG_TIMESTAMP=`. Message truncation occurs when the message contains leading or trailing whitespace (trailing and leading whitespace is stripped), or it contains an embedded `NUL` byte (the `NUL` byte and anything after it is not included). Thus, the original syslog line is either stored as `SYSLOG_RAW=` or it can be recreated based on the stored priority and facility, timestamp, identifier, and the message payload in `MESSAGE=`."],
[4,1466,"A documentation URL with further information about the topic of the log message. Tools such as **journalctl** will include a hyperlink to an URL specified this way in their output. Should be a \"`http://`\", \"`https://`\", \"`file:/`\", \"`man:`\" or \"`info:`\" URL."],
[4,1467,"The numeric thread ID (TID) the log message originates from."],
[4,1468,"The process, user, and group ID of the process the journal entry originates from formatted as a decimal string. Note that entries obtained via \"`stdout`\" or \"`stderr`\" of forked processes will contain credentials valid for a parent process (that initiated the connection to **systemd-journald**)."],
[4,1469,"The name, the executable path, and the command line of the process the journal entry originates from."],
[4,1470,"The effective [capabilities(7)](http://man7.org/linux/man-pages/man7/capabilities.7.html) of the process the journal entry originates from."],
[4,1471,"The session and login UID of the process the journal entry originates from, as maintained by the kernel audit subsystem."],
[4,1472,"The control group path in the systemd hierarchy, the systemd slice unit name, the systemd unit name, the unit name in the systemd user manager (if any), the systemd session ID (if any), and the owner UID of the systemd user unit or systemd session (if any) of the process the journal entry originates from."],
[4,1473,"The SELinux security context (label) of the process the journal entry originates from."],
[4,1474,"The earliest trusted timestamp of the message, if any is known that is different from the reception time of the journal. This is the time in microseconds since the epoch UTC, formatted as a decimal string."],
[4,1475,"The kernel boot ID for the boot the message was generated in, formatted as a 128-bit hexadecimal string."],
[4,1476,"The machine ID of the originating host, as available in [machine-id(5)](machine-id.html#)."],
[4,1477,"The invocation ID for the runtime cycle of the unit the message was generated in, as available to processes of the unit in `$INVOCATION_ID` (see [systemd.exec(5)](systemd.exec.html#))."],
[4,1478,"The name of the originating host."],
[4,1479,"How the entry was received by the journal service. Valid transports are:\n\n`audit` [Â¶](#%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20audit%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20 \"Permalink to this term\")\n\nfor those read from the kernel audit subsystem\n\n`driver` [Â¶](#%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20driver%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20 \"Permalink to this term\")\n\nfor internally generated messages\n\n`syslog` [Â¶](#%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20syslog%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20 \"Permalink to this term\")\n\nfor those received via the local syslog socket with the syslog protocol\n\n`journal` [Â¶](#%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20journal%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20 \"Permalink to this term\")\n\nfor those received via the native journal protocol\n\n`stdout` [Â¶](#%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20stdout%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20 \"Permalink to this term\")\n\nfor those read from a service's standard output or error output\n\n`kernel` [Â¶](#%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20kernel%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20 \"Permalink to this term\")\n\nfor those read from the kernel"],
[4,1480,"for those read from the kernel audit subsystem"],
[4,1481,"for internally generated messages"],
[4,1482,"for those received via the local syslog socket with the syslog protocol"],
[4,1483,"for those received via the native journal protocol"],
[4,1484,"for those read from a service's standard output or error output"],
[4,1485,"for those read from the kernel"],
[4,1486,"Only applies to \"`_TRANSPORT=stdout`\" records: specifies a randomized 128bit ID assigned to the stream connection when it was first created. This ID is useful to reconstruct individual log streams from the log records: all log records carrying the same stream ID originate from the same stream."],
[4,1487,"Only applies to \"`_TRANSPORT=stdout`\" records: indicates that the log message in the standard output/error stream was not terminated with a normal newline character (\"`\\n`\", i.e. ASCII 10). Specifically, when set this field is one of `nul` (in case the line was terminated by a `NUL` byte), `line-max` (in case the maximum log line length was reached, as configured with `LineMax=` in [journald.conf(5)](journald.conf.html#)), `eof` (if this was the last log record of a stream and the stream ended without a final newline character), or `pid-change` (if the process which generated the log output changed in the middle of a line). Note that this record is not generated when a normal newline character was used for marking the log line end."],
[4,1488,"If this file was written by a **systemd-journald** instance managing a journal namespace that is not the default, this field contains the namespace identifier. See [systemd-journald.service(8)](systemd-journald.service.html#) for details about journal namespaces."],
[4,1489,"The kernel device name. If the entry is associated to a block device, contains the major and minor numbers of the device node, separated by \"`:`\" and prefixed by \"`b`\". Similarly for character devices, but prefixed by \"`c`\". For network devices, this is the interface index prefixed by \"`n`\". For all other devices, this is the subsystem name prefixed by \"`+`\", followed by \"`:`\", followed by the kernel device name."],
[4,1490,"The kernel subsystem name."],
[4,1491,"The kernel device name as it shows up in the device tree below `/sys/`."],
[4,1492,"The device node path of this device in `/dev/`."],
[4,1493,"Additional symlink names pointing to the device node in `/dev/`. This field is frequently set more than once per entry."],
[4,1494,"Used to annotate messages containing coredumps from system and session units. See [coredumpctl(1)](coredumpctl.html#)."],
[4,1495,"PID of the program that this message pertains to."],
[4,1496,"These are additional fields added automatically by **systemd-journald**. Their meaning is the same as `_UID=`, `_GID=`, `_COMM=`, `_EXE=`, `_CMDLINE=`, `_AUDIT_SESSION=`, `_AUDIT_LOGINUID=`, `_SYSTEMD_CGROUP=`, `_SYSTEMD_SESSION=`, `_SYSTEMD_UNIT=`, `_SYSTEMD_USER_UNIT=`, and `_SYSTEMD_OWNER_UID=` as described above, except that the process identified by _`PID`_ is described, instead of the process which logged the message."],
[4,1497,"The cursor for the entry. A cursor is an opaque text string that uniquely describes the position of an entry in the journal and is portable across machines, platforms and journal files."],
[4,1498,"The wallclock time (`CLOCK_REALTIME`) at the point in time the entry was received by the journal, in microseconds since the epoch UTC, formatted as a decimal string. This has different properties from \"`_SOURCE_REALTIME_TIMESTAMP=`\", as it is usually a bit later but more likely to be monotonic."],
[4,1499,"The monotonic time (`CLOCK_MONOTONIC`) at the point in time the entry was received by the journal in microseconds, formatted as a decimal string. To be useful as an address for the entry, this should be combined with the boot ID in \"`_BOOT_ID=`\"."],
[2,"CODE_FILE","",1461,42],
[2,"CODE_FUNC","",1461,42],
[2,"CODE_LINE","",1461,42],
[2,"COREDUMP_UNIT","",1494,42],
[2,"COREDUMP_USER_UNIT","",1494,42],
[2,"DOCUMENTATION","",1466,42],
[2,"ERRNO","",1462,42],
[2,"INVOCATION_ID","",1463,42],
[2,"MESSAGE","",1458,42],
[2,"MESSAGE_ID","",1459,42],
[2,"OBJECT_AUDIT_LOGINUID","",1496,42],
[2,"OBJECT_AUDIT_SESSION","",1496,42],
[2,"OBJECT_CMDLINE","",1496,42],
[2,"OBJECT_COMM","",1496,42],
[2,"OBJECT_EXE","",1496,42],
[2,"OBJECT_GID","",1496,42],
[2,"OBJECT_PID","PID",1495,42],
[2,"OBJECT_SYSTEMD_CGROUP","",1496,42],
[2,"OBJECT_SYSTEMD_OWNER_UID","",1496,42],
[2,"OBJECT_SYSTEMD_SESSION","",1496,42],
[2,"OBJECT_SYSTEMD_UNIT","",1496,42],
[2,"OBJECT_SYSTEMD_USER_UNIT","",1496,42],
[2,"OBJECT_UID","",1496,42],
[2,"PRIORITY","",1460,42],
[2,"SYSLOG_FACILITY","",1464,42],
[2,"SYSLOG_IDENTIFIER","",1464,42],
[2,"SYSLOG_PID","",1464,42],
[2,"SYSLOG_RAW","",1465,42],
[2,"SYSLOG_TIMESTAMP","",1464,42],
[2,"TID","",1467,42],
[2,"USER_INVOCATION_ID","",1463,42],
[2,"_AUDIT_LOGINUID","",1471,42],
[2,"_AUDIT_SESSION","",1471,42],
[2,"_BOOT_ID","",1475,42],
[2,"_CAP_EFFECTIVE","",1470,42],
[2,"_CMDLINE","",1469,42],
[2,"_COMM","",1469,42],
[2,"_EXE","",1469,42],
[2,"_GID","",1468,42],
[2,"_HOSTNAME","",1478,42],
[2,"_KERNEL_DEVICE","",1489,42],
[2,"_KERNEL_SUBSYSTEM","",1490,42],
[2,"_LINE_BREAK","",1487,42],
[2,"_MACHINE_ID","",1476,42],
[2,"_NAMESPACE","",1488,42],
[2,"_PID","",1468,42],
[2,"_SELINUX_CONTEXT","",1473,42],
[2,"_SOURCE_REALTIME_TIMESTAMP","",1474,42],
[2,"_STREAM_ID","",1486,42],
[2,"_SYSTEMD_CGROUP","",1472,42],
[2,"_SYSTEMD_INVOCATION_ID","",1477,42],
[2,"_SYSTEMD_OWNER_UID","",1472,42],
[2,"_SYSTEMD_SESSION","",1472,42],
[2,"_SYSTEMD_SLICE","",1472,42],
[2,"_SYSTEMD_UNIT","",1472,42],
[2,"_SYSTEMD_USER_SLICE","",1472,42],
[2,"_SYSTEMD_USER_UNIT","",1472,42],
[2,"_TRANSPORT","",1479,42],
[2,"_UDEV_DEVLINK","",1493,42],
[2,"_UDEV_DEVNODE","",1492,42],
[2,"_UDEV_SYSNAME","",1491,42],
[2,"_UID","",1468,42],
[2,"__CURSOR","",1497,42],
[2,"__MONOTONIC_TIMESTAMP","",1499,42],
[2,"__REALTIME_TIMESTAMP","",1498,42],
[3,43,"systemd-coredump(8)","systemd-coredump, systemd-coredump.socket, systemd-coredump@.service â€” Acquire, save and process core dumps","systemd-coredump.html"],
[4,1500,"The process number (PID), owner user number (UID), and group number (GID) of the crashed process.\n\nWhen the crashed process was part of a container (or in a process or user namespace in general), those are the values as seen _outside_, in the namespace where `systemd-coredump` is running."],
[4,1501,"The time of the crash as reported by the kernel (in Âµs since the epoch)."],
[4,1502,"The core file size soft resource limit, see [getrlimit(2)](http://man7.org/linux/man-pages/man2/getrlimit.2.html)."],
[4,1503,"The system unit and slice names.\n\nWhen the crashed process was in container, those are the units names _outside_, in the main system manager."],
[4,1504,"Control group information in the format used in `/proc/self/cgroup`. On systems with the unified cgroup hierarchy, this is a single path prefixed with \"`0::`\", and multiple paths prefixed with controller numbers on legacy systems.\n\nWhen the crashed process was in a container, this is the full path, as seen outside of the container."],
[4,1505,"The numerical UID of the user owning the login session or systemd user unit of the crashed process, and the user manager unit. Both fields are only present for user processes.\n\nWhen the crashed process was in container, those are the values _outside_, in the main system."],
[4,1506,"The terminating signal name (with the \"`SIG`\" prefix [\\[1\\]](#ftn.id-1.7.6.7.3.1.2)) and numerical value. (Both are included because signal numbers vary by architecture.)"],
[4,1507,"The current working directory and root directory of the crashed process.\n\nWhen the crashed process is in a container, those paths are relative to the root of the container's mount namespace."],
[4,1508,"Information about open file descriptors, in the following format:\n\n_`fd`_:_`/path/to/file`_\npos:     ...\nflags:   ...\n...\n\n_`fd`_:_`/path/to/file`_\npos:     ...\nflags:   ...\n...\n        \n\nThe first line contains the file descriptor number _`fd`_ and the path, while subsequent lines show the contents of ``/proc/_`pid`_/fdinfo/_`fd`_``."],
[4,1509,"The destination of the ``/proc/_`pid`_/exe`` symlink.\n\nWhen the crashed process is in a container, that path is relative to the root of the container's mount namespace."],
[4,1510,"Fields that map the per-process entries in the `/proc/` filesystem: ``/proc/_`pid`_/comm`` (the command name associated with the process), ``/proc/_`pid`_/exe`` (the filename of the executed command), ``/proc/_`pid`_/status`` (various metadata about the process), ``/proc/_`pid`_/maps`` (memory regions visible to the process and their access permissions), ``/proc/_`pid`_/limits`` (the soft and hard resource limits), ``/proc/_`pid`_/mountinfo`` (mount points in the process's mount namespace), ``/proc/_`pid`_/environ`` (the environment block of the crashed process).\n\nSee [proc(5)](http://man7.org/linux/man-pages/man5/proc.5.html) for more information."],
[4,1511,"The system hostname.\n\nWhen the crashed process was in container, this is the container hostname."],
[4,1512,"For processes running in a container, the commandline of the process spawning the container (the first parent process with a different mount namespace)."],
[4,1513,"When the core is stored in the journal, the core image itself."],
[4,1514,"When the core is stored externally, the path to the core file."],
[4,1515,"Set to \"`1`\" when the saved coredump was truncated. (A partial core image may still be processed by some tools, though obviously not all information is available.)"],
[4,1516,"If the executable contained .package metadata ELF notes, they will be parsed and attached. The `package` and `packageVersion` of the 'main' ELF module (ie: the executable) will be appended individually. The JSON-formatted content of all modules will be appended as a single JSON object, each with the module name as the key. For more information about this metadata format and content, see [the coredump metadata spec](https://systemd.io/COREDUMP_PACKAGE_METADATA/)."],
[4,1517,"The message generated by **systemd-coredump** that includes the backtrace if it was successfully generated. When **systemd-coredump** is invoked with `--backtrace`, this field is provided by the caller."],
[4,1518,"Those are the same as `COREDUMP_PID=`, `COREDUMP_UID=`, `COREDUMP_GID=`, `COREDUMP_SIGNAL=`, `COREDUMP_TIMESTAMP=`, `COREDUMP_RLIMIT=`, `COREDUMP_HOSTNAME=`, `COREDUMP_COMM=`, and `COREDUMP_EXE=`, described above."],
[2,"COREDUMP","",1513,43],
[2,"COREDUMP_CGROUP","",1504,43],
[2,"COREDUMP_COMM","",1510,43],
[2,"COREDUMP_CONTAINER_CMDLINE","",1512,43],
[2,"COREDUMP_CWD","",1507,43],
[2,"COREDUMP_ENVIRON","",1510,43],
[2,"COREDUMP_EXE","",1509,43],
[2,"COREDUMP_FILENAME","",1514,43],
[2,"COREDUMP_GID","",1500,43],
[2,"COREDUMP_HOSTNAME","",1511,43],
[2,"COREDUMP_OPEN_FDS","",1508,43],
[2,"COREDUMP_OWNER_UID","",1505,43],
[2,"COREDUMP_PACKAGE_JSON","",1516,43],
[2,"COREDUMP_PACKAGE_NAME","",1516,43],
[2,"COREDUMP_PACKAGE_VERSION","",1516,43],
[2,"COREDUMP_PID","",1500,43],
[2,"COREDUMP_PROC_LIMITS","",1510,43],
[2,"COREDUMP_PROC_MAPS","",1510,43],
[2,"COREDUMP_PROC_MOUNTINFO","",1510,43],
[2,"COREDUMP_PROC_STATUS","",1510,43],
[2,"COREDUMP_RLIMIT","",1502,43],
[2,"COREDUMP_ROOT","",1507,43],
[2,"COREDUMP_SIGNAL","",1506,43],
[2,"COREDUMP_SIGNAL_NAME","",1506,43],
[2,"COREDUMP_SLICE","",1503,43],
[2,"COREDUMP_TIMESTAMP","",1501,43],
[2,"COREDUMP_TRUNCATED","",1515,43],
[2,"COREDUMP_UID","",1500,43],
[2,"COREDUMP_UNIT","",1503,43],
[2,"COREDUMP_USER_UNIT","",1505,43],
[2,"MESSAGE","",1517,43],
[3,44,"pam_systemd(8)","pam\\_systemd â€” Register user sessions in the systemd login manager","pam_systemd.html"],
[4,1519,"Takes a string argument which sets the session class. The `XDG_SESSION_CLASS` environment variable (see below) takes precedence. One of \"`user`\", \"`greeter`\", \"`lock-screen`\" or \"`background`\". See [sd\\_session\\_get\\_class(3)](sd_session_get_class.html#) for details about the session class."],
[4,1520,"Takes a string argument which sets the session type. The `XDG_SESSION_TYPE` environment variable (see below) takes precedence. One of \"`unspecified`\", \"`tty`\", \"`x11`\", \"`wayland`\" or \"`mir`\". See [sd\\_session\\_get\\_type(3)](sd_session_get_type.html#) for details about the session type."],
[4,1521,"Takes a single, short identifier string for the desktop environment. The `XDG_SESSION_DESKTOP` environment variable (see below) takes precedence. This may be used to indicate the session desktop used, where this applies and if this information is available. For example: \"`GNOME`\", or \"`KDE`\". It is recommended to use the same identifiers and capitalization as for `$XDG_CURRENT_DESKTOP`, as defined by the [Desktop Entry Specification](http://standards.freedesktop.org/desktop-entry-spec/latest/). (However, note that the option only takes a single item, and not a colon-separated list like `$XDG_CURRENT_DESKTOP`.) See [sd\\_session\\_get\\_desktop(3)](sd_session_get_desktop.html#) for further details."],
[4,1522,"Takes an optional boolean argument. If yes or without the argument, the module will log debugging information as it operates."],
[4,1523,"A short session identifier, suitable to be used in filenames. The string itself should be considered opaque, although often it is just the audit session ID as reported by `/proc/self/sessionid`. Each ID will be assigned only once during machine uptime. It may hence be used to uniquely label files or other resources of this session. Combine this ID with the boot identifier, as returned by [sd\\_id128\\_get\\_boot(3)](sd_id128_get_boot.html#), for a globally unique identifier."],
[4,1524,"Path to a user-private user-writable directory that is bound to the user login time on the machine. It is automatically created the first time a user logs in and removed on the user's final logout. If a user logs in twice at the same time, both sessions will see the same `$XDG_RUNTIME_DIR` and the same contents. If a user logs in once, then logs out again, and logs in again, the directory contents will have been lost in between, but applications should not rely on this behavior and must be able to deal with stale files. To store session-private data in this directory, the user should include the value of `$XDG_SESSION_ID` in the filename. This directory shall be used for runtime file system objects such as `AF_UNIX` sockets, FIFOs, PID files and similar. It is guaranteed that this directory is local and offers the greatest possible file system feature set the operating system provides. For further details, see the [XDG Base Directory Specification](http://standards.freedesktop.org/basedir-spec/basedir-spec-latest.html). `$XDG_RUNTIME_DIR` is not set if the current user is not the original user of the session."],
[4,1525,"If a JSON user record is known for the user logging in these variables are initialized from the respective data in the record."],
[4,1526,"The session type. This may be used instead of `type=` on the module parameter line, and is usually preferred."],
[4,1527,"The session class. This may be used instead of `class=` on the module parameter line, and is usually preferred."],
[4,1528,"The desktop identifier. This may be used instead of `desktop=` on the module parameter line, and is usually preferred."],
[4,1529,"The seat name the session shall be registered for, if any."],
[4,1530,"The VT number the session shall be registered for, if any. (Only applies to seats with a VT available, such as \"`seat0`\")"],
[4,1531,"Sets unit `MemoryMax=`."],
[4,1532,"Sets unit `TasksMax=`."],
[4,1533,"Sets unit `CPUWeight=`."],
[4,1534,"Sets unit `IOWeight=`."],
[4,1535,"Sets unit `RuntimeMaxSec=`."],
[2,"class","",1519,44],
[2,"desktop","",1521,44],
[2,"systemd.cpu_weight","",1533,44],
[2,"systemd.io_weight","",1534,44],
[2,"systemd.memory_max","",1531,44],
[2,"systemd.runtime_max_sec","",1535,44],
[2,"systemd.tasks_max","",1532,44],
[2,"type","",1520,44],
[3,45,"pam_systemd_home(8)","pam\\_systemd\\_home â€” Automatically mount home directories managed by systemd-homed.service on login, and unmount them on logout","pam_systemd_home.html"],
[4,1536,"Takes a boolean argument. If true, the home directory of the user will be suspended automatically during system suspend; if false it will remain active. Automatic suspending of the home directory improves security substantially as secret key material is automatically removed from memory before the system is put to sleep and must be re-acquired (through user re-authentication) when coming back from suspend. It is recommended to set this parameter for all PAM applications that have support for automatically re-authenticating via PAM on system resume. If multiple sessions of the same user are open in parallel the user's home directory will be left unsuspended on system suspend as long as at least one of the sessions does not set this parameter to on. Defaults to off.\n\nNote that TTY logins generally do not support re-authentication on system resume. Re-authentication on system resume is primarily a concept implementable in graphical environments, in the form of lock screens brought up automatically when the system goes to sleep. This means that if a user concurrently uses graphical login sessions that implement the required re-authentication mechanism and console logins that do not, the home directory is not locked during suspend, due to the logic explained above. That said, it is possible to set this field for TTY logins too, ignoring the fact that TTY logins actually don't support the re-authentication mechanism. In that case the TTY sessions will appear hung until the user logs in on another virtual terminal (regardless if via another TTY session or graphically) which will resume the home directory and unblock the original TTY session. (Do note that lack of screen locking on TTY sessions means even though the TTY session appears hung, keypresses can still be queued into it, and the existing screen contents be read without re-authentication; this limitation is unrelated to the home directory management **pam\\_systemd\\_home** and `systemd-homed.service` implement.)\n\nTurning this option on by default is highly recommended for all sessions, but only if the service managing these sessions correctly implements the aforementioned re-authentication. Note that the re-authentication must take place from a component running outside of the user's context, so that it does not require access to the user's home directory for operation. Traditionally, most desktop environments do not implement screen locking this way, and need to be updated accordingly.\n\nThis setting may also be controlled via the `$SYSTEMD_HOME_SUSPEND` environment variable (see below), which **pam\\_systemd\\_home** reads during initialization and sets for sessions. If both the environment variable is set and the module parameter specified the latter takes precedence."],
[4,1537,"Takes an optional boolean argument. If yes or without the argument, the module will log debugging information as it operates."],
[4,1538,"Indicates that the user's home directory is managed by `systemd-homed.service`."],
[4,1539,"Indicates whether the session has been registered with the suspend mechanism enabled or disabled (see above). The variable's value is either \"`0`\" or \"`1`\". Note that the module both reads the variable when initializing, and sets it for sessions."],
[2,"suspend","",1536,45],
[3,46,"crypttab(5)","crypttab â€” Configuration for encrypted block devices","crypttab.html"],
[4,1540,"Specifies the cipher to use. See [cryptsetup(8)](http://linux.die.net/man/8/cryptsetup) for possible values and the default value of this option. A cipher with unpredictable IV values, such as \"`aes-cbc-essiv:sha256`\", is recommended. Embedded commas in the cipher specification need to be escaped by preceding them with a backslash, see example below."],
[4,1541,"Allow discard requests to be passed through the encrypted block device. This improves performance on SSD storage but has security implications."],
[4,1542,"Specifies the hash to use for password hashing. See [cryptsetup(8)](http://linux.die.net/man/8/cryptsetup) for possible values and the default value of this option."],
[4,1543,"Use a detached (separated) metadata device or file where the LUKS header is stored. This option is only relevant for LUKS devices. See [cryptsetup(8)](http://linux.die.net/man/8/cryptsetup) for possible values and the default value of this option.\n\nOptionally, the path may be followed by \"`:`\" and an `/etc/fstab` device specification (e.g. starting with \"`UUID=`\" or similar); in which case, the path is relative to the device file system root. The device gets mounted automatically for LUKS device activation duration only."],
[4,1544,"Specifies the number of bytes to skip at the start of the key file. See [cryptsetup(8)](http://linux.die.net/man/8/cryptsetup) for possible values and the default value of this option."],
[4,1545,"Specifies the maximum number of bytes to read from the key file. See [cryptsetup(8)](http://linux.die.net/man/8/cryptsetup) for possible values and the default value of this option. This option is ignored in plain encryption mode, as the key file size is then given by the key size."],
[4,1546,"If enabled, the specified key file is erased after the volume is activated or when activation fails. This is in particular useful when the key file is only acquired transiently before activation (e.g. via a file in `/run/`, generated by a service running before activation), and shall be removed after use. Defaults to off."],
[4,1547,"Specifies the key slot to compare the passphrase or key against. If the key slot does not match the given passphrase or key, but another would, the setup of the device will fail regardless. This option implies `luks`. See [cryptsetup(8)](http://linux.die.net/man/8/cryptsetup) for possible values. The default is to try all key slots in sequential order."],
[4,1548,"Specifies the timeout for the device on which the key file resides and falls back to a password if it could not be mounted. See [systemd-cryptsetup-generator(8)](systemd-cryptsetup-generator.html#) for key files on external devices."],
[4,1549,"Force LUKS mode. When this mode is used, the following options are ignored since they are provided by the LUKS header on the device: `cipher=`, `hash=`, `size=`."],
[4,1550,"Decrypt BitLocker drive. Encryption parameters are deduced by cryptsetup from BitLocker header."],
[4,1551,"Marks this cryptsetup device as requiring network. It will be started after the network is available, similarly to [systemd.mount(5)](systemd.mount.html#) units marked with `_netdev`. The service unit to set up this device will be ordered between `remote-fs-pre.target` and `remote-cryptsetup.target`, instead of `cryptsetup-pre.target` and `cryptsetup.target`.\n\nHint: if this device is used for a mount point that is specified in [fstab(5)](http://man7.org/linux/man-pages/man5/fstab.5.html), the `_netdev` option should also be used for the mount point. Otherwise, a dependency loop might be created where the mount point will be pulled in by `local-fs.target`, while the service to configure the network is usually only started _after_ the local file system has been mounted."],
[4,1552,"This device will not be added to `cryptsetup.target`. This means that it will not be automatically unlocked on boot, unless something else pulls it in. In particular, if the device is used for a mount point, it'll be unlocked automatically during boot, unless the mount point itself is also disabled with `noauto`."],
[4,1553,"This device will not be a hard dependency of `cryptsetup.target`. It'll still be pulled in and started, but the system will not wait for the device to show up and be unlocked, and boot will not fail if this is unsuccessful. Note that other units that depend on the unlocked device may still fail. In particular, if the device is used for a mount point, the mount point itself also needs to have the `nofail` option, or the boot will fail if the device is not unlocked successfully."],
[4,1554,"Start offset in the backend device, in 512-byte sectors. This option is only relevant for plain devices."],
[4,1555,"Force plain encryption mode."],
[4,1556,"Set up the encrypted block device in read-only mode."],
[4,1557,"Perform encryption using the same CPU that IO was submitted on. The default is to use an unbound workqueue so that encryption work is automatically balanced between available CPUs.\n\nThis requires kernel 4.0 or newer."],
[4,1558,"Disable offloading writes to a separate thread after encryption. There are some situations where offloading write requests from the encryption threads to a dedicated thread degrades performance significantly. The default is to offload write requests to a dedicated thread because it benefits the CFQ scheduler to have writes submitted using the same context.\n\nThis requires kernel 4.0 or newer."],
[4,1559,"Bypass dm-crypt internal workqueue and process read requests synchronously. The default is to queue these requests and process them asynchronously.\n\nThis requires kernel 5.9 or newer."],
[4,1560,"Bypass dm-crypt internal workqueue and process write requests synchronously. The default is to queue these requests and process them asynchronously.\n\nThis requires kernel 5.9 or newer."],
[4,1561,"How many 512-byte sectors of the encrypted data to skip at the beginning. This is different from the `offset=` option with respect to the sector numbers used in initialization vector (IV) calculation. Using `offset=` will shift the IV calculation by the same negative amount. Hence, if ``offset=_`n`_`` is given, sector _`n`_ will get a sector number of 0 for the IV calculation. Using `skip=` causes sector _`n`_ to also be the first sector of the mapped device, but with its number for IV generation being _`n`_.\n\nThis option is only relevant for plain devices."],
[4,1562,"Specifies the key size in bits. See [cryptsetup(8)](http://linux.die.net/man/8/cryptsetup) for possible values and the default value of this option."],
[4,1563,"Specifies the sector size in bytes. See [cryptsetup(8)](http://linux.die.net/man/8/cryptsetup) for possible values and the default value of this option."],
[4,1564,"The encrypted block device will be used as a swap device, and will be formatted accordingly after setting up the encrypted block device, with [mkswap(8)](http://man7.org/linux/man-pages/man8/mkswap.8.html). This option implies `plain`.\n\nWARNING: Using the `swap` option will destroy the contents of the named partition during every boot, so make sure the underlying block device is specified correctly."],
[4,1565,"Use TrueCrypt encryption mode. When this mode is used, the following options are ignored since they are provided by the TrueCrypt header on the device or do not apply: `cipher=`, `hash=`, `keyfile-offset=`, `keyfile-size=`, `size=`.\n\nWhen this mode is used, the passphrase is read from the key file given in the third field. Only the first line of this file is read, excluding the new line character.\n\nNote that the TrueCrypt format uses both passphrase and key files to derive a password for the volume. Therefore, the passphrase and all key files need to be provided. Use `tcrypt-keyfile=` to provide the absolute path to all key files. When using an empty passphrase in combination with one or more key files, use \"`/dev/null`\" as the password file in the third field."],
[4,1566,"Use the hidden TrueCrypt volume. This option implies `tcrypt`.\n\nThis will map the hidden volume that is inside of the volume provided in the second field. Please note that there is no protection for the hidden volume if the outer volume is mounted instead. See [cryptsetup(8)](http://linux.die.net/man/8/cryptsetup) for more information on this limitation."],
[4,1567,"Specifies the absolute path to a key file to use for a TrueCrypt volume. This implies `tcrypt` and can be used more than once to provide several key files.\n\nSee the entry for `tcrypt` on the behavior of the passphrase and key files when using TrueCrypt encryption mode."],
[4,1568,"Use TrueCrypt in system encryption mode. This option implies `tcrypt`."],
[4,1569,"Check for a VeraCrypt volume. VeraCrypt is a fork of TrueCrypt that is mostly compatible, but uses different, stronger key derivation algorithms that cannot be detected without this flag. Enabling this option could substantially slow down unlocking, because VeraCrypt's key derivation takes much longer than TrueCrypt's. This option implies `tcrypt`."],
[4,1570,"Specifies the timeout for querying for a password. If no unit is specified, seconds is used. Supported units are s, ms, us, min, h, d. A timeout of 0 waits indefinitely (which is the default)."],
[4,1571,"The encrypted block device will be prepared for using it as `/tmp/`; it will be formatted using [mkfs(8)](http://man7.org/linux/man-pages/man8/mkfs.8.html). Takes a file system type as argument, such as \"`ext4`\", \"`xfs`\" or \"`btrfs`\". If no argument is specified defaults to \"`ext4`\". This option implies `plain`.\n\nWARNING: Using the `tmp` option will destroy the contents of the named partition during every boot, so make sure the underlying block device is specified correctly."],
[4,1572,"Specifies the maximum number of times the user is queried for a password. The default is 3. If set to 0, the user is queried for a password indefinitely."],
[4,1573,"Takes a boolean argument, defaults to false. If true, never query interactively for the password/PIN. Useful for headless systems."],
[4,1574,"If the encryption password is read from console, it has to be entered twice to prevent typos."],
[4,1575,"Controls whether to echo passwords or security token PINs that are read from console. Takes a boolean or the special string \"`masked`\". The default is `password-echo=masked`.\n\nIf enabled, the typed characters are echoed literally. If disabled, the typed characters are not echoed in any form, the user will not get feedback on their input. If set to \"`masked`\", an asterisk (\"`*`\") is echoed for each character typed. Regardless of which mode is chosen, if the user hits the tabulator key (\"`â†¹`\") at any time, or the backspace key (\"`âŒ«`\") before any other data has been entered, then echo is turned off."],
[4,1576,"Takes either the special value \"`auto`\" or an [RFC7512 PKCS#11 URI](https://tools.ietf.org/html/rfc7512) pointing to a private RSA key which is used to decrypt the encrypted key specified in the third column of the line. This is useful for unlocking encrypted volumes through PKCS#11 compatible security tokens or smartcards. See below for an example how to set up this mechanism for unlocking a LUKS2 volume with a YubiKey security token.\n\nIf specified as \"`auto`\" the volume must be of type LUKS2 and must carry PKCS#11 security token metadata in its LUKS2 JSON token section. In this mode the URI and the encrypted key are automatically read from the LUKS2 JSON token header. Use [systemd-cryptenroll(1)](systemd-cryptenroll.html#) as simple tool for enrolling PKCS#11 security tokens or smartcards in a way compatible with \"`auto`\". In this mode the third column of the line should remain empty (that is, specified as \"`-`\").\n\nThe specified URI can refer directly to a private RSA key stored on a token or alternatively just to a slot or token, in which case a search for a suitable private RSA key will be performed. In this case if multiple suitable objects are found the token is refused. The encrypted key configured in the third column of the line is passed as is (i.e. in binary form, unprocessed) to RSA decryption. The resulting decrypted key is then Base64 encoded before it is used to unlock the LUKS volume.\n\nUse **systemd-cryptenroll --pkcs11-token-uri=list** to list all suitable PKCS#11 security tokens currently plugged in, along with their URIs.\n\nNote that many newer security tokens that may be used as PKCS#11 security token typically also implement the newer and simpler FIDO2 standard. Consider using `fido2-device=` (described below) to enroll it via FIDO2 instead. Note that a security token enrolled via PKCS#11 cannot be used to unlock the volume via FIDO2, unless also enrolled via FIDO2, and vice versa."],
[4,1577,"Takes either the special value \"`auto`\" or the path to a \"`hidraw`\" device node (e.g. `/dev/hidraw1`) referring to a FIDO2 security token that implements the \"`hmac-secret`\" extension (most current hardware security tokens do). See below for an example how to set up this mechanism for unlocking an encrypted volume with a FIDO2 security token.\n\nIf specified as \"`auto`\" the FIDO2 token device is automatically discovered, as it is plugged in.\n\nFIDO2 volume unlocking requires a client ID hash (CID) to be configured via `fido2-cid=` (see below) and a key to pass to the security token's HMAC functionality (configured in the line's third column) to operate. If not configured and the volume is of type LUKS2, the CID and the key are read from LUKS2 JSON token metadata instead. Use [systemd-cryptenroll(1)](systemd-cryptenroll.html#) as simple tool for enrolling FIDO2 security tokens, compatible with this automatic mode, which is only available for LUKS2 volumes.\n\nUse **systemd-cryptenroll --fido2-device=list** to list all suitable FIDO2 security tokens currently plugged in, along with their device nodes.\n\nThis option implements the following mechanism: the configured key is hashed via they HMAC keyed hash function the FIDO2 device implements, keyed by a secret key embedded on the device. The resulting hash value is Base64 encoded and used to unlock the LUKS2 volume. As it should not be possible to extract the secret from the hardware token, it should not be possible to retrieve the hashed key given the configured key â€” without possessing the hardware token.\n\nNote that many security tokens that implement FIDO2 also implement PKCS#11, suitable for unlocking volumes via the `pkcs11-uri=` option described above. Typically the newer, simpler FIDO2 standard is preferable."],
[4,1578,"Takes a Base64 encoded FIDO2 client ID to use for the FIDO2 unlock operation. If specified, but `fido2-device=` is not, `fido2-device=auto` is implied. If `fido2-device=` is used but `fido2-cid=` is not, the volume must be of LUKS2 type, and the CID is read from the LUKS2 JSON token header. Use [systemd-cryptenroll(1)](systemd-cryptenroll.html#) for enrolling a FIDO2 token in the LUKS2 header compatible with this automatic mode."],
[4,1579,"Takes a string, configuring the FIDO2 Relying Party (rp) for the FIDO2 unlock operation. If not specified \"`io.systemd.cryptsetup`\" is used, except if the LUKS2 JSON token header contains a different value. It should normally not be necessary to override this."],
[4,1580,"Takes either the special value \"`auto`\" or the path to a device node (e.g. `/dev/tpmrm0`) referring to a TPM2 security chip. See below for an example how to set up this mechanism for unlocking an encrypted volume with a TPM2 chip.\n\nUse `tpm2-pcrs=` (see below) to configure the set of TPM2 PCRs to bind the volume unlocking to. Use [systemd-cryptenroll(1)](systemd-cryptenroll.html#) as simple tool for enrolling TPM2 security chips in LUKS2 volumes.\n\nIf specified as \"`auto`\" the TPM2 device is automatically discovered. Use **systemd-cryptenroll --tpm2-device=list** to list all suitable TPM2 devices currently available, along with their device nodes.\n\nThis option implements the following mechanism: when enrolling a TPM2 device via **systemd-cryptenroll** on a LUKS2 volume, a randomized key unlocking the volume is generated on the host and loaded into the TPM2 chip where it is encrypted with an asymmetric \"primary\" key pair derived from the TPM2's internal \"seed\" key. Neither the seed key nor the primary key are permitted to ever leave the TPM2 chip â€” however, the now encrypted randomized key may. It is saved in the LUKS2 volume JSON token header. When unlocking the encrypted volume, the primary key pair is generated on the TPM2 chip again (which works as long as the chip's seed key is correctly maintained by the TPM2 chip), which is then used to decrypt (on the TPM2 chip) the encrypted key from the LUKS2 volume JSON token header saved there during enrollment. The resulting decrypted key is then used to unlock the volume. When the randomized key is encrypted the current values of the selected PCRs (see below) are included in the operation, so that different PCR state results in different encrypted keys and the decrypted key can only be recovered if the same PCR state is reproduced."],
[4,1581,"Takes a \"`+`\" separated list of numeric TPM2 PCR (i.e. \"Platform Configuration Register\") indexes to bind the TPM2 volume unlocking to. This option is only useful when TPM2 enrollment metadata is not available in the LUKS2 JSON token header already, the way **systemd-cryptenroll** writes it there. If not used (and no metadata in the LUKS2 JSON token header defines it), defaults to a list of a single entry: PCR 7. Assign an empty string to encode a policy that binds the key to no PCRs, making the key accessible to local programs regardless of the current PCR state."],
[4,1582,"Specifies how long to wait at most for configured security devices (i.e. FIDO2, PKCS#11, TPM2) to show up. Takes a time value in seconds (but other time units may be specified too, see [systemd.time(7)](systemd.time.html#) for supported formats). Defaults to 30s. Once the specified timeout elapsed authentication via password is attempted. Note that this timeout applies to waiting for the security device to show up â€” it does not apply to the PIN prompt for the device (should one be needed) or similar. Pass 0 to turn off the time-out and wait forever."],
[4,1583,"Takes a boolean argument. If enabled, right before asking the user for a password it is first attempted to unlock the volume with an empty password. This is useful for systems that are initialized with an encrypted volume with only an empty password set, which shall be replaced with a suitable password during first boot, but after activation."],
[4,1584,"Specifies how long systemd should wait for a block device to show up before giving up on the entry. The argument is a time in seconds or explicitly specified units of \"`s`\", \"`min`\", \"`h`\", \"`ms`\"."],
[4,1585,"Setup this encrypted block device in the initramfs, similarly to [systemd.mount(5)](systemd.mount.html#) units marked with `x-initrd.mount`.\n\nAlthough it's not necessary to mark the mount entry for the root file system with `x-initrd.mount`, `x-initrd.attach` is still recommended with the encrypted block device containing the root file system as otherwise systemd will attempt to detach the device during the regular system shutdown while it's still in use. With this option the device will still be detached but later after the root file system is unmounted.\n\nAll other encrypted block devices that contain file systems mounted in the initramfs should use this option."],
[2,"cipher","",1540,46],
[2,"fido2-cid","",1578,46],
[2,"fido2-device","",1577,46],
[2,"fido2-rp","",1579,46],
[2,"hash","",1542,46],
[2,"header","",1543,46],
[2,"headless","",1573,46],
[2,"key-slot","",1547,46],
[2,"keyfile-offset","",1544,46],
[2,"keyfile-size","",1545,46],
[2,"keyfile-timeout","",1548,46],
[2,"offset","",1554,46],
[2,"password-echo","yes|no|masked",1575,46],
[2,"pkcs11-uri","",1576,46],
[2,"sector-size","",1563,46],
[2,"size","",1562,46],
[2,"skip","",1561,46],
[2,"tcrypt-keyfile","",1567,46],
[2,"timeout","",1570,46],
[2,"tmp","",1571,46],
[2,"token-timeout","",1582,46],
[2,"tpm2-device","",1580,46],
[2,"tpm2-pcrs","",1581,46],
[2,"tries","",1572,46],
[2,"try-empty-password","",1583,46],
[2,"x-systemd.device-timeout","",1584,46],
[3,47,"veritytab(5)","veritytab â€” Configuration for verity block devices","veritytab.html"],
[4,1586,"Defines what to do if a data verity problem is detected (data corruption). Without these options kernel fails the IO operation with I/O error. With \"`--ignore-corruption`\" option the corruption is only logged. With \"`--restart-on-corruption`\" or \"`--panic-on-corruption`\" the kernel is restarted (panicked) immediately. (You have to provide way how to avoid restart loops.)"],
[4,1587,"Instruct kernel to not verify blocks that are expected to contain zeroes and always directly return zeroes instead. WARNING: Use this option only in very specific cases. This option is available since Linux kernel version 4.5."],
[4,1588,"Instruct kernel to verify blocks only the first time they are read from the data device, rather than every time. WARNING: It provides a reduced level of security because only offline tampering of the data device's content will be detected, not online tampering. This option is available since Linux kernel version 4.17."],
[4,1589,"A base64 string encoding the root hash signature prefixed by \"`base64:`\" or a path to roothash signature file used to verify the root hash (in kernel). This feature requires Linux kernel version 5.4 or more recent."],
[4,1590,"Marks this veritysetup device as requiring network. It will be started after the network is available, similarly to [systemd.mount(5)](systemd.mount.html#) units marked with `_netdev`. The service unit to set up this device will be ordered between `remote-fs-pre.target` and `remote-veritysetup.target`, instead of `veritysetup-pre.target` and `veritysetup.target`.\n\nHint: if this device is used for a mount point that is specified in [fstab(5)](http://man7.org/linux/man-pages/man5/fstab.5.html), the `_netdev` option should also be used for the mount point. Otherwise, a dependency loop might be created where the mount point will be pulled in by `local-fs.target`, while the service to configure the network is usually only started _after_ the local file system has been mounted."],
[4,1591,"This device will not be added to `veritysetup.target`. This means that it will not be automatically enabled on boot, unless something else pulls it in. In particular, if the device is used for a mount point, it'll be enabled automatically during boot, unless the mount point itself is also disabled with `noauto`."],
[4,1592,"This device will not be a hard dependency of `veritysetup.target`. It'll still be pulled in and started, but the system will not wait for the device to show up and be enabled, and boot will not fail if this is unsuccessful. Note that other units that depend on the enabled device may still fail. In particular, if the device is used for a mount point, the mount point itself also needs to have the `nofail` option, or the boot will fail if the device is not enabled successfully."],
[4,1593,"Setup this verity protected block device in the initramfs, similarly to [systemd.mount(5)](systemd.mount.html#) units marked with `x-initrd.mount`.\n\nAlthough it's not necessary to mark the mount entry for the root file system with `x-initrd.mount`, `x-initrd.attach` is still recommended with the verity protected block device containing the root file system as otherwise systemd will attempt to detach the device during the regular system shutdown while it's still in use. With this option the device will still be detached but later after the root file system is unmounted.\n\nAll other verity protected block devices that contain file systems mounted in the initramfs should use this option."],
[2,"root-hash-signature","",1589,47],
[3,48,"systemd.nspawn(5)","systemd.nspawn â€” Container settings","systemd.nspawn.html"],
[4,1594,"Takes a boolean argument, which defaults to off. If enabled, **systemd-nspawn** will automatically search for an `init` executable and invoke it. In this case, the specified parameters using `Parameters=` are passed as additional arguments to the `init` process. This setting corresponds to the `--boot` switch on the **systemd-nspawn** command line. This option may not be combined with `ProcessTwo=yes`. This option is specified by default in the `systemd-nspawn@.service` template unit."],
[4,1595,"Takes a boolean argument, which defaults to off, If enabled, the container is run with a temporary snapshot of its file system that is removed immediately when the container terminates. This is equivalent to the `--ephemeral` command line switch. See [systemd-nspawn(1)](systemd-nspawn.html#) for details about the specific options supported."],
[4,1596,"Takes a boolean argument, which defaults to off. If enabled, the specified program is run as PID 2. A stub init process is run as PID 1. This setting corresponds to the `--as-pid2` switch on the **systemd-nspawn** command line. This option may not be combined with `Boot=yes`."],
[4,1597,"Takes a whitespace-separated list of arguments. Single (\"`'`\") and double (\"`\"`\") quotes may be used around arguments with whitespace. This is either a command line, beginning with the binary name to execute, or â€“ if `Boot=` is enabled â€“ the list of arguments to pass to the init process. This setting corresponds to the command line parameters passed on the **systemd-nspawn** command line.\n\nNote: `Boot=no`, `Parameters=a b \"c c\"` is the same as **systemd-nspawn a b \"c c\"**, and `Boot=yes`, `Parameters=b 'c c'` is the same as **systemd-nspawn --boot b 'c c'**."],
[4,1598,"Takes an environment variable assignment consisting of key and value, separated by \"`=`\". Sets an environment variable for the main process invoked in the container. This setting may be used multiple times to set multiple environment variables. It corresponds to the `--setenv=` command line switch."],
[4,1599,"Takes a UNIX user name. Specifies the user name to invoke the main process of the container as. This user must be known in the container's user database. This corresponds to the `--user=` command line switch."],
[4,1600,"Selects the working directory for the process invoked in the container. Expects an absolute path in the container's file system namespace. This corresponds to the `--chdir=` command line switch."],
[4,1601,"Selects a directory to pivot to `/` inside the container when starting up. Takes a single path, or a pair of two paths separated by a colon. Both paths must be absolute, and are resolved in the container's file system namespace. This corresponds to the `--pivot-root=` command line switch."],
[4,1602,"Takes a space-separated list of Linux process capabilities (see [capabilities(7)](http://man7.org/linux/man-pages/man7/capabilities.7.html) for details). The `Capability=` setting specifies additional capabilities to pass on top of the default set of capabilities. The `DropCapability=` setting specifies capabilities to drop from the default set. These settings correspond to the `--capability=` and `--drop-capability=` command line switches. Note that `Capability=` is a privileged setting, and only takes effect in `.nspawn` files in `/etc/systemd/nspawn/` and `/run/system/nspawn/` (see above). On the other hand, `DropCapability=` takes effect in all cases. If the special value \"`all`\" is passed, all capabilities are retained (or dropped).\n\nThese settings change the bounding set of capabilities which also limits the ambient capabilities as given with the `AmbientCapability=`."],
[4,1603,"Takes a space-separated list of Linux process capabilities (see [capabilities(7)](http://man7.org/linux/man-pages/man7/capabilities.7.html) for details). The `AmbientCapability=` setting specifies capability which will be passed to the started program in the inheritable and ambient capability sets. This will grant these capabilities to this process. This setting correspond to the `--ambient-capability=` command line switch.\n\nThe value \"`all`\" is not supported for this setting.\n\nThe setting of `AmbientCapability=` must be covered by the bounding set settings which were established by `Capability=` and `DropCapability=`.\n\nNote that `AmbientCapability=` is a privileged setting (see above)."],
[4,1604,"Takes a boolean argument that controls the `PR_SET_NO_NEW_PRIVS` flag for the container payload. This is equivalent to the `--no-new-privileges=` command line switch. See [systemd-nspawn(1)](systemd-nspawn.html#) for details."],
[4,1605,"Specify the process signal to send to the container's PID 1 when nspawn itself receives SIGTERM, in order to trigger an orderly shutdown of the container. Defaults to SIGRTMIN+3 if `Boot=` is used (on systemd-compatible init systems SIGRTMIN+3 triggers an orderly shutdown). For a list of valid signals, see [signal(7)](http://man7.org/linux/man-pages/man7/signal.7.html)."],
[4,1606,"Configures the kernel personality for the container. This is equivalent to the `--personality=` switch."],
[4,1607,"Configures the 128-bit machine ID (UUID) to pass to the container. This is equivalent to the `--uuid=` command line switch. This option is privileged (see above)."],
[4,1608,"Configures support for usernamespacing. This is equivalent to the `--private-users=` command line switch, and takes the same options. This option is privileged (see above). This option is the default if the `systemd-nspawn@.service` template unit file is used."],
[4,1609,"Configures support for notifications from the container's init process. This is equivalent to the `--notify-ready=` command line switch, and takes the same parameters. See [systemd-nspawn(1)](systemd-nspawn.html#) for details about the specific options supported."],
[4,1610,"Configures the system call filter applied to containers. This is equivalent to the `--system-call-filter=` command line switch, and takes the same list parameter. See [systemd-nspawn(1)](systemd-nspawn.html#) for details."],
[4,1611,"Configures various types of resource limits applied to containers. This is equivalent to the `--rlimit=` command line switch, and takes the same arguments. See [systemd-nspawn(1)](systemd-nspawn.html#) for details."],
[4,1612,"Configures the OOM score adjustment value. This is equivalent to the `--oom-score-adjust=` command line switch, and takes the same argument. See [systemd-nspawn(1)](systemd-nspawn.html#) for details."],
[4,1613,"Configures the CPU affinity. This is equivalent to the `--cpu-affinity=` command line switch, and takes the same argument. See [systemd-nspawn(1)](systemd-nspawn.html#) for details."],
[4,1614,"Configures the kernel hostname set for the container. This is equivalent to the `--hostname=` command line switch, and takes the same argument. See [systemd-nspawn(1)](systemd-nspawn.html#) for details."],
[4,1615,"Configures how `/etc/resolv.conf` in the container shall be handled. This is equivalent to the `--resolv-conf=` command line switch, and takes the same argument. See [systemd-nspawn(1)](systemd-nspawn.html#) for details."],
[4,1616,"Configures how `/etc/localtime` in the container shall be handled. This is equivalent to the `--timezone=` command line switch, and takes the same argument. See [systemd-nspawn(1)](systemd-nspawn.html#) for details."],
[4,1617,"Configures how to link host and container journal setups. This is equivalent to the `--link-journal=` command line switch, and takes the same parameter. See [systemd-nspawn(1)](systemd-nspawn.html#) for details."],
[4,1618,"Configures whether to suppress disk synchronization for the container payload. This is equivalent to the `--suppress-sync=` command line switch, and takes the same parameter. See [systemd-nspawn(1)](systemd-nspawn.html#) for details."],
[4,1619,"Takes a boolean argument, which defaults to off. If specified, the container will be run with a read-only file system. This setting corresponds to the `--read-only` command line switch."],
[4,1620,"Takes a boolean argument, or the special value \"`state`\". This configures whether to run the container with volatile state and/or configuration. This option is equivalent to `--volatile=`, see [systemd-nspawn(1)](systemd-nspawn.html#) for details about the specific options supported."],
[4,1621,"Adds a bind mount from the host into the container. Takes a single path, a pair of two paths separated by a colon, or a triplet of two paths plus an option string separated by colons. This option may be used multiple times to configure multiple bind mounts. This option is equivalent to the command line switches `--bind=` and `--bind-ro=`, see [systemd-nspawn(1)](systemd-nspawn.html#) for details about the specific options supported. This setting is privileged (see above)."],
[4,1622,"Binds a user from the host into the container. This option is equivalent to the command line switch `--bind-user=`, see [systemd-nspawn(1)](systemd-nspawn.html#) for details about the specific options supported. This setting is privileged (see above)."],
[4,1623,"Adds a \"`tmpfs`\" mount to the container. Takes a path or a pair of path and option string, separated by a colon. This option may be used multiple times to configure multiple \"`tmpfs`\" mounts. This option is equivalent to the command line switch `--tmpfs=`, see [systemd-nspawn(1)](systemd-nspawn.html#) for details about the specific options supported. This setting is privileged (see above)."],
[4,1624,"Masks the specified file or directory in the container, by over-mounting it with an empty file node of the same type with the most restrictive access mode. Takes a file system path as argument. This option may be used multiple times to mask multiple files or directories. This option is equivalent to the command line switch `--inaccessible=`, see [systemd-nspawn(1)](systemd-nspawn.html#) for details about the specific options supported. This setting is privileged (see above)."],
[4,1625,"Adds an overlay mount point. Takes a colon-separated list of paths. This option may be used multiple times to configure multiple overlay mounts. This option is equivalent to the command line switches `--overlay=` and `--overlay-ro=`, see [systemd-nspawn(1)](systemd-nspawn.html#) for details about the specific options supported. This setting is privileged (see above)."],
[4,1626,"Configures whether the ownership of the files and directories in the container tree shall be adjusted to the UID/GID range used, if necessary and user namespacing is enabled. This is equivalent to the `--private-users-ownership=` command line switch. This option is privileged (see above)."],
[4,1627,"Takes a boolean argument, which defaults to off. If enabled, the container will run in its own network namespace and not share network interfaces and configuration with the host. This setting corresponds to the `--private-network` command line switch."],
[4,1628,"Takes a boolean argument. Configures whether to create a virtual Ethernet connection (\"`veth`\") between host and the container. This setting implies `Private=yes`. This setting corresponds to the `--network-veth` command line switch. This option is privileged (see above). This option is the default if the `systemd-nspawn@.service` template unit file is used."],
[4,1629,"Takes a colon-separated pair of interface names. Configures an additional virtual Ethernet connection (\"`veth`\") between host and the container. The first specified name is the interface name on the host, the second the interface name in the container. The latter may be omitted in which case it is set to the same name as the host side interface. This setting implies `Private=yes`. This setting corresponds to the `--network-veth-extra=` command line switch, and maybe be used multiple times. It is independent of `VirtualEthernet=`. Note that this option is unrelated to the `Bridge=` setting below, and thus any connections created this way are not automatically added to any bridge device on the host side. This option is privileged (see above)."],
[4,1630,"Takes a space-separated list of interfaces to add to the container. This option corresponds to the `--network-interface=` command line switch and implies `Private=yes`. This option is privileged (see above)."],
[4,1631,"Takes a space-separated list of interfaces to add MACLVAN or IPVLAN interfaces to, which are then added to the container. These options correspond to the `--network-macvlan=` and `--network-ipvlan=` command line switches and imply `Private=yes`. These options are privileged (see above)."],
[4,1632,"Takes an interface name. This setting implies `VirtualEthernet=yes` and `Private=yes` and has the effect that the host side of the created virtual Ethernet link is connected to the specified bridge interface. This option corresponds to the `--network-bridge=` command line switch. This option is privileged (see above)."],
[4,1633,"Takes a network zone name. This setting implies `VirtualEthernet=yes` and `Private=yes` and has the effect that the host side of the created virtual Ethernet link is connected to an automatically managed bridge interface named after the passed argument, prefixed with \"`vz-`\". This option corresponds to the `--network-zone=` command line switch. This option is privileged (see above)."],
[4,1634,"Exposes a TCP or UDP port of the container on the host. This option corresponds to the `--port=` command line switch, see [systemd-nspawn(1)](systemd-nspawn.html#) for the precise syntax of the argument this option takes. This option is privileged (see above)."],
[2,"AmbientCapability","",1603,48],
[2,"Bind","",1621,48],
[2,"BindReadOnly","",1621,48],
[2,"BindUser","",1622,48],
[2,"Boot","",1594,48],
[2,"Bridge","",1632,48],
[2,"CPUAffinity","",1613,48],
[2,"Capability","",1602,48],
[2,"DropCapability","",1602,48],
[2,"Environment","",1598,48],
[2,"Ephemeral","",1595,48],
[2,"Hostname","",1614,48],
[2,"IPVLAN","",1631,48],
[2,"Inaccessible","",1624,48],
[2,"Interface","",1630,48],
[2,"KillSignal","",1605,48],
[2,"LimitAS","",1611,48],
[2,"LimitCORE","",1611,48],
[2,"LimitCPU","",1611,48],
[2,"LimitDATA","",1611,48],
[2,"LimitFSIZE","",1611,48],
[2,"LimitLOCKS","",1611,48],
[2,"LimitMEMLOCK","",1611,48],
[2,"LimitMSGQUEUE","",1611,48],
[2,"LimitNICE","",1611,48],
[2,"LimitNOFILE","",1611,48],
[2,"LimitNPROC","",1611,48],
[2,"LimitRSS","",1611,48],
[2,"LimitRTPRIO","",1611,48],
[2,"LimitRTTIME","",1611,48],
[2,"LimitSIGPENDING","",1611,48],
[2,"LimitSTACK","",1611,48],
[2,"LinkJournal","",1617,48],
[2,"MACVLAN","",1631,48],
[2,"MachineID","",1607,48],
[2,"NoNewPrivileges","",1604,48],
[2,"NotifyReady","",1609,48],
[2,"OOMScoreAdjust","",1612,48],
[2,"Overlay","",1625,48],
[2,"OverlayReadOnly","",1625,48],
[2,"Parameters","",1597,48],
[2,"Personality","",1606,48],
[2,"PivotRoot","",1601,48],
[2,"Port","",1634,48],
[2,"Private","",1627,48],
[2,"PrivateUsers","",1608,48],
[2,"PrivateUsersOwnership","",1626,48],
[2,"ProcessTwo","",1596,48],
[2,"ReadOnly","",1619,48],
[2,"ResolvConf","",1615,48],
[2,"SuppressSync","",1618,48],
[2,"SystemCallFilter","",1610,48],
[2,"TemporaryFileSystem","",1623,48],
[2,"Timezone","",1616,48],
[2,"User","",1599,48],
[2,"VirtualEthernet","",1628,48],
[2,"VirtualEthernetExtra","",1629,48],
[2,"Volatile","",1620,48],
[2,"WorkingDirectory","",1600,48],
[2,"Zone","",1633,48],
[3,49,"systemd-sleep.conf(5)","systemd-sleep.conf, sleep.conf.d â€” Suspend and hibernation configuration file","systemd-sleep.conf.html"],
[4,1635,"a low-power state where execution of the OS is paused, and complete power loss might result in lost data, and which is fast to enter and exit. This corresponds to suspend, standby, or freeze states as understood by the kernel."],
[4,1636,"a low-power state where execution of the OS is paused, and complete power loss does not result in lost data, and which might be slow to enter and exit. This corresponds to the hibernation as understood by the kernel."],
[4,1637,"a low-power state where execution of the OS is paused, which might be slow to enter, and on complete power loss does not result in lost data but might be slower to exit in that case. This mode is called suspend-to-both by the kernel."],
[4,1638,"A low power state where the system is initially suspended (the state is stored in RAM). If not interrupted within the delay specified by **HibernateDelaySec=**, the system will be woken using an RTC alarm and hibernated (the state is then stored on disk)."],
[4,1639,"By default any power-saving mode is advertised if possible (i.e. the kernel supports that mode, the necessary resources are available). Those switches can be used to disable specific modes.\n\nIf `AllowHibernation=no` or `AllowSuspend=no` is used, this implies `AllowSuspendThenHibernate=no` and `AllowHybridSleep=no`, since those methods use both suspend and hibernation internally. `AllowSuspendThenHibernate=yes` and `AllowHybridSleep=yes` can be used to override and enable those specific modes."],
[4,1640,"The string to be written to `/sys/power/disk` by, respectively, [systemd-suspend.service(8)](systemd-suspend.service.html#), [systemd-hibernate.service(8)](systemd-hibernate.service.html#), or [systemd-hybrid-sleep.service(8)](systemd-hybrid-sleep.service.html#). More than one value can be specified by separating multiple values with whitespace. They will be tried in turn, until one is written without error. If neither succeeds, the operation will be aborted.\n\n[systemd-suspend-then-hibernate.service(8)](systemd-suspend-then-hibernate.service.html#) uses the value of `SuspendMode=` when suspending and the value of `HibernateMode=` when hibernating."],
[4,1641,"The string to be written to `/sys/power/state` by, respectively, [systemd-suspend.service(8)](systemd-suspend.service.html#), [systemd-hibernate.service(8)](systemd-hibernate.service.html#), or [systemd-hybrid-sleep.service(8)](systemd-hybrid-sleep.service.html#). More than one value can be specified by separating multiple values with whitespace. They will be tried in turn, until one is written without error. If neither succeeds, the operation will be aborted.\n\n[systemd-suspend-then-hibernate.service(8)](systemd-suspend-then-hibernate.service.html#) uses the value of `SuspendState=` when suspending and the value of `HibernateState=` when hibernating."],
[4,1642,"The amount of time the system spends in suspend mode before the system is automatically put into hibernate mode, when using [systemd-suspend-then-hibernate.service(8)](systemd-suspend-then-hibernate.service.html#). Defaults to 2h."],
[2,"AllowHibernation","",1639,49],
[2,"AllowHybridSleep","",1639,49],
[2,"AllowSuspend","",1639,49],
[2,"AllowSuspendThenHibernate","",1639,49],
[2,"HibernateDelaySec","",1642,49],
[2,"HibernateMode","",1640,49],
[2,"HibernateState","",1641,49],
[2,"HybridSleepMode","",1640,49],
[2,"HybridSleepState","",1641,49],
[2,"SuspendMode","",1640,49],
[2,"SuspendState","",1641,49],
[3,50,"journald.conf(5)","journald.conf, journald.conf.d, journald@.conf â€” Journal service configuration files","journald.conf.html"],
[4,1643,"Controls where to store journal data. One of \"`volatile`\", \"`persistent`\", \"`auto`\" and \"`none`\". If \"`volatile`\", journal log data will be stored only in memory, i.e. below the `/run/log/journal` hierarchy (which is created if needed). If \"`persistent`\", data will be stored preferably on disk, i.e. below the `/var/log/journal` hierarchy (which is created if needed), with a fallback to `/run/log/journal` (which is created if needed), during early boot and if the disk is not writable. \"`auto`\" behaves like \"`persistent`\" if the `/var/log/journal` directory exists, and \"`volatile`\" otherwise (the existence of the directory controls the storage mode). \"`none`\" turns off all storage, all log data received will be dropped (but forwarding to other targets, such as the console, the kernel log buffer, or a syslog socket will still work). Defaults to \"`auto`\" in the default journal namespace, and \"`persistent`\" in all others.\n\nNote that journald will initially use volatile storage, until a call to **journalctl --flush** (or sending `SIGUSR1` to journald) will cause it to switch to persistent logging (under the conditions mentioned above). This is done automatically on boot via \"`systemd-journal-flush.service`\".\n\nNote that when this option is changed to \"`volatile`\", existing persistent data is not removed. In the other direction, [journalctl(1)](journalctl.html#) with the `--flush` option may be used to move volatile data to persistent storage."],
[4,1644,"Can take a boolean value. If enabled (the default), data objects that shall be stored in the journal and are larger than the default threshold of 512 bytes are compressed before they are written to the file system. It can also be set to a number of bytes to specify the compression threshold directly. Suffixes like K, M, and G can be used to specify larger units."],
[4,1645,"Takes a boolean value. If enabled (the default), and a sealing key is available (as created by [journalctl(1)](journalctl.html#)'s `--setup-keys` command), Forward Secure Sealing (FSS) for all persistent journal files is enabled. FSS is based on [Seekable Sequential Key Generators](https://eprint.iacr.org/2013/397) by G. A. Marson and B. Poettering (doi:10.1007/978-3-642-40203-6\\_7) and may be used to protect journal files from unnoticed alteration."],
[4,1646,"Controls whether to split up journal files per user, either \"`uid`\" or \"`none`\". Split journal files are primarily useful for access control: on UNIX/Linux access control is managed per file, and the journal daemon will assign users read access to their journal files. If \"`uid`\", all regular users (with UID outside the range of system users, dynamic service users, and the nobody user) will each get their own journal files, and system users will log to the system journal. See [Users, Groups, UIDs and GIDs on systemd systems](https://systemd.io/UIDS-GIDS) for more details about UID ranges. If \"`none`\", journal files are not split up by user and all messages are instead stored in the single system journal. In this mode unprivileged users generally do not have access to their own log data. Note that splitting up journal files by user is only available for journals stored persistently. If journals are stored on volatile storage (see `Storage=` above), only a single journal file is used. Defaults to \"`uid`\"."],
[4,1647,"Configures the rate limiting that is applied to all messages generated on the system. If, in the time interval defined by `RateLimitIntervalSec=`, more messages than specified in `RateLimitBurst=` are logged by a service, all further messages within the interval are dropped until the interval is over. A message about the number of dropped messages is generated. This rate limiting is applied per-service, so that two services which log do not interfere with each other's limits. Defaults to 10000 messages in 30s. The time specification for `RateLimitIntervalSec=` may be specified in the following units: \"`s`\", \"`min`\", \"`h`\", \"`ms`\", \"`us`\". To turn off any kind of rate limiting, set either value to 0.\n\nNote that the effective rate limit is multiplied by a factor derived from the available free disk space for the journal. Currently, this factor is calculated using the base 2 logarithm.\n\n**TableÂ 1.Â Example `RateLimitBurst=` rate modifications by the available disk space**\n\nAvailable Disk Space\n\nBurst Multiplier\n\n<= 1MB\n\n1\n\n<= 16MB\n\n2\n\n<= 256MB\n\n3\n\n<= 4GB\n\n4\n\n<= 64GB\n\n5\n\n<= 1TB\n\n6\n\n  \n\nIf a service provides rate limits for itself through `LogRateLimitIntervalSec=` and/or `LogRateLimitBurst=` in [systemd.exec(5)](systemd.exec.html#), those values will override the settings specified here."],
[4,1648,"Enforce size limits on the journal files stored. The options prefixed with \"`System`\" apply to the journal files when stored on a persistent file system, more specifically `/var/log/journal`. The options prefixed with \"`Runtime`\" apply to the journal files when stored on a volatile in-memory file system, more specifically `/run/log/journal`. The former is used only when `/var/` is mounted, writable, and the directory `/var/log/journal` exists. Otherwise, only the latter applies. Note that this means that during early boot and if the administrator disabled persistent logging, only the latter options apply, while the former apply if persistent logging is enabled and the system is fully booted up. **journalctl** and **systemd-journald** ignore all files with names not ending with \"`.journal`\" or \"`.journal~`\", so only such files, located in the appropriate directories, are taken into account when calculating current disk usage.\n\n`SystemMaxUse=` and `RuntimeMaxUse=` control how much disk space the journal may use up at most. `SystemKeepFree=` and `RuntimeKeepFree=` control how much disk space systemd-journald shall leave free for other uses. **systemd-journald** will respect both limits and use the smaller of the two values.\n\nThe first pair defaults to 10% and the second to 15% of the size of the respective file system, but each value is capped to 4G. If the file system is nearly full and either `SystemKeepFree=` or `RuntimeKeepFree=` are violated when systemd-journald is started, the limit will be raised to the percentage that is actually free. This means that if there was enough free space before and journal files were created, and subsequently something else causes the file system to fill up, journald will stop using more space, but it will not be removing existing files to reduce the footprint again, either. Also note that only archived files are deleted to reduce the space occupied by journal files. This means that, in effect, there might still be more space used than `SystemMaxUse=` or `RuntimeMaxUse=` limit after a vacuuming operation is complete.\n\n`SystemMaxFileSize=` and `RuntimeMaxFileSize=` control how large individual journal files may grow at most. This influences the granularity in which disk space is made available through rotation, i.e. deletion of historic data. Defaults to one eighth of the values configured with `SystemMaxUse=` and `RuntimeMaxUse=`, so that usually seven rotated journal files are kept as history.\n\nSpecify values in bytes or use K, M, G, T, P, E as units for the specified sizes (equal to 1024, 1024Â², â€¦ bytes). Note that size limits are enforced synchronously when journal files are extended, and no explicit rotation step triggered by time is needed.\n\n`SystemMaxFiles=` and `RuntimeMaxFiles=` control how many individual journal files to keep at most. Note that only archived files are deleted to reduce the number of files until this limit is reached; active files will stay around. This means that, in effect, there might still be more journal files around in total than this limit after a vacuuming operation is complete. This setting defaults to 100."],
[4,1649,"The maximum time to store entries in a single journal file before rotating to the next one. Normally, time-based rotation should not be required as size-based rotation with options such as `SystemMaxFileSize=` should be sufficient to ensure that journal files do not grow without bounds. However, to ensure that not too much data is lost at once when old journal files are deleted, it might make sense to change this value from the default of one month. Set to 0 to turn off this feature. This setting takes time values which may be suffixed with the units \"`year`\", \"`month`\", \"`week`\", \"`day`\", \"`h`\" or \"`m`\" to override the default time unit of seconds."],
[4,1650,"The maximum time to store journal entries. This controls whether journal files containing entries older than the specified time span are deleted. Normally, time-based deletion of old journal files should not be required as size-based deletion with options such as `SystemMaxUse=` should be sufficient to ensure that journal files do not grow without bounds. However, to enforce data retention policies, it might make sense to change this value from the default of 0 (which turns off this feature). This setting also takes time values which may be suffixed with the units \"`year`\", \"`month`\", \"`week`\", \"`day`\", \"`h`\" or \" `m`\" to override the default time unit of seconds."],
[4,1651,"The timeout before synchronizing journal files to disk. After syncing, journal files are placed in the OFFLINE state. Note that syncing is unconditionally done immediately after a log message of priority CRIT, ALERT or EMERG has been logged. This setting hence applies only to messages of the levels ERR, WARNING, NOTICE, INFO, DEBUG. The default timeout is 5 minutes."],
[4,1652,"Control whether log messages received by the journal daemon shall be forwarded to a traditional syslog daemon, to the kernel log buffer (kmsg), to the system console, or sent as wall messages to all logged-in users. These options take boolean arguments. If forwarding to syslog is enabled but nothing reads messages from the socket, forwarding to syslog has no effect. By default, only forwarding to wall is enabled. These settings may be overridden at boot time with the kernel command line options \"`systemd.journald.forward_to_syslog`\", \"`systemd.journald.forward_to_kmsg`\", \"`systemd.journald.forward_to_console`\", and \"`systemd.journald.forward_to_wall`\". If the option name is specified without \"`=`\" and the following argument, true is assumed. Otherwise, the argument is parsed as a boolean.\n\nWhen forwarding to the console, the TTY to log to can be changed with `TTYPath=`, described below.\n\nWhen forwarding to the kernel log buffer (kmsg), make sure to select a suitably large size for the log buffer, for example by adding \"`log_buf_len=8M`\" to the kernel command line. **systemd** will automatically disable kernel's rate-limiting applied to userspace processes (equivalent to setting \"`printk.devkmsg=on`\")."],
[4,1653,"Controls the maximum log level of messages that are stored in the journal, forwarded to syslog, kmsg, the console or wall (if that is enabled, see above). As argument, takes one of \"`emerg`\", \"`alert`\", \"`crit`\", \"`err`\", \"`warning`\", \"`notice`\", \"`info`\", \"`debug`\", or integer values in the range of 0â€“7 (corresponding to the same levels). Messages equal or below the log level specified are stored/forwarded, messages above are dropped. Defaults to \"`debug`\" for `MaxLevelStore=` and `MaxLevelSyslog=`, to ensure that the all messages are stored in the journal and forwarded to syslog. Defaults to \"`notice`\" for `MaxLevelKMsg=`, \"`info`\" for `MaxLevelConsole=`, and \"`emerg`\" for `MaxLevelWall=`. These settings may be overridden at boot time with the kernel command line options \"`systemd.journald.max_level_store=`\", \"`systemd.journald.max_level_syslog=`\", \"`systemd.journald.max_level_kmsg=`\", \"`systemd.journald.max_level_console=`\", \"`systemd.journald.max_level_wall=`\"."],
[4,1654,"Takes a boolean value. If enabled **systemd-journal** processes `/dev/kmsg` messages generated by the kernel. In the default journal namespace this option is enabled by default, it is disabled in all others."],
[4,1655,"Takes a boolean value. If enabled **systemd-journal** will turn on kernel auditing on start-up. If disabled it will turn it off. If unset it will neither enable nor disable it, leaving the previous state unchanged. Note that this option does not control whether **systemd-journald** collects generated audit records, it just controls whether it tells the kernel to generate them. This means if another tool turns on auditing even if **systemd-journald** left it off, it will still collect the generated messages. Defaults to on."],
[4,1656,"Change the console TTY to use if `ForwardToConsole=yes` is used. Defaults to `/dev/console`."],
[4,1657,"The maximum line length to permit when converting stream logs into record logs. When a systemd unit's standard output/error are connected to the journal via a stream socket, the data read is split into individual log records at newline (\"`\\n`\", ASCII 10) and `NUL` characters. If no such delimiter is read for the specified number of bytes a hard log record boundary is artificially inserted, breaking up overly long lines into multiple log records. Selecting overly large values increases the possible memory usage of the Journal daemon for each stream client, as in the worst case the journal daemon needs to buffer the specified number of bytes in memory before it can flush a new log record to disk. Also note that permitting overly large line maximum line lengths affects compatibility with traditional log protocols as log records might not fit anymore into a single `AF_UNIX` or `AF_INET` datagram. Takes a size in bytes. If the value is suffixed with K, M, G or T, the specified size is parsed as Kilobytes, Megabytes, Gigabytes, or Terabytes (with the base 1024), respectively. Defaults to 48K, which is relatively large but still small enough so that log records likely fit into network datagrams along with extra room for metadata. Note that values below 79 are not accepted and will be bumped to 79."],
[2,"Audit","",1655,50],
[2,"Compress","",1644,50],
[2,"ForwardToConsole","",1652,50],
[2,"ForwardToKMsg","",1652,50],
[2,"ForwardToSyslog","",1652,50],
[2,"ForwardToWall","",1652,50],
[2,"LineMax","",1657,50],
[2,"MaxFileSec","",1649,50],
[2,"MaxLevelConsole","",1653,50],
[2,"MaxLevelKMsg","",1653,50],
[2,"MaxLevelStore","",1653,50],
[2,"MaxLevelSyslog","",1653,50],
[2,"MaxLevelWall","",1653,50],
[2,"MaxRetentionSec","",1650,50],
[2,"RateLimitBurst","",1647,50],
[2,"RateLimitIntervalSec","",1647,50],
[2,"ReadKMsg","",1654,50],
[2,"RuntimeKeepFree","",1648,50],
[2,"RuntimeMaxFileSize","",1648,50],
[2,"RuntimeMaxFiles","",1648,50],
[2,"RuntimeMaxUse","",1648,50],
[2,"Seal","",1645,50],
[2,"SplitMode","",1646,50],
[2,"Storage","",1643,50],
[2,"SyncIntervalSec","",1651,50],
[2,"SystemKeepFree","",1648,50],
[2,"SystemMaxFileSize","",1648,50],
[2,"SystemMaxFiles","",1648,50],
[2,"SystemMaxUse","",1648,50],
[2,"TTYPath","",1656,50],
[3,51,"systemd-system.conf(5)","systemd-system.conf, system.conf.d, systemd-user.conf, user.conf.d â€” System and session service manager configuration files","systemd-system.conf.html"],
[4,1658,"Configures various parameters of basic manager operation. These options may be overridden by the respective process and kernel command line arguments. See [systemd(1)](systemd.html#) for details."],
[4,1659,"Defines what action will be performed if user presses Ctrl-Alt-Delete more than 7 times in 2s. Can be set to \"`reboot-force`\", \"`poweroff-force`\", \"`reboot-immediate`\", \"`poweroff-immediate`\" or disabled with \"`none`\". Defaults to \"`reboot-force`\"."],
[4,1660,"Configures the CPU affinity for the service manager as well as the default CPU affinity for all forked off processes. Takes a list of CPU indices or ranges separated by either whitespace or commas. CPU ranges are specified by the lower and upper CPU indices separated by a dash. This option may be specified more than once, in which case the specified CPU affinity masks are merged. If the empty string is assigned, the mask is reset, all assignments prior to this will have no effect. Individual services may override the CPU affinity for their processes with the `CPUAffinity=` setting in unit files, see [systemd.exec(5)](systemd.exec.html#)."],
[4,1661,"Configures the NUMA memory policy for the service manager and the default NUMA memory policy for all forked off processes. Individual services may override the default policy with the `NUMAPolicy=` setting in unit files, see [systemd.exec(5)](systemd.exec.html#)."],
[4,1662,"Configures the NUMA node mask that will be associated with the selected NUMA policy. Note that `default` and `local` NUMA policies don't require explicit NUMA node mask and value of the option can be empty. Similarly to `NUMAPolicy=`, value can be overridden by individual services in unit files, see [systemd.exec(5)](systemd.exec.html#)."],
[4,1663,"Configure the hardware watchdog at runtime and at reboot. Takes a timeout value in seconds (or in other time units if suffixed with \"`ms`\", \"`min`\", \"`h`\", \"`d`\", \"`w`\"), or the special strings \"`off`\" or \"`default`\". If set to \"`off`\" (alternatively: \"`0`\") the watchdog logic is disabled: no watchdog device is opened, configured, or pinged. If set to the special string \"`default`\" the watchdog is opened and pinged in regular intervals, but the timeout is not changed from the default. If set to any other time value the watchdog timeout is configured to the specified value (or a value close to it, depending on hardware capabilities).\n\nIf `RuntimeWatchdogSec=` is set to a non-zero value, the watchdog hardware (`/dev/watchdog0` or the path specified with `WatchdogDevice=` or the kernel option `systemd.watchdog-device=`) will be programmed to automatically reboot the system if it is not contacted within the specified timeout interval. The system manager will ensure to contact it at least once in half the specified timeout interval. This feature requires a hardware watchdog device to be present, as it is commonly the case in embedded and server systems. Not all hardware watchdogs allow configuration of all possible reboot timeout values, in which case the closest available timeout is picked.\n\n`RebootWatchdogSec=` may be used to configure the hardware watchdog when the system is asked to reboot. It works as a safety net to ensure that the reboot takes place even if a clean reboot attempt times out. Note that the `RebootWatchdogSec=` timeout applies only to the second phase of the reboot, i.e. after all regular services are already terminated, and after the system and service manager process (PID 1) got replaced by the `systemd-shutdown` binary, see system [bootup(7)](bootup.html#) for details. During the first phase of the shutdown operation the system and service manager remains running and hence `RuntimeWatchdogSec=` is still honoured. In order to define a timeout on this first phase of system shutdown, configure `JobTimeoutSec=` and `JobTimeoutAction=` in the \\[Unit\\] section of the `shutdown.target` unit. By default `RuntimeWatchdogSec=` defaults to 0 (off), and `RebootWatchdogSec=` to 10min.\n\n`KExecWatchdogSec=` may be used to additionally enable the watchdog when kexec is being executed rather than when rebooting. Note that if the kernel does not reset the watchdog on kexec (depending on the specific hardware and/or driver), in this case the watchdog might not get disabled after kexec succeeds and thus the system might get rebooted, unless `RuntimeWatchdogSec=` is also enabled at the same time. For this reason it is recommended to enable `KExecWatchdogSec=` only if `RuntimeWatchdogSec=` is also enabled.\n\nThese settings have no effect if a hardware watchdog is not available."],
[4,1664,"Configure the hardware watchdog device that the runtime and shutdown watchdog timers will open and use. Defaults to `/dev/watchdog0`. This setting has no effect if a hardware watchdog is not available."],
[4,1665,"Controls which capabilities to include in the capability bounding set for PID 1 and its children. See [capabilities(7)](http://man7.org/linux/man-pages/man7/capabilities.7.html) for details. Takes a whitespace-separated list of capability names as read by [cap\\_from\\_name(3)](https://www.mankier.com/3/cap_from_name). Capabilities listed will be included in the bounding set, all others are removed. If the list of capabilities is prefixed with ~, all but the listed capabilities will be included, the effect of the assignment inverted. Note that this option also affects the respective capabilities in the effective, permitted and inheritable capability sets. The capability bounding set may also be individually configured for units using the `CapabilityBoundingSet=` directive for units, but note that capabilities dropped for PID 1 cannot be regained in individual units, they are lost for good."],
[4,1666,"Takes a boolean argument. If true, ensures that PID 1 and all its children can never gain new privileges through [execve(2)](http://man7.org/linux/man-pages/man2/execve.2.html) (e.g. via setuid or setgid bits, or filesystem capabilities). Defaults to false. General purpose distributions commonly rely on executables with setuid or setgid bits and will thus not function properly with this option enabled. Individual units cannot disable this option. Also see [No New Privileges Flag](https://www.kernel.org/doc/html/latest/userspace-api/no_new_privs.html)."],
[4,1667,"Takes a space-separated list of architecture identifiers. Selects from which architectures system calls may be invoked on this system. This may be used as an effective way to disable invocation of non-native binaries system-wide, for example to prohibit execution of 32-bit x86 binaries on 64-bit x86-64 systems. This option operates system-wide, and acts similar to the `SystemCallArchitectures=` setting of unit files, see [systemd.exec(5)](systemd.exec.html#) for details. This setting defaults to the empty list, in which case no filtering of system calls based on architecture is applied. Known architecture identifiers are \"`x86`\", \"`x86-64`\", \"`x32`\", \"`arm`\" and the special identifier \"`native`\". The latter implicitly maps to the native architecture of the system (or more specifically, the architecture the system manager was compiled for). Set this setting to \"`native`\" to prohibit execution of any non-native binaries. When a binary executes a system call of an architecture that is not listed in this setting, it will be immediately terminated with the SIGSYS signal."],
[4,1668,"Sets the timer slack in nanoseconds for PID 1, which is inherited by all executed processes, unless overridden individually, for example with the `TimerSlackNSec=` setting in service units (for details see [systemd.exec(5)](systemd.exec.html#)). The timer slack controls the accuracy of wake-ups triggered by system timers. See [prctl(2)](http://man7.org/linux/man-pages/man2/prctl.2.html) for more information. Note that in contrast to most other time span definitions this parameter takes an integer value in nano-seconds if no unit is specified. The usual time units are understood too."],
[4,1669,"Takes `name`, `description` or `combined` as the value. If `name`, the system manager will use unit names in status messages (e.g. \"`systemd-journald.service`\"), instead of the longer and more informative descriptions set with `Description=` (e.g. \"`Journal Logging Service`\"). If `combined`, the system manager will use both unit names and descriptions in status messages (e.g. \"`systemd-journald.service - Journal Logging Service`\").\n\nSee [systemd.unit(5)](systemd.unit.html#) for details about unit names and `Description=`."],
[4,1670,"Sets the default accuracy of timer units. This controls the global default for the `AccuracySec=` setting of timer units, see [systemd.timer(5)](systemd.timer.html#) for details. `AccuracySec=` set in individual units override the global default for the specific unit. Defaults to 1min. Note that the accuracy of timer units is also affected by the configured timer slack for PID 1, see `TimerSlackNSec=` above."],
[4,1671,"Configures the default timeouts for starting, stopping and aborting of units, as well as the default time to sleep between automatic restarts of units, as configured per-unit in `TimeoutStartSec=`, `TimeoutStopSec=`, `TimeoutAbortSec=` and `RestartSec=` (for services, see [systemd.service(5)](systemd.service.html#) for details on the per-unit settings). Disabled by default, when service with `Type=oneshot` is used. For non-service units, `DefaultTimeoutStartSec=` sets the default `TimeoutSec=` value. `DefaultTimeoutStartSec=` and `DefaultTimeoutStopSec=` default to 90s. `DefaultTimeoutAbortSec=` is not set by default so that all units fall back to `TimeoutStopSec=`. `DefaultRestartSec=` defaults to 100ms."],
[4,1672,"Configure the default unit start rate limiting, as configured per-service by `StartLimitIntervalSec=` and `StartLimitBurst=`. See [systemd.service(5)](systemd.service.html#) for details on the per-service settings. `DefaultStartLimitIntervalSec=` defaults to 10s. `DefaultStartLimitBurst=` defaults to 5."],
[4,1673,"Configures environment variables passed to all executed processes. Takes a space-separated list of variable assignments. See [environ(7)](http://man7.org/linux/man-pages/man7/environ.7.html) for details about environment variables.\n\nSimple \"`%`\"-specifier expansion is supported, see below for a list of supported specifiers.\n\nExample:\n\nDefaultEnvironment=\"VAR1=word1 word2\" VAR2=word3 \"VAR3=word 5 6\"\n\nSets three variables \"`VAR1`\", \"`VAR2`\", \"`VAR3`\"."],
[4,1674,"Takes the same arguments as `DefaultEnvironment=`, see above. Sets environment variables just for the manager process itself. In contrast to user managers, these variables are not inherited by processes spawned by the system manager, use `DefaultEnvironment=` for that. Note that these variables are merged into the existing environment block. In particular, in case of the system manager, this includes variables set by the kernel based on the kernel command line.\n\nSetting environment variables for the manager process may be useful to modify its behaviour. See [ENVIRONMENT](https://systemd.io/ENVIRONMENT) for a descriptions of some variables understood by **systemd**.\n\nSimple \"`%`\"-specifier expansion is supported, see below for a list of supported specifiers."],
[4,1675,"Configure the default resource accounting settings, as configured per-unit by `CPUAccounting=`, `BlockIOAccounting=`, `MemoryAccounting=`, `TasksAccounting=`, `IOAccounting=` and `IPAccounting=`. See [systemd.resource-control(5)](systemd.resource-control.html#) for details on the per-unit settings. `DefaultTasksAccounting=` defaults to yes, `DefaultMemoryAccounting=` to yes. `DefaultCPUAccounting=` defaults to yes if enabling CPU accounting doesn't require the CPU controller to be enabled (Linux 4.15+ using the unified hierarchy for resource control), otherwise it defaults to no. The other three settings default to no."],
[4,1676,"Configure the default value for the per-unit `TasksMax=` setting. See [systemd.resource-control(5)](systemd.resource-control.html#) for details. This setting applies to all unit types that support resource control settings, with the exception of slice units. Defaults to 15% of the minimum of `kernel.pid_max=`, `kernel.threads-max=` and root cgroup `pids.max`. Kernel has a default value for `kernel.pid_max=` and an algorithm of counting in case of more than 32 cores. For example with the default `kernel.pid_max=`, `DefaultTasksMax=` defaults to 4915, but might be greater in other systems or smaller in OS containers."],
[4,1677,"These settings control various default resource limits for processes executed by units. See [setrlimit(2)](http://man7.org/linux/man-pages/man2/setrlimit.2.html) for details. These settings may be overridden in individual units using the corresponding `LimitXXX=` directives and they accept the same parameter syntax, see [systemd.exec(5)](systemd.exec.html#) for details. Note that these resource limits are only defaults for units, they are not applied to the service manager process (i.e. PID 1) itself.\n\nMost of these settings are unset, which means the resource limits are inherited from the kernel or, if invoked in a container, from the container manager. However, the following have defaults:\n\n*   `DefaultLimitNOFILE=` defaults to \"`1024:524288`\".\n    \n*   `DefaultLimitCORE=` does not have a default but it is worth mentioning that `RLIMIT_CORE` is set to \"`infinity`\" by PID 1 which is inherited by its children.\n    \n*   Note that the service manager internally increases `RLIMIT_MEMLOCK` for itself, however the limit is reverted to the original value for child processes forked off."],
[4,1678,"Configure the default policy for reacting to processes being killed by the Linux Out-Of-Memory (OOM) killer. This may be used to pick a global default for the per-unit `OOMPolicy=` setting. See [systemd.service(5)](systemd.service.html#) for details. Note that this default is not used for services that have `Delegate=` turned on."],
[4,1679,"Configures the default OOM score adjustments of processes run by the service manager. This defaults to unset (meaning the forked off processes inherit the service manager's OOM score adjustment value), except if the service manager is run for an unprivileged user, in which case this defaults to the service manager's OOM adjustment value plus 100 (this makes service processes slightly more likely to be killed under memory pressure than the manager itself). This may be used to pick a global default for the per-unit `OOMScoreAdjust=` setting. See [systemd.exec(5)](systemd.exec.html#) for details. Note that this setting has no effect on the OOM score adjustment value of the service manager process itself, it retains the original value set during its invocation."],
[2,"CPUAffinity","",1660,51],
[2,"CapabilityBoundingSet","",1665,51],
[2,"CrashChangeVT","no",1658,51],
[2,"CrashReboot","no",1658,51],
[2,"CrashShell","no",1658,51],
[2,"CtrlAltDelBurstAction","",1659,51],
[2,"DefaultBlockIOAccounting","",1675,51],
[2,"DefaultCPUAccounting","",1675,51],
[2,"DefaultEnvironment","",1673,51],
[2,"DefaultIOAccounting","",1675,51],
[2,"DefaultIPAccounting","",1675,51],
[2,"DefaultLimitAS","",1677,51],
[2,"DefaultLimitCORE","",1677,51],
[2,"DefaultLimitCPU","",1677,51],
[2,"DefaultLimitDATA","",1677,51],
[2,"DefaultLimitFSIZE","",1677,51],
[2,"DefaultLimitLOCKS","",1677,51],
[2,"DefaultLimitMEMLOCK","",1677,51],
[2,"DefaultLimitMSGQUEUE","",1677,51],
[2,"DefaultLimitNICE","",1677,51],
[2,"DefaultLimitNOFILE","",1677,51],
[2,"DefaultLimitNPROC","",1677,51],
[2,"DefaultLimitRSS","",1677,51],
[2,"DefaultLimitRTPRIO","",1677,51],
[2,"DefaultLimitRTTIME","",1677,51],
[2,"DefaultLimitSIGPENDING","",1677,51],
[2,"DefaultLimitSTACK","",1677,51],
[2,"DefaultMemoryAccounting","",1675,51],
[2,"DefaultOOMPolicy","",1678,51],
[2,"DefaultOOMScoreAdjust","",1679,51],
[2,"DefaultRestartSec","",1671,51],
[2,"DefaultStandardError","inherit",1658,51],
[2,"DefaultStandardOutput","journal",1658,51],
[2,"DefaultStartLimitBurst","",1672,51],
[2,"DefaultStartLimitIntervalSec","",1672,51],
[2,"DefaultTasksAccounting","",1675,51],
[2,"DefaultTasksMax","",1676,51],
[2,"DefaultTimeoutAbortSec","",1671,51],
[2,"DefaultTimeoutStartSec","",1671,51],
[2,"DefaultTimeoutStopSec","",1671,51],
[2,"DefaultTimerAccuracySec","",1670,51],
[2,"DumpCore","yes",1658,51],
[2,"KExecWatchdogSec","",1663,51],
[2,"LogColor","yes",1658,51],
[2,"LogLevel","yes",1658,51],
[2,"LogLocation","yes",1658,51],
[2,"LogTarget","yes",1658,51],
[2,"LogTime","yes",1658,51],
[2,"ManagerEnvironment","",1674,51],
[2,"NUMAMask","",1662,51],
[2,"NUMAPolicy","",1661,51],
[2,"NoNewPrivileges","",1666,51],
[2,"RebootWatchdogSec","",1663,51],
[2,"RuntimeWatchdogSec","",1663,51],
[2,"ShowStatus","yes",1658,51],
[2,"StatusUnitFormat","",1669,51],
[2,"SystemCallArchitectures","",1667,51],
[2,"TimerSlackNSec","",1668,51],
[2,"WatchdogDevice","",1664,51],
[3,52,"coredump.conf(5)","coredump.conf, coredump.conf.d â€” Core dump storage configuration files","coredump.conf.html"],
[4,1680,"Controls where to store cores. One of \"`none`\", \"`external`\", and \"`journal`\". When \"`none`\", the core dumps may be logged (including the backtrace if possible), but not stored permanently. When \"`external`\" (the default), cores will be stored in `/var/lib/systemd/coredump/`. When \"`journal`\", cores will be stored in the journal and rotated following normal journal rotation patterns.\n\nWhen cores are stored in the journal, they might be compressed following journal compression settings, see [journald.conf(5)](journald.conf.html#). When cores are stored externally, they will be compressed by default, see below."],
[4,1681,"Controls compression for external storage. Takes a boolean argument, which defaults to \"`yes`\"."],
[4,1682,"The maximum size in bytes of a core which will be processed. Core dumps exceeding this size may be stored, but the backtrace will not be generated. Like other sizes in this same config file, the usual suffixes to the base of 1024 are allowed (B, K, M, G, T, P, and E).\n\nSetting `Storage=none` and `ProcessSizeMax=0` disables all coredump handling except for a log entry."],
[4,1683,"The maximum (compressed or uncompressed) size in bytes of a core to be saved. Unit suffixes are allowed just as in `ProcessSizeMax=`."],
[4,1684,"Enforce limits on the disk space, specified in bytes, taken up by externally stored core dumps. Unit suffixes are allowed just as in `ProcessSizeMax=`. `MaxUse=` makes sure that old core dumps are removed as soon as the total disk space taken up by core dumps grows beyond this limit (defaults to 10% of the total disk size). `KeepFree=` controls how much disk space to keep free at least (defaults to 15% of the total disk size). Note that the disk space used by core dumps might temporarily exceed these limits while core dumps are processed. Note that old core dumps are also removed based on time via [systemd-tmpfiles(8)](systemd-tmpfiles.html#). Set either value to 0 to turn off size-based cleanup."],
[2,"Compress","",1681,52],
[2,"ExternalSizeMax","",1683,52],
[2,"JournalSizeMax","",1683,52],
[2,"KeepFree","",1684,52],
[2,"MaxUse","",1684,52],
[2,"ProcessSizeMax","",1682,52],
[2,"Storage","",1680,52],
[3,53,"oomd.conf(5)","oomd.conf, oomd.conf.d â€” Global systemd-oomd configuration files","oomd.conf.html"],
[4,1685,"Sets the limit for memory and swap usage on the system before **systemd-oomd** will take action. If the fraction of memory used and the fraction of swap used on the system are both more than what is defined here, **systemd-oomd** will act on eligible descendant control groups with swap usage greater than 5% of total swap, starting from the ones with the highest swap usage. Which control groups are monitored and what action gets taken depends on what the unit has configured for `ManagedOOMSwap=`. Takes a value specified in percent (when suffixed with \"%\"), permille (\"â€°\") or permyriad (\"â€±\"), between 0% and 100%, inclusive. Defaults to 90%."],
[4,1686,"Sets the limit for memory pressure on the unit's control group before **systemd-oomd** will take action. A unit can override this value with `ManagedOOMMemoryPressureLimit=`. The memory pressure for this property represents the fraction of time in a 10 second window in which all tasks in the control group were delayed. For each monitored control group, if the memory pressure on that control group exceeds the limit set for longer than the duration set by `DefaultMemoryPressureDurationSec=`, **systemd-oomd** will act on eligible descendant control groups, starting from the ones with the most reclaim activity to the least reclaim activity. Which control groups are monitored and what action gets taken depends on what the unit has configured for `ManagedOOMMemoryPressure=`. Takes a fraction specified in the same way as `SwapUsedLimit=` above. Defaults to 60%."],
[4,1687,"Sets the amount of time a unit's control group needs to have exceeded memory pressure limits before **systemd-oomd** will take action. Memory pressure limits are defined by `DefaultMemoryPressureLimit=` and `ManagedOOMMemoryPressureLimit=`. Must be set to 0, or at least 1 second. Defaults to 30 seconds when unset or 0."],
[2,"DefaultMemoryPressureDurationSec","",1687,53],
[2,"DefaultMemoryPressureLimit","",1686,53],
[2,"SwapUsedLimit","",1685,53],
[3,54,"logind.conf(5)","logind.conf, logind.conf.d â€” Login manager configuration files","logind.conf.html"],
[4,1688,"Takes a positive integer. Configures how many virtual terminals (VTs) to allocate by default that, when switched to and are previously unused, \"`autovt`\" services are automatically spawned on. These services are instantiated from the template unit `autovt@.service` for the respective VT TTY name, for example, `autovt@tty4.service`. By default, `autovt@.service` is linked to `getty@.service`. In other words, login prompts are started dynamically as the user switches to unused virtual terminals. Hence, this parameter controls how many login \"`gettys`\" are available on the VTs. If a VT is already used by some other subsystem (for example, a graphical login), this kind of activation will not be attempted. Note that the VT configured in `ReserveVT=` is always subject to this kind of activation, even if it is not one of the VTs configured with the `NAutoVTs=` directive. Defaults to 6. When set to 0, automatic spawning of \"`autovt`\" services is disabled."],
[4,1689,"Takes a positive integer. Identifies one virtual terminal that shall unconditionally be reserved for `autovt@.service` activation (see above). The VT selected with this option will be marked busy unconditionally, so that no other subsystem will allocate it. This functionality is useful to ensure that, regardless of how many VTs are allocated by other subsystems, one login \"`getty`\" is always available. Defaults to 6 (in other words, there will always be a \"`getty`\" available on Alt-F6.). When set to 0, VT reservation is disabled."],
[4,1690,"Takes a boolean argument. Configures whether the processes of a user should be killed when the user logs out. If true, the scope unit corresponding to the session and all processes inside that scope will be terminated. If false, the scope is \"abandoned\", see [systemd.scope(5)](systemd.scope.html#), and processes are not killed. Defaults to \"`yes`\", but see the options `KillOnlyUsers=` and `KillExcludeUsers=` below.\n\nIn addition to session processes, user process may run under the user manager unit `user@.service`. Depending on the linger settings, this may allow users to run processes independent of their login sessions. See the description of **enable-linger** in [loginctl(1)](loginctl.html#).\n\nNote that setting `KillUserProcesses=yes` will break tools like [screen(1)](http://linux.die.net/man/1/screen) and [tmux(1)](http://linux.die.net/man/1/tmux), unless they are moved out of the session scope. See example in [systemd-run(1)](systemd-run.html#)."],
[4,1691,"These settings take space-separated lists of usernames that override the `KillUserProcesses=` setting. A user name may be added to `KillExcludeUsers=` to exclude the processes in the session scopes of that user from being killed even if `KillUserProcesses=yes` is set. If `KillExcludeUsers=` is not set, the \"`root`\" user is excluded by default. `KillExcludeUsers=` may be set to an empty value to override this default. If a user is not excluded, `KillOnlyUsers=` is checked next. If this setting is specified, only the processes in the session scopes of those users will be killed. Otherwise, users are subject to the `KillUserProcesses=yes` setting."],
[4,1692,"Configures the action to take when the system is idle. Takes one of \"`ignore`\", \"`poweroff`\", \"`reboot`\", \"`halt`\", \"`kexec`\", \"`suspend`\", \"`hibernate`\", \"`hybrid-sleep`\", \"`suspend-then-hibernate`\", and \"`lock`\". Defaults to \"`ignore`\".\n\nNote that this requires that user sessions correctly report the idle status to the system. The system will execute the action after all sessions report that they are idle, no idle inhibitor lock is active, and subsequently, the time configured with `IdleActionSec=` (see below) has expired."],
[4,1693,"Configures the delay after which the action configured in `IdleAction=` (see above) is taken after the system is idle."],
[4,1694,"Specifies the maximum time a system shutdown or sleep request is delayed due to an inhibitor lock of type \"`delay`\" being active before the inhibitor is ignored and the operation executes anyway. Defaults to 5."],
[4,1695,"Specifies how long to keep the user record and per-user service `user@.service` around for a user after they logged out fully. If set to zero, the per-user service is terminated immediately when the last session of the user has ended. If this option is configured to non-zero rapid logout/login cycles are sped up, as the user's service manager is not constantly restarted. If set to \"`infinity`\" the per-user service for a user is never terminated again after first login, and continues to run until system shutdown. Defaults to 10s."],
[4,1696,"Controls how logind shall handle the system power, reboot and sleep keys and the lid switch to trigger actions such as system power-off, reboot or suspend. Can be one of \"`ignore`\", \"`poweroff`\", \"`reboot`\", \"`halt`\", \"`kexec`\", \"`suspend`\", \"`hibernate`\", \"`hybrid-sleep`\", \"`suspend-then-hibernate`\", \"`lock`\", and \"`factory-reset`\". If \"`ignore`\", logind will never handle these keys. If \"`lock`\", all running sessions will be screen-locked; otherwise, the specified action will be taken in the respective event. Only input devices with the \"`power-switch`\" udev tag will be watched for key/lid switch events. `HandlePowerKey=` defaults to \"`poweroff`\", `HandleRebootKey=` defaults to \"`reboot`\", `HandleSuspendKey=` defaults to \"`suspend`\", `HandleHibernateKey=` defaults to \"`hibernate`\", `HandlePowerKeyLongPress=` defaults to \"`ignore`\", `HandleRebootKeyLongPress=` defaults to \"`poweroff`\", `HandleSuspendKeyLongPress=` defaults to \"`hibernate`\", `HandleHibernateKeyLongPress=` defaults to \"`ignore`\". `HandleLidSwitch=` defaults to \"`suspend`\". `HandleLidSwitchExternalPower=` is completely ignored by default (for backwards compatibility) â€” an explicit value must be set before it will be used to determine behaviour. `HandleLidSwitchDocked=` defaults to \"`ignore`\". If the system is inserted in a docking station, or if more than one display is connected, the action specified by `HandleLidSwitchDocked=` occurs; if the system is on external power the action (if any) specified by `HandleLidSwitchExternalPower=` occurs; otherwise the `HandleLidSwitch=` action occurs.\n\nA different application may disable logind's handling of system power and sleep keys and the lid switch by taking a low-level inhibitor lock (\"`handle-power-key`\", \"`handle-suspend-key`\", \"`handle-hibernate-key`\", \"`handle-lid-switch`\", \"`handle-reboot-key`\"). This is most commonly used by graphical desktop environments to take over suspend and hibernation handling, and to use their own configuration mechanisms. If a low-level inhibitor lock is taken, logind will not take any action when that key or switch is triggered and the `Handle*=` settings are irrelevant."],
[4,1697,"Controls whether actions that **systemd-logind** takes when the power, reboot and sleep keys and the lid switch are triggered are subject to high-level inhibitor locks (\"shutdown\", \"reboot\", \"sleep\", \"idle\"). Low level inhibitor locks (\"`handle-power-key`\", \"`handle-suspend-key`\", \"`handle-hibernate-key`\", \"`handle-lid-switch`\", \"`handle-reboot-key`\"), are always honored, irrespective of this setting.\n\nThese settings take boolean arguments. If \"`no`\", the inhibitor locks taken by applications are respected. If \"`yes`\", \"shutdown\", \"reboot\" \"sleep\", and \"idle\" inhibitor locks are ignored. `PowerKeyIgnoreInhibited=`, `SuspendKeyIgnoreInhibited=`, `HibernateKeyIgnoreInhibited=` and `RebootKeyIgnoreInhibited=` default to \"`no`\". `LidSwitchIgnoreInhibited=` defaults to \"`yes`\". This means that when **systemd-logind** is handling events by itself (no low level inhibitor locks are taken by another application), the lid switch does not respect suspend blockers by default, but the power and sleep keys do."],
[4,1698,"Specifies a period of time after system startup or system resume in which systemd will hold off on reacting to lid events. This is required for the system to properly detect any hotplugged devices so systemd can ignore lid events if external monitors, or docks, are connected. If set to 0, systemd will always react immediately, possibly before the kernel fully probed all hotplugged devices. This is safe, as long as you do not care for systemd to account for devices that have been plugged or unplugged while the system was off. Defaults to 30s."],
[4,1699,"Sets the size limit on the `$XDG_RUNTIME_DIR` runtime directory for each user who logs in. Takes a size in bytes, optionally suffixed with the usual K, G, M, and T suffixes, to the base 1024 (IEC). Alternatively, a numerical percentage suffixed by \"`%`\" may be specified, which sets the size limit relative to the amount of physical RAM. Defaults to 10%. Note that this size is a safety limit only. As each runtime directory is a tmpfs file system, it will only consume as much memory as is needed."],
[4,1700,"Sets the limit on number of inodes for the `$XDG_RUNTIME_DIR` runtime directory for each user who logs in. Takes a number, optionally suffixed with the usual K, G, M, and T suffixes, to the base 1024 (IEC). Defaults to `RuntimeDirectorySize=` divided by 4096. Note that this size is a safety limit only. As each runtime directory is a tmpfs file system, it will only consume as much memory as is needed."],
[4,1701,"Controls the maximum number of concurrent inhibitors to permit. Defaults to 8192 (8K)."],
[4,1702,"Controls the maximum number of concurrent user sessions to manage. Defaults to 8192 (8K). Depending on how the `pam_systemd.so` module is included in the PAM stack configuration, further login sessions will either be refused, or permitted but not tracked by `systemd-logind`."],
[4,1703,"Controls whether System V and POSIX IPC objects belonging to the user shall be removed when the user fully logs out. Takes a boolean argument. If enabled, the user may not consume IPC resources after the last of the user's sessions terminated. This covers System V semaphores, shared memory and message queues, as well as POSIX shared memory and message queues. Note that IPC objects of the root user and other system users are excluded from the effect of this setting. Defaults to \"`yes`\"."],
[2,"HandleHibernateKey","",1696,54],
[2,"HandleHibernateKeyLongPress","",1696,54],
[2,"HandleLidSwitch","",1696,54],
[2,"HandleLidSwitchDocked","",1696,54],
[2,"HandleLidSwitchExternalPower","",1696,54],
[2,"HandlePowerKey","",1696,54],
[2,"HandlePowerKeyLongPress","",1696,54],
[2,"HandleRebootKey","",1696,54],
[2,"HandleRebootKeyLongPress","",1696,54],
[2,"HandleSuspendKey","",1696,54],
[2,"HandleSuspendKeyLongPress","",1696,54],
[2,"HibernateKeyIgnoreInhibited","",1697,54],
[2,"HoldoffTimeoutSec","",1698,54],
[2,"IdleAction","",1692,54],
[2,"IdleActionSec","",1693,54],
[2,"InhibitDelayMaxSec","",1694,54],
[2,"InhibitorsMax","",1701,54],
[2,"KillExcludeUsers","",1691,54],
[2,"KillOnlyUsers","",1691,54],
[2,"KillUserProcesses","",1690,54],
[2,"LidSwitchIgnoreInhibited","",1697,54],
[2,"NAutoVTs","",1688,54],
[2,"PowerKeyIgnoreInhibited","",1697,54],
[2,"RebootKeyIgnoreInhibited","",1697,54],
[2,"RemoveIPC","",1703,54],
[2,"ReserveVT","",1689,54],
[2,"RuntimeDirectoryInodesMax","",1700,54],
[2,"RuntimeDirectorySize","",1699,54],
[2,"SessionsMax","",1702,54],
[2,"SuspendKeyIgnoreInhibited","",1697,54],
[2,"UserStopDelaySec","",1695,54],
[3,55,"journal-upload.conf(5)","journal-upload.conf, journal-upload.conf.d â€” Configuration files for the journal upload service","journal-upload.conf.html"],
[4,1704,"The URL to upload the journal entries to. See the description of `--url=` option in [systemd-journal-upload(8)](systemd-journal-upload.html#) for the description of possible values. There is no default value, so either this option or the command-line option must be always present to make an upload."],
[4,1705,"SSL key in PEM format."],
[4,1706,"SSL CA certificate in PEM format."],
[4,1707,"SSL CA certificate."],
[4,1708,"When network connectivity to the server is lost, this option configures the time to wait for the connectivity to get restored. If the server is not reachable over the network for the configured time, **systemd-journal-upload** exits. Takes a value in seconds (or in other time units if suffixed with \"ms\", \"min\", \"h\", etc). For details, see [systemd.time(5)](systemd.time.html#)."],
[2,"NetworkTimeoutSec","",1708,55],
[2,"ServerCertificateFile","",1706,55],
[2,"ServerKeyFile","",1705,55],
[2,"TrustedCertificateFile","",1707,55],
[2,"URL","",1704,55],
[3,56,"journal-remote.conf(5)","journal-remote.conf, journal-remote.conf.d â€” Configuration files for the service accepting remote journal uploads","journal-remote.conf.html"],
[4,1709,"Periodically sign the data in the journal using Forward Secure Sealing."],
[4,1710,"One of \"`host`\" or \"`none`\"."],
[4,1711,"SSL key in PEM format."],
[4,1712,"SSL certificate in PEM format."],
[4,1713,"SSL CA certificate."],
[2,"Seal","",1709,56],
[2,"ServerCertificateFile","",1712,56],
[2,"ServerKeyFile","",1711,56],
[2,"SplitMode","",1710,56],
[2,"TrustedCertificateFile","",1713,56],
[3,57,"pstore.conf(5)","pstore.conf, pstore.conf.d â€” PStore configuration file","pstore.conf.html"],
[4,1714,"Controls where to archive (i.e. copy) files from the pstore filesystem. One of \"`none`\", \"`external`\", and \"`journal`\". When \"`none`\", the tool exits without processing files in the pstore filesystem. When \"`external`\" (the default), files are archived into `/var/lib/systemd/pstore/`, and logged into the journal. When \"`journal`\", pstore file contents are logged only in the journal."],
[4,1715,"Controls whether or not files are removed from pstore after processing. Takes a boolean value. When true, a pstore file is removed from the pstore once it has been archived (either to disk or into the journal). When false, processing of pstore files occurs normally, but the files remain in the pstore. The default is true in order to maintain the pstore in a nearly empty state, so that the pstore has storage available for the next kernel error event."],
[2,"Storage","",1714,57],
[2,"Unlink","",1715,57],
[3,58,"udev.conf(5)","udev.conf â€” Configuration for device event managing daemon","udev.conf.html"],
[4,1716,"The log level. Valid values are the numerical syslog priorities or their textual representations: `err`, `info` and `debug`."],
[4,1717,"An integer. The maximum number of events executed in parallel.\n\nThis is the same as the `--children-max=` option."],
[4,1718,"An integer. Delay the execution of each ``RUN{_`program`_}`` parameter by the given number of seconds. This option might be useful when debugging system crashes during coldplug caused by loading non-working kernel modules.\n\nThis is the same as the `--exec-delay=` option."],
[4,1719,"An integer. The number of seconds to wait for events to finish. After this time, the event will be terminated. The default is 180 seconds.\n\nThis is the same as the `--event-timeout=` option."],
[4,1720,"Specifies when systemd-udevd should resolve names of users and groups. When set to `early` (the default), names will be resolved when the rules are parsed. When set to `late`, names will be resolved for every event. When set to `never`, names will never be resolved and all devices will be owned by root.\n\nThis is the same as the `--resolve-names=` option."],
[4,1721,"Specifies a signal that `systemd-udevd` will send on worker timeouts. Note that both workers and spawned processes will be killed using this signal. Defaults to `SIGKILL`."],
[2,"children_max","",1717,58],
[2,"event_timeout","",1719,58],
[2,"exec_delay","",1718,58],
[2,"resolve_names","",1720,58],
[2,"timeout_signal","",1721,58],
[2,"udev_log","",1716,58],
[3,59,"repart.d(5)","repart.d â€” Partition Definition Files for Automatic Boot-Time Repartitioning","repart.d.html"],
[4,1722,"The GPT partition type UUID to match. This may be a GPT partition type UUID such as `4f68bce3-e8cd-4db1-96e7-fbcaf984b709`, or one of the following special identifiers:\n\n**TableÂ 1.Â GPT partition type identifiers**\n\nIdentifier\n\nExplanation\n\n`esp`\n\nEFI System Partition\n\n`xbootldr`\n\nExtended Boot Loader Partition\n\n`swap`\n\nSwap partition\n\n`home`\n\nHome (`/home/`) partition\n\n`srv`\n\nServer data (`/srv/`) partition\n\n`var`\n\nVariable data (`/var/`) partition\n\n`tmp`\n\nTemporary data (`/var/tmp/`) partition\n\n`linux-generic`\n\nGeneric Linux file system partition\n\n`root`\n\nRoot file system partition type appropriate for the local architecture (an alias for an architecture root file system partition type listed below, e.g. `root-x86-64`)\n\n`root-verity`\n\nVerity data for the root file system partition for the local architecture\n\n`root-secondary`\n\nRoot file system partition of the secondary architecture of the local architecture (usually the matching 32bit architecture for the local 64bit architecture)\n\n`root-secondary-verity`\n\nVerity data for the root file system partition of the secondary architecture\n\n`root-x86`\n\nRoot file system partition for the x86 (32bit, aka i386) architecture\n\n`root-x86-verity`\n\nVerity data for the x86 (32bit) root file system partition\n\n`root-x86-64`\n\nRoot file system partition for the x86\\_64 (64bit, aka amd64) architecture\n\n`root-x86-64-verity`\n\nVerity data for the x86\\_64 (64bit) root file system partition\n\n`root-arm`\n\nRoot file system partition for the ARM (32bit) architecture\n\n`root-arm-verity`\n\nVerity data for the ARM (32bit) root file system partition\n\n`root-arm64`\n\nRoot file system partition for the ARM (64bit, aka aarch64) architecture\n\n`root-arm64-verity`\n\nVerity data for the ARM (64bit, aka aarch64) root file system partition\n\n`root-ia64`\n\nRoot file system partition for the ia64 architecture\n\n`root-ia64-verity`\n\nVerity data for the ia64 root file system partition\n\n`root-loongarch64`\n\nRoot file system partition for the LoongArch 64-bit architecture\n\n`root-loongarch64-verity`\n\nVerity data for the LoongArch 64-bit root file system partition\n\n`root-riscv32`\n\nRoot file system partition for the RISC-V 32-bit architecture\n\n`root-riscv32-verity`\n\nVerity data for the RISC-V 32-bit root file system partition\n\n`root-riscv64`\n\nRoot file system partition for the RISC-V 64-bit architecture\n\n`root-riscv64-verity`\n\nVerity data for the RISC-V 64-bit root file system partition\n\n`usr`\n\n`/usr/` file system partition type appropriate for the local architecture (an alias for an architecture `/usr/` file system partition type listed below, e.g. `usr-x86-64`)\n\n`usr-verity`\n\nVerity data for the `/usr/` file system partition for the local architecture\n\n`usr-secondary`\n\n`/usr/` file system partition of the secondary architecture of the local architecture (usually the matching 32bit architecture for the local 64bit architecture)\n\n`usr-secondary-verity`\n\nVerity data for the `/usr/` file system partition of the secondary architecture\n\n`usr-x86`\n\n`/usr/` file system partition for the x86 (32bit, aka i386) architecture\n\n`usr-x86-verity`\n\nVerity data for the x86 (32bit) `/usr/` file system partition\n\n`usr-x86-64`\n\n`/usr/` file system partition for the x86\\_64 (64bit, aka amd64) architecture\n\n`usr-x86-64-verity`\n\nVerity data for the x86\\_64 (64bit) `/usr/` file system partition\n\n`usr-arm`\n\n`/usr/` file system partition for the ARM (32bit) architecture\n\n`usr-arm-verity`\n\nVerity data for the ARM (32bit) `/usr/` file system partition\n\n`usr-arm64`\n\n`/usr/` file system partition for the ARM (64bit, aka aarch64) architecture\n\n`usr-arm64-verity`\n\nVerity data for the ARM (64bit, aka aarch64) `/usr/` file system partition\n\n`usr-ia64`\n\n`/usr/` file system partition for the ia64 architecture\n\n`usr-ia64-verity`\n\nVerity data for the ia64 `/usr/` file system partition\n\n`usr-loongarch64`\n\n`/usr/` file system partition for the LoongArch 64-bit architecture\n\n`usr-loongarch64-verity`\n\nVerity data for the LoongArch 64-bit `/usr/` file system partition\n\n`usr-riscv32`\n\n`/usr/` file system partition for the RISC-V 32-bit architecture\n\n`usr-riscv32-verity`\n\nVerity data for the RISC-V 32-bit `/usr/` file system partition\n\n`usr-riscv64`\n\n`/usr/` file system partition for the RISC-V 64-bit architecture\n\n`usr-riscv64-verity`\n\nVerity data for the RISC-V 64-bit `/usr/` file system partition\n\n  \n\nThis setting defaults to `linux-generic`.\n\nMost of the partition type UUIDs listed above are defined in the [Discoverable Partitions Specification](https://systemd.io/DISCOVERABLE_PARTITIONS)."],
[4,1723,"The textual label to assign to the partition if none is assigned yet. Note that this setting is not used for matching. It is also not used when a label is already set for an existing partition. It is thus only used when a partition is newly created or when an existing one had a no label set (that is: an empty label). If not specified a label derived from the partition type is automatically used. Simple specifier expansion is supported, see below."],
[4,1724,"The UUID to assign to the partition if none is assigned yet. Note that this setting is not used for matching. It is also not used when a UUID is already set for an existing partition. It is thus only used when a partition is newly created or when an existing one had a all-zero UUID set. If not specified a UUID derived from the partition type is automatically used."],
[4,1725,"A numeric priority to assign to this partition, in the range -2147483648â€¦2147483647, with smaller values indicating higher priority, and higher values indicating smaller priority. This priority is used in case the configured size constraints on the defined partitions do not permit fitting all partitions onto the available disk space. If the partitions do not fit, the highest numeric partition priority of all defined partitions is determined, and all defined partitions with this priority are removed from the list of new partitions to create (which may be multiple, if the same priority is used for multiple partitions). The fitting algorithm is then tried again. If the partitions still do not fit, the now highest numeric partition priority is determined, and the matching partitions removed too, and so on. Partitions of a priority of 0 or lower are never removed. If all partitions with a priority above 0 are removed and the partitions still do not fit on the device the operation fails. Note that this priority has no effect on ordering partitions, for that use the alphabetical order of the filenames of the partition definition files. Defaults to 0."],
[4,1726,"A numeric weight to assign to this partition in the range 0â€¦1000000. Available disk space is assigned the defined partitions according to their relative weights (subject to the size constraints configured with `SizeMinBytes=`, `SizeMaxBytes=`), so that a partition with weight 2000 gets double the space as one with weight 1000, and a partition with weight 333 a third of that. Defaults to 1000.\n\nThe `Weight=` setting is used to distribute available disk space in an \"elastic\" fashion, based on the disk size and existing partitions. If a partition shall have a fixed size use both `SizeMinBytes=` and `SizeMaxBytes=` with the same value in order to fixate the size to one value, in which case the weight has no effect."],
[4,1727,"Similar to `Weight=` but sets a weight for the free space after the partition (the \"padding\"). When distributing available space the weights of all partitions and all defined padding is summed, and then each partition and padding gets the fraction defined by its weight. Defaults to 0, i.e. by default no padding is applied.\n\nPadding is useful if empty space shall be left for later additions or a safety margin at the end of the device or between partitions."],
[4,1728,"Specifies minimum and maximum size constraints in bytes. Takes the usual K, M, G, T, â€¦ suffixes (to the base of 1024). If `SizeMinBytes=` is specified the partition is created at or grown to at least the specified size. If `SizeMaxBytes=` is specified the partition is created at or grown to at most the specified size. The precise size is determined through the weight value configured with `Weight=`, see above. When `SizeMinBytes=` is set equal to `SizeMaxBytes=` the configured weight has no effect as the partition is explicitly sized to the specified fixed value. Note that partitions are never created smaller than 4096 bytes, and since partitions are never shrunk the previous size of the partition (in case the partition already exists) is also enforced as lower bound for the new size. The values should be specified as multiples of 4096 bytes, and are rounded upwards (in case of `SizeMinBytes=`) or downwards (in case of `SizeMaxBytes=`) otherwise. If the backing device does not provide enough space to fulfill the constraints placing the partition will fail. For partitions that shall be created, depending on the setting of `Priority=` (see above) the partition might be dropped and the placing algorithm restarted. By default a minimum size constraint of 10M and no maximum size constraint is set."],
[4,1729,"Specifies minimum and maximum size constraints in bytes for the free space after the partition (the \"padding\"). Semantics are similar to `SizeMinBytes=` and `SizeMaxBytes=`, except that unlike partition sizes free space can be shrunk and can be as small as zero. By default no size constraints on padding are set, so that only `PaddingWeight=` determines the size of the padding applied."],
[4,1730,"Takes a path to a regular file, block device node or directory, or the special value \"`auto`\". If specified and the partition is newly created, the data from the specified path is written to the newly created partition, on the block level. If a directory is specified, the backing block device of the file system the directory is on is determined, and the data read directly from that. This option is useful to efficiently replicate existing file systems onto new partitions on the block level â€” for example to build a simple OS installer or an OS image builder.\n\nIf the special value \"`auto`\" is specified, the source to copy from is automatically picked up from the running system (or the image specified with `--image=` â€” if used). A partition that matches both the configured partition type (as declared with `Type=` described above), and the currently mounted directory appropriate for that partition type is determined. For example, if the partition type is set to \"`root`\" the partition backing the root directory (`/`) is used as source to copy from â€” if its partition type is set to \"`root`\" as well. If the declared type is \"`usr`\" the partition backing `/usr/` is used as source to copy blocks from â€” if its partition type is set to \"`usr`\" too. The logic is capable of automatically tracking down the backing partitions for encrypted and Verity-enabled volumes. \"`CopyBlocks=auto`\" is useful for implementing \"self-replicating\" systems, i.e. systems that are their own installer.\n\nThe file specified here must have a size that is a multiple of the basic block size 512 and not be empty. If this option is used, the size allocation algorithm is slightly altered: the partition is created as least as big as required to fit the data in, i.e. the data size is an additional minimum size value taken into consideration for the allocation algorithm, similar to and in addition to the `SizeMin=` value configured above.\n\nThis option has no effect if the partition it is declared for already exists, i.e. existing data is never overwritten. Note that the data is copied in before the partition table is updated, i.e. before the partition actually is persistently created. This provides robustness: it is guaranteed that the partition either doesn't exist or exists fully populated; it is not possible that the partition exists but is not or only partially populated.\n\nThis option cannot be combined with `Format=` or `CopyFiles=`."],
[4,1731,"Takes a file system name, such as \"`ext4`\", \"`btrfs`\", \"`xfs`\" or \"`vfat`\", or the special value \"`swap`\". If specified and the partition is newly created it is formatted with the specified file system (or as swap device). The file system UUID and label are automatically derived from the partition UUID and label. If this option is used, the size allocation algorithm is slightly altered: the partition is created as least as big as required for the minimal file system of the specified type (or 4KiB if the minimal size is not known).\n\nThis option has no effect if the partition already exists.\n\nSimilar to the behaviour of `CopyBlocks=` the file system is formatted before the partition is created, ensuring that the partition only ever exists with a fully initialized file system.\n\nThis option cannot be combined with `CopyBlocks=`."],
[4,1732,"Takes a pair of colon separated absolute file system paths. The first path refers to a source file or directory on the host, the second path refers to a target in the file system of the newly created partition and formatted file system. This setting may be used to copy files or directories from the host into the file system that is created due to the `Format=` option. If `CopyFiles=` is used without `Format=` specified explicitly, \"`Format=`\" with a suitable default is implied (currently \"`ext4`\", but this may change in the future). This option may be used multiple times to copy multiple files or directories from host into the newly formatted file system. The colon and second path may be omitted in which case the source path is also used as the target path (relative to the root of the newly created file system). If the source path refers to a directory it is copied recursively.\n\nThis option has no effect if the partition already exists: it cannot be used to copy additional files into an existing partition, it may only be used to populate a file system created anew.\n\nThe copy operation is executed before the file system is registered in the partition table, thus ensuring that a file system populated this way only ever exists fully initialized.\n\nThis option cannot be combined with `CopyBlocks=`.\n\nWhen **systemd-repart** is invoked with the `--image=` or `--root=` command line switches the source paths specified are taken relative to the specified root directory or disk image root."],
[4,1733,"Takes one or more absolute paths, separated by whitespace, each declaring a directory to create within the new file system. Behaviour is similar to `CopyFiles=`, but instead of copying in a set of files this just creates the specified directories with the default mode of 0755 owned by the root user and group, plus all their parent directories (with the same ownership and access mode). To configure directories with different ownership or access mode, use `CopyFiles=` and specify a source tree to copy containing appropriately owned/configured directories. This option may be used more than once to create multiple directories. When `CopyFiles=` and `MakeDirectories=` are used together the former is applied first. If a directory listed already exists no operation is executed (in particular, the ownership/access mode of the directories is left as is).\n\nThe primary usecase for this option is to create a minimal set of directories that may be mounted over by other partitions contained in the same disk image. For example, a disk image where the root file system is formatted at first boot might want to automatically pre-create `/usr/` in it this way, so that the \"`usr`\" partition may over-mount it.\n\nConsider using [systemd-tmpfiles(8)](systemd-tmpfiles.html#) with its `--image=` option to pre-create other, more complex directory hierarchies (as well as other inodes) with fine-grained control of ownership, access modes and other file attributes."],
[4,1734,"Takes one of \"`off`\", \"`key-file`\", \"`tpm2`\" and \"`key-file+tpm2`\" (alternatively, also accepts a boolean value, which is mapped to \"`off`\" when false, and \"`key-file`\" when true). Defaults to \"`off`\". If not \"`off`\" the partition will be formatted with a LUKS2 superblock, before the blocks configured with `CopyBlocks=` are copied in or the file system configured with `Format=` is created.\n\nThe LUKS2 UUID is automatically derived from the partition UUID in a stable fashion. If \"`key-file`\" or \"`key-file+tpm2`\" is used, a key is added to the LUKS2 superblock, configurable with the `--key-file=` option to **systemd-repart**. If \"`tpm2`\" or \"`key-file+tpm2`\" is used, a key is added to the LUKS2 superblock that is enrolled to the local TPM2 chip, as configured with the `--tpm2-device=` and `--tpm2-pcrs=` options to **systemd-repart**.\n\nWhen used this slightly alters the size allocation logic as the implicit, minimal size limits of `Format=` and `CopyBlocks=` are increased by the space necessary for the LUKS2 superblock (see above).\n\nThis option has no effect if the partition already exists."],
[4,1735,"Takes a boolean argument. If specified the partition is marked for removal during a factory reset operation. This functionality is useful to implement schemes where images can be reset into their original state by removing partitions and creating them anew. Defaults to off."],
[4,1736,"Configures the 64bit GPT partition flags field to set for the partition when creating it. This option has no effect if the partition already exists. If not specified the flags values is set to all zeroes, except for the three bits that can also be configured via `NoAuto=`, `ReadOnly=` and `GrowFileSystem=`; see below for details on the defaults for these three flags. Specify the flags value in hexadecimal (by prefixing it with \"`0x`\"), binary (prefix \"`0b`\") or decimal (no prefix)."],
[4,1737,"Configures the No-Auto, Read-Only and Grow-File-System partition flags (bit 63, 60 and 59) of the partition table entry, as defined by the [Discoverable Partitions Specification](https://systemd.io/DISCOVERABLE_PARTITIONS). Only available for partition types supported by the specification. This option is a friendly way to set bits 63, 60 and 59 of the partition flags value without setting any of the other bits, and may be set via `Flags=` too, see above.\n\nIf `Flags=` is used in conjunction with one or more of `NoAuto=`/`ReadOnly=`/`GrowFileSystem=` the latter control the value of the relevant flags, i.e. the high-level settings `NoAuto=`/`ReadOnly=`/`GrowFileSystem=` override the relevant bits of the low-level setting `Flags=`.\n\nNote that the three flags affect only automatic partition mounting, as implemented by [systemd-gpt-auto-generator(8)](systemd-gpt-auto-generator.html#) or the `--image=` option of various commands (such as [systemd-nspawn(1)](systemd-nspawn.html#)). It has no effect on explicit mounts, such as those done via [mount(8)](http://man7.org/linux/man-pages/man8/mount.8.html) or [fstab(5)](http://man7.org/linux/man-pages/man5/fstab.5.html).\n\nIf both bit 50 and 59 are set for a partition (i.e. the partition is marked both read-only and marked for file system growing) the latter is typically without effect: the read-only flag takes precedence in most tools reading these flags, and since growing the file system involves writing to the partition it is consequently ignored.\n\n`NoAuto=` defaults to off. `ReadOnly=` defaults to on for Verity partition types, and off for all others. `GrowFileSystem=` defaults to on for all partition types that support it, except if the partition is marked read-only (and thus effectively, defaults to off for Verity partitions)."],
[2,"CopyBlocks","",1730,59],
[2,"CopyFiles","",1732,59],
[2,"Encrypt","",1734,59],
[2,"FactoryReset","",1735,59],
[2,"Flags","",1736,59],
[2,"Format","",1731,59],
[2,"GrowFileSystem","",1737,59],
[2,"Label","",1723,59],
[2,"MakeDirectories","",1733,59],
[2,"NoAuto","",1737,59],
[2,"PaddingMaxBytes","",1729,59],
[2,"PaddingMinBytes","",1729,59],
[2,"PaddingWeight","",1727,59],
[2,"Priority","",1725,59],
[2,"ReadOnly","",1737,59],
[2,"SizeMaxBytes","",1728,59],
[2,"SizeMinBytes","",1728,59],
[2,"Type","",1722,59],
[2,"UUID","",1724,59],
[2,"Weight","",1726,59],
[3,60,"systemd.net-naming-scheme(7)","systemd.net-naming-scheme â€” Network device naming schemes","systemd.net-naming-scheme.html"],
[4,1738,"This name is set based on the numeric ordering information given by the firmware for on-board devices. The name consists of the prefix, letter `o`, and a number specified by the firmware. This is only available for PCI devices."],
[4,1739,"This property is set based on textual label given by the firmware for on-board devices. The name consists of the prefix concatenated with the label. This is only available for PCI devices."],
[4,1740,"This name consists of the prefix, letter `x`, and 12 hexadecimal digits of the MAC address. It is available if the device has a fixed MAC address. Because this name is based on an attribute of the card itself, it remains \"stable\" when the device is moved (even between machines), but will change when the hardware is replaced."],
[4,1741,"This property describes the slot position. Different schemes are used depending on the bus type, as described in the table below. In case of USB, BCMA, and SR-VIO devices, the full name consists of the prefix, PCI slot identifier, and USB or BCMA or SR-VIO slot identifier. The first two parts are denoted as \"â€¦\" in the table below.\n\n**TableÂ 2.Â Slot naming schemes**\n\nFormat\n\nDescription\n\n_`prefix`_Â \\[`P`_`domain`_\\]Â `s`_`slot`_Â \\[`f`_`function`_\\]Â \\[`n`_`port_name`_Â |Â `d`_`dev_port`_\\]\n\nPCI slot number\n\n_`prefix`_Â `v`_`slot`_\n\nVIO slot number (IBM PowerVM)\n\n_`prefix`_Â `X`_`number`_\n\nVIF interface number (Xen)\n\nâ€¦Â `b`_`number`_\n\nBroadcom bus (BCMA) core number\n\nâ€¦Â `u`_`port`_â€¦Â \\[`c`_`config`_\\]Â \\[`i`_`interface`_\\]\n\nUSB port number chain\n\nâ€¦Â `v`_`slot`_\n\nSR-VIO slot number\n\n  \n\nThe PCI domain is only prepended when it is not 0. All multi-function PCI devices will carry the ``f_`function`_`` number in the device name, including the function 0 device. For non-multi-function devices, the number is suppressed if 0. The port name _`port_name`_ is used, or the port number `d`_`dev_port`_ if the name is not known.\n\nFor BCMA devices, the core number is suppressed when 0.\n\nFor USB devices the full chain of port numbers of hubs is composed. If the name gets longer than the maximum number of 15 characters, the name is not exported. The usual USB configuration number 1 and interface number 0 values are suppressed.\n\nSR-IOV virtual devices are named based on the name of the parent interface, with a suffix of `v` and the virtual device number, with any leading zeros removed. The bus number is ignored.\n\nIn some configurations a parent PCI bridge of a given network controller may be associated with a slot. In such case we don't generate this device property to avoid possible naming conflicts."],
[4,1742,"This property describes the device installation location. Different schemes are used depending on the bus type, as described in the table below. For BCMA and USB devices, PCI path information must known, and the full name consists of the prefix, PCI slot identifier, and USB or BCMA location. The first two parts are denoted as \"â€¦\" in the table below.\n\n**TableÂ 3.Â Path naming schemes**\n\nFormat\n\nDescription\n\n_`prefix`_Â `c`_`bus_id`_\n\nCCW or grouped CCW device identifier\n\n_`prefix`_Â `a`_`vendor`_Â _`model`_Â `i`_`instance`_\n\nACPI path names for ARM64 platform devices\n\n_`prefix`_Â `i`_`address`_Â `n`_`port_name`_\n\nNetdevsim (simulated networking device) device number and port name\n\n_`prefix`_Â \\[`P`_`domain`_\\]Â `p`_`bus`_Â `s`_`slot`_Â \\[`f`_`function`_\\]Â \\[`n`_`phys_port_name`_Â |Â `d`_`dev_port`_\\]\n\nPCI geographical location\n\nâ€¦Â `b`_`number`_\n\nBroadcom bus (BCMA) core number\n\nâ€¦Â `u`_`port`_â€¦Â \\[`c`_`config`_\\]Â \\[`i`_`interface`_\\]\n\nUSB port number chain\n\n  \n\nCCW and grouped CCW devices are found in IBM System Z mainframes. Any leading zeros and dots are suppressed.\n\nFor PCI, BCMA, and USB devices, the same rules as described above for slot naming are used."],
[4,1743,"This is the naming scheme that was implemented in systemd 238."],
[4,1744,"Naming was changed for virtual network interfaces created with SR-IOV and NPAR and for devices where the PCI network controller device does not have a slot number associated.\n\nSR-IOV virtual devices are named based on the name of the parent interface, with a suffix of \"``v_`port`_``\", where _`port`_ is the virtual device number. Previously those virtual devices were named as if completely independent.\n\nThe ninth and later NPAR virtual devices are named following the scheme used for the first eight NPAR partitions. Previously those devices were not renamed and the kernel default (\"eth_`N`_\") was used.\n\nNames are also generated for PCI devices where the PCI network controller device does not have an associated slot number itself, but one of its parents does. Previously those devices were not renamed and the kernel default was used."],
[4,1745,"The \"`ib`\" prefix and stable names for infiniband devices are introduced. Previously those devices were not renamed.\n\nThe ACPI index field (used in `ID_NET_NAME_ONBOARD=`) is now also used when 0.\n\nA new naming policy `NamePolicy=keep` was introduced. With this policy, if the network device name was already set by userspace, the device will not be renamed again. Previously, this naming policy applied implicitly, and now it must be explicitly requested. Effectively, this means that network devices will be renamed according to the configuration, even if they have been renamed already, if `keep` is not specified as the naming policy in the `.link` file. See [systemd.link(5)](systemd.link.html#) for a description of `NamePolicy=`."],
[4,1746,"`MACAddressPolicy=persistent` was extended to set MAC addresses based on the device name. Previously addresses were only based on the `ID_NET_NAME_*` attributes, which meant that interface names would never be generated for virtual devices. Now a persistent address will be generated for most devices, including in particular bridges.\n\nNote: when userspace does not set a MAC address for a bridge device, the kernel will initially assign a random address, and then change it when the first device is enslaved to the bridge. With this naming policy change, bridges get a persistent MAC address based on the bridge name instead of the first enslaved device."],
[4,1747,"Support for renaming netdevsim (simulated networking) devices was added. Previously those devices were not renamed.\n\nPreviously two-letter interface type prefix was prepended to `ID_NET_LABEL_ONBOARD=`. This is not done anymore."],
[4,1748,"When [systemd-nspawn(1)](systemd-nspawn.html#) derives the name for the host side of the network interface created with `--network-veth` from the container name it previously simply truncated the result at 15 characters if longer (since that's the maximum length for network interface names). From now on, for any interface name that would be longer than 15 characters the last 4 characters are set to a 24bit hash value of the full interface name. This way network interface name collisions between multiple similarly named containers (who only differ in container name suffix) should be less likely (but still possible, since the 24bit hash value is very small)."],
[4,1749,"When a PCI slot is associated with a PCI bridge that has multiple child network controllers, the same value of the `ID_NET_NAME_SLOT` property might be derived for those controllers. This would cause a naming conflict if the property is selected as the device name. Now, we detect this situation and don't produce the `ID_NET_NAME_SLOT` property."],
[4,1750,"PCI hotplug slot names for the s390 PCI driver are a hexadecimal representation of the `function_id` device attribute. This attribute is now used to build the `ID_NET_NAME_SLOT`. Before that, all slot names were parsed as decimal numbers, which could either result in an incorrect value of the `ID_NET_NAME_SLOT` property or none at all.\n\nSome firmware and hypervisor implementations report unreasonable high numbers for the onboard index. To prevent the generation of bogus onbard interface names, index numbers greater than 16381 (2^14-1) were ignored. For s390 PCI devices index values up to 65535 (2^16-1) are valid. To account for that, the limit is increased to now 65535.\n\nThe udev rule `NAME=` replaces \"`:`\", \"`/`\", and \"`%`\" with an underscore (\"`_`\"), and refuses strings which contain only numerics."],
[4,1751,"Added naming scheme for Xen netfront \"vif\" interfaces based on the guest side VIF number set from the Xen config (or the interface index in AWS EC2)."],
[2,"ID_NET_LABEL_ONBOARD","prefix label",1739,60],
[2,"ID_NET_NAME_MAC","prefixxAABBCCDDEEFF",1740,60],
[2,"ID_NET_NAME_ONBOARD","prefixonumber",1738,60],
[2,"ID_NET_NAME_PATH","prefixcbus_id",1742,60],
[2,"ID_NET_NAME_SLOT","prefix[Pdomain]sslot[ffunction][nport_name|ddev_port]",1741,60]
]