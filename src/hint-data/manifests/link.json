[
[3,39,"systemd.link(5)","systemd.link — Network device configuration","systemd.link.html"],
[6,1,"Match"],
[6,2,"Link"],
[6,3,"SR-IOV"],
[4,1,"A whitespace-separated list of hardware addresses. The acceptable formats are:\n\n`colon-delimited hexadecimal`[¶](#colon-delimited%20hexadecimal \"Permalink to this term\")\n\nEach field must be one byte. E.g. \"`12:34:56:78:90:ab`\" or \"`AA:BB:CC:DD:EE:FF`\".\n\nAdded in version 250.\n\n`hyphen-delimited hexadecimal`[¶](#hyphen-delimited%20hexadecimal \"Permalink to this term\")\n\nEach field must be one byte. E.g. \"`12-34-56-78-90-ab`\" or \"`AA-BB-CC-DD-EE-FF`\".\n\nAdded in version 250.\n\n`dot-delimited hexadecimal`[¶](#dot-delimited%20hexadecimal \"Permalink to this term\")\n\nEach field must be two bytes. E.g. \"`1234.5678.90ab`\" or \"`AABB.CCDD.EEFF`\".\n\nAdded in version 250.\n\n`IPv4 address format`[¶](#IPv4%20address%20format \"Permalink to this term\")\n\nE.g. \"`127.0.0.1`\" or \"`192.168.0.1`\".\n\nAdded in version 250.\n\n`IPv6 address format`[¶](#IPv6%20address%20format \"Permalink to this term\")\n\nE.g. \"`2001:0db8:85a3::8a2e:0370:7334`\" or \"`::1`\".\n\nAdded in version 250.\n\nThe total length of each MAC address must be 4 (for IPv4 tunnel), 6 (for Ethernet), 16 (for IPv6 tunnel), or 20 (for InfiniBand). This option may appear more than once, in which case the lists are merged. If the empty string is assigned to this option, the list of hardware addresses defined prior to this is reset. Defaults to unset.\n\nAdded in version 211.","#MACAddress="],
[4,2,"A whitespace-separated list of hardware's permanent addresses. While `MACAddress=` matches the device's current MAC address, this matches the device's permanent MAC address, which may be different from the current one. Use full colon-, hyphen- or dot-delimited hexadecimal, or IPv4 or IPv6 address format. This option may appear more than once, in which case the lists are merged. If the empty string is assigned to this option, the list of hardware addresses defined prior to this is reset. Defaults to unset.\n\nAdded in version 245.","#PermanentMACAddress="],
[4,3,"A whitespace-separated list of shell-style globs matching the persistent path, as exposed by the udev property `ID_PATH`.\n\nAdded in version 211.","#Path="],
[4,4,"A whitespace-separated list of shell-style globs matching the driver currently bound to the device, as exposed by the udev property `ID_NET_DRIVER` of its parent device, or if that is not set, the driver as exposed by **ethtool -i** of the device itself. If the list is prefixed with a \"!\", the test is inverted.\n\nAdded in version 211.","#Driver="],
[4,5,"A whitespace-separated list of shell-style globs matching the device type, as exposed by **networkctl list**. If the list is prefixed with a \"!\", the test is inverted. Some valid values are \"`ether`\", \"`loopback`\", \"`wlan`\", \"`wwan`\". Valid types are named either from the udev \"`DEVTYPE`\" attribute, or \"`ARPHRD_`\" macros in `linux/if_arp.h`, so this is not comprehensive.\n\nAdded in version 211.","#Type="],
[4,6,"A whitespace-separated list of shell-style globs matching the device kind, as exposed by **networkctl status _`INTERFACE`_** or **ip -d link show _`INTERFACE`_**. If the list is prefixed with a \"!\", the test is inverted. Some valid values are \"`bond`\", \"`bridge`\", \"`gre`\", \"`tun`\", \"`veth`\". Valid kinds are given by netlink's \"`IFLA_INFO_KIND`\" attribute, so this is not comprehensive.\n\nAdded in version 251.","#Kind="],
[4,7,"A whitespace-separated list of udev property names with their values after equals sign (\"`=`\"). If multiple properties are specified, the test results are ANDed. If the list is prefixed with a \"!\", the test is inverted. If a value contains white spaces, then please quote whole key and value pair. If a value contains quotation, then please escape the quotation with \"`\\`\".\n\nExample: if a .link file has the following:\n\nProperty=ID\\_MODEL\\_ID=9999 \"ID\\_VENDOR\\_FROM\\_DATABASE=vendor name\" \"KEY=with \\\\\"quotation\\\\\"\"\n\nthen, the .link file matches only when an interface has all the above three properties.\n\nAdded in version 243.","#Property="],
[4,8,"A whitespace-separated list of shell-style globs matching the device name, as exposed by the udev property \"INTERFACE\". This cannot be used to match on names that have already been changed from userspace. Caution is advised when matching on kernel-assigned names, as they are known to be unstable between reboots.\n\nAdded in version 218.","#OriginalName="],
[4,9,"Matches against the hostname or machine ID of the host. See `ConditionHost=` in [systemd.unit(5)](systemd.unit.html) for details. When prefixed with an exclamation mark (\"`!`\"), the result is negated. If an empty string is assigned, the previously assigned value is cleared.\n\nAdded in version 211.","#Host="],
[4,10,"Checks whether the system is executed in a virtualized environment and optionally test whether it is a specific implementation. See `ConditionVirtualization=` in [systemd.unit(5)](systemd.unit.html) for details. When prefixed with an exclamation mark (\"`!`\"), the result is negated. If an empty string is assigned, the previously assigned value is cleared.\n\nAdded in version 211.","#Virtualization="],
[4,11,"Checks whether a specific kernel command line option is set. See `ConditionKernelCommandLine=` in [systemd.unit(5)](systemd.unit.html) for details. When prefixed with an exclamation mark (\"`!`\"), the result is negated. If an empty string is assigned, the previously assigned value is cleared.\n\nAdded in version 211.","#KernelCommandLine="],
[4,12,"Checks whether the kernel version (as reported by **uname -r**) matches a certain expression. See `ConditionKernelVersion=` in [systemd.unit(5)](systemd.unit.html) for details. When prefixed with an exclamation mark (\"`!`\"), the result is negated. If an empty string is assigned, the previously assigned value is cleared.\n\nAdded in version 237.","#KernelVersion="],
[4,13,"Checks whether the specified credential was passed to the `systemd-udevd.service` service. See [System and Service Credentials](https://systemd.io/CREDENTIALS) for details. When prefixed with an exclamation mark (\"`!`\"), the result is negated. If an empty string is assigned, the previously assigned value is cleared.\n\nAdded in version 252.","#Credential="],
[4,14,"Checks whether the system is running on a specific architecture. See `ConditionArchitecture=` in [systemd.unit(5)](systemd.unit.html) for details. When prefixed with an exclamation mark (\"`!`\"), the result is negated. If an empty string is assigned, the previously assigned value is cleared.\n\nAdded in version 211.","#Architecture="],
[4,15,"Checks whether the system is running on a machine with the specified firmware. See `ConditionFirmware=` in [systemd.unit(5)](systemd.unit.html) for details. When prefixed with an exclamation mark (\"`!`\"), the result is negated. If an empty string is assigned, the previously assigned value is cleared.\n\nAdded in version 249.","#Firmware="],
[4,16,"A description of the device.\n\nAdded in version 211.","#Description="],
[4,17,"The `ifalias` interface property is set to this value.\n\nAdded in version 211.","#Alias="],
[4,18,"The policy by which the MAC address should be set. The available policies are:\n\n`persistent`[¶](#persistent \"Permalink to this term\")\n\nIf the hardware has a persistent MAC address, as most hardware should, and if it is used by the kernel, nothing is done. Otherwise, a new MAC address is generated which is guaranteed to be the same on every boot for the given machine and the given device, but which is otherwise random. This feature depends on ID\\_NET\\_NAME\\_\\* properties to exist for the link. On hardware where these properties are not set, the generation of a persistent MAC address will fail.\n\nAdded in version 211.\n\n`random`[¶](#random \"Permalink to this term\")\n\nIf the kernel is using a random MAC address, nothing is done. Otherwise, a new address is randomly generated each time the device appears, typically at boot. Either way, the random address will have the \"`unicast`\" and \"`locally administered`\" bits set.\n\nAdded in version 211.\n\n`none`[¶](#none \"Permalink to this term\")\n\nKeeps the MAC address assigned by the kernel. Or use the MAC address specified in `MACAddress=`.\n\nAdded in version 227.\n\nAn empty string assignment is equivalent to setting \"`none`\".\n\nAdded in version 211.","#MACAddressPolicy="],
[4,19,"The interface MAC address to use. For this setting to take effect, `MACAddressPolicy=` must either be unset, empty, or \"`none`\".\n\nAdded in version 211.","#MACAddress=1"],
[4,20,"An ordered, space-separated list of policies by which the interface name should be set. `NamePolicy=` may be disabled by specifying `net.ifnames=0` on the kernel command line. Each of the policies may fail, and the first successful one is used. The name is not set directly, but is exported to udev as the property `ID_NET_NAME`, which is, by default, used by a [udev(7)](udev.html), rule to set `NAME`. The available policies are:\n\n`kernel`[¶](#kernel \"Permalink to this term\")\n\nIf the kernel claims that the name it has set for a device is predictable, then no renaming is performed.\n\nAdded in version 216.\n\n`database`[¶](#database \"Permalink to this term\")\n\nThe name is set based on entries in the udev's Hardware Database with the key `ID_NET_NAME_FROM_DATABASE`.\n\nAdded in version 211.\n\n`onboard`[¶](#onboard \"Permalink to this term\")\n\nThe name is set based on information given by the firmware for on-board devices, as exported by the udev property `ID_NET_NAME_ONBOARD`. See [systemd.net-naming-scheme(7)](systemd.net-naming-scheme.html).\n\nAdded in version 211.\n\n`slot`[¶](#slot \"Permalink to this term\")\n\nThe name is set based on information given by the firmware for hot-plug devices, as exported by the udev property `ID_NET_NAME_SLOT`. See [systemd.net-naming-scheme(7)](systemd.net-naming-scheme.html).\n\nAdded in version 211.\n\n`path`[¶](#path \"Permalink to this term\")\n\nThe name is set based on the device's physical location, as exported by the udev property `ID_NET_NAME_PATH`. See [systemd.net-naming-scheme(7)](systemd.net-naming-scheme.html).\n\nAdded in version 211.\n\n`mac`[¶](#mac \"Permalink to this term\")\n\nThe name is set based on the device's persistent MAC address, as exported by the udev property `ID_NET_NAME_MAC`. See [systemd.net-naming-scheme(7)](systemd.net-naming-scheme.html).\n\nAdded in version 211.\n\n`keep`[¶](#keep \"Permalink to this term\")\n\nIf the device already had a name given by userspace (as part of creation of the device or a rename), keep it.\n\nAdded in version 241.\n\nAdded in version 211.","#NamePolicy="],
[4,21,"The interface name to use. This option has lower precedence than `NamePolicy=`, so for this setting to take effect, `NamePolicy=` must either be unset, empty, disabled, or all policies configured there must fail. Also see the example below with \"`Name=dmz0`\".\n\nNote that specifying a name that the kernel might use for another interface (for example \"`eth0`\") is dangerous because the name assignment done by udev will race with the assignment done by the kernel, and only one interface may use the name. Depending on the order of operations, either udev or the kernel will win, making the naming unpredictable. It is best to use some different prefix, for example \"`internal0`\"/\"`external0`\" or \"`lan0`\"/\"`lan1`\"/\"`lan3`\".\n\nInterface names must have a minimum length of 1 character and a maximum length of 15 characters, and may contain any 7bit ASCII character, with the exception of control characters, \"`:`\", \"`/`\" and \"`%`\". While \"`.`\" is an allowed character, it's recommended to avoid it when naming interfaces as various tools (such as [resolvconf(1)](resolvconf.html)) use it as separator character. Also, fully numeric interface names are not allowed (in order to avoid ambiguity with interface specification by numeric indexes), as are the special strings \"`.`\", \"`..`\", \"`all`\" and \"`default`\".\n\nAdded in version 211.","#Name="],
[4,22,"A space-separated list of policies by which the interface's alternative names should be set. Each of the policies may fail, and all successful policies are used. The available policies are \"`database`\", \"`onboard`\", \"`slot`\", \"`path`\", and \"`mac`\". If the kernel does not support the alternative names, then this setting will be ignored.\n\nAdded in version 245.","#AlternativeNamesPolicy="],
[4,23,"The alternative interface name to use. This option can be specified multiple times. If the empty string is assigned to this option, the list is reset, and all prior assignments have no effect. If the kernel does not support the alternative names, then this setting will be ignored.\n\nAlternative interface names may be used to identify interfaces in various tools. In contrast to the primary name (as configured with `Name=` above) there may be multiple alternative names referring to the same interface. Alternative names may have a maximum length of 127 characters, in contrast to the 15 allowed for the primary interface name, but otherwise are subject to the same naming constraints.\n\nAdded in version 245.","#AlternativeName="],
[4,24,"Specifies the device's number of transmit queues. An integer in the range 1…4096. When unset, the kernel's default will be used.\n\nAdded in version 248.","#TransmitQueues="],
[4,25,"Specifies the device's number of receive queues. An integer in the range 1…4096. When unset, the kernel's default will be used.\n\nAdded in version 248.","#ReceiveQueues="],
[4,26,"Specifies the transmit queue length of the device in number of packets. An unsigned integer in the range 0…4294967294. When unset, the kernel's default will be used.\n\nAdded in version 248.","#TransmitQueueLength="],
[4,27,"The maximum transmission unit in bytes to set for the device. The usual suffixes K, M, G are supported and are understood to the base of 1024.\n\nAdded in version 211.","#MTUBytes="],
[4,28,"The speed to set for the device, the value is rounded down to the nearest Mbps. The usual suffixes K, M, G are supported and are understood to the base of 1000.\n\nAdded in version 211.","#BitsPerSecond="],
[4,29,"The duplex mode to set for the device. The accepted values are `half` and `full`.\n\nAdded in version 211.","#Duplex="],
[4,30,"Takes a boolean. If set to yes, automatic negotiation of transmission parameters is enabled. Autonegotiation is a procedure by which two connected ethernet devices choose common transmission parameters, such as speed, duplex mode, and flow control. When unset, the kernel's default will be used.\n\nNote that if autonegotiation is enabled, speed and duplex settings are read-only. If autonegotiation is disabled, speed and duplex settings are writable if the driver supports multiple link modes.\n\nAdded in version 233.","#AutoNegotiation="],
[4,31,"The Wake-on-LAN policy to set for the device. Takes the special value \"`off`\" which disables Wake-on-LAN, or space separated list of the following words:\n\n`phy`[¶](#phy \"Permalink to this term\")\n\nWake on PHY activity.\n\nAdded in version 211.\n\n`unicast`[¶](#unicast \"Permalink to this term\")\n\nWake on unicast messages.\n\nAdded in version 235.\n\n`multicast`[¶](#multicast \"Permalink to this term\")\n\nWake on multicast messages.\n\nAdded in version 235.\n\n`broadcast`[¶](#broadcast \"Permalink to this term\")\n\nWake on broadcast messages.\n\nAdded in version 235.\n\n`arp`[¶](#arp \"Permalink to this term\")\n\nWake on ARP.\n\nAdded in version 235.\n\n`magic`[¶](#magic \"Permalink to this term\")\n\nWake on receipt of a magic packet.\n\nAdded in version 211.\n\n`secureon`[¶](#secureon \"Permalink to this term\")\n\nEnable SecureOn password for MagicPacket. Implied when `WakeOnLanPassword=` is specified. If specified without `WakeOnLanPassword=` option, then the password is read from the credential \"``_`LINK`_.link.wol.password``\" (e.g., \"`60-foo.link.wol.password`\"), and if the credential not found, then read from \"`wol.password`\". See `ImportCredential=`/`LoadCredential=`/`SetCredential=` in [systemd.exec(1)](systemd.exec.html) for details. The password in the credential, must be 6 bytes in hex format with each byte separated by a colon (\"`:`\") like an Ethernet MAC address, e.g., \"`aa:bb:cc:dd:ee:ff`\".\n\nAdded in version 235.\n\nDefaults to unset, and the device's default will be used. This setting can be specified multiple times. If an empty string is assigned, then the all previous assignments are cleared.\n\nAdded in version 211.","#WakeOnLan="],
[4,32,"Specifies the SecureOn password for MagicPacket. Takes an absolute path to a regular file or an `AF_UNIX` stream socket, or the plain password. When a path to a regular file is specified, the password is read from it. When an `AF_UNIX` stream socket is specified, a connection is made to it and the password is read from it. The password must be 6 bytes in hex format with each byte separated by a colon (\"`:`\") like an Ethernet MAC address, e.g., \"`aa:bb:cc:dd:ee:ff`\". This implies `WakeOnLan=secureon`. Defaults to unset, and the current value will not be changed.\n\nAdded in version 250.","#WakeOnLanPassword="],
[4,33,"The port option is used to select the device port. The supported values are:\n\n`tp`[¶](#tp \"Permalink to this term\")\n\nAn Ethernet interface using Twisted-Pair cable as the medium.\n\nAdded in version 234.\n\n`aui`[¶](#aui \"Permalink to this term\")\n\nAttachment Unit Interface (AUI). Normally used with hubs.\n\nAdded in version 234.\n\n`bnc`[¶](#bnc \"Permalink to this term\")\n\nAn Ethernet interface using BNC connectors and co-axial cable.\n\nAdded in version 234.\n\n`mii`[¶](#mii \"Permalink to this term\")\n\nAn Ethernet interface using a Media Independent Interface (MII).\n\nAdded in version 234.\n\n`fibre`[¶](#fibre \"Permalink to this term\")\n\nAn Ethernet interface using Optical Fibre as the medium.\n\nAdded in version 234.\n\nAdded in version 234.","#Port="],
[4,34,"This sets what speeds and duplex modes of operation are advertised for auto-negotiation. This implies \"`AutoNegotiation=yes`\". The supported values are:\n\n**Table 1. Supported advertise values**\n\nAdvertise\n\nSpeed (Mbps)\n\nDuplex Mode\n\n`10baset-full`\n\n10\n\nfull\n\n`10baset1l-full`\n\n10\n\nfull\n\n`10baset-half`\n\n10\n\nhalf\n\n`100basefx-full`\n\n100\n\nfull\n\n`100baset-full`\n\n100\n\nfull\n\n`100baset1-full`\n\n100\n\nfull\n\n`100basefx-half`\n\n100\n\nhalf\n\n`100baset-half`\n\n100\n\nhalf\n\n`1000basekx-full`\n\n1000\n\nfull\n\n`1000baset-full`\n\n1000\n\nfull\n\n`1000baset1-full`\n\n1000\n\nfull\n\n`1000basex-full`\n\n1000\n\nfull\n\n`1000baset-half`\n\n1000\n\nhalf\n\n`2500baset-full`\n\n2500\n\nfull\n\n`2500basex-full`\n\n2500\n\nfull\n\n`5000baset-full`\n\n5000\n\nfull\n\n`10000baser-fec`\n\n10000\n\n \n\n`10000basecr-full`\n\n10000\n\nfull\n\n`10000baseer-full`\n\n10000\n\nfull\n\n`10000basekr-full`\n\n10000\n\nfull\n\n`10000basekx4-full`\n\n10000\n\nfull\n\n`10000baselr-full`\n\n10000\n\nfull\n\n`10000baselrm-full`\n\n10000\n\nfull\n\n`10000basesr-full`\n\n10000\n\nfull\n\n`10000baset-full`\n\n10000\n\nfull\n\n`20000basekr2-full`\n\n20000\n\nfull\n\n`20000basemld2-full`\n\n20000\n\nfull\n\n`25000basecr-full`\n\n25000\n\nfull\n\n`25000basekr-full`\n\n25000\n\nfull\n\n`25000basesr-full`\n\n25000\n\nfull\n\n`40000basecr4-full`\n\n40000\n\nfull\n\n`40000basekr4-full`\n\n40000\n\nfull\n\n`40000baselr4-full`\n\n40000\n\nfull\n\n`40000basesr4-full`\n\n40000\n\nfull\n\n`50000basecr-full`\n\n50000\n\nfull\n\n`50000basecr2-full`\n\n50000\n\nfull\n\n`50000basedr-full`\n\n50000\n\nfull\n\n`50000basekr-full`\n\n50000\n\nfull\n\n`50000basekr2-full`\n\n50000\n\nfull\n\n`50000baselr-er-fr-full`\n\n50000\n\nfull\n\n`50000basesr-full`\n\n50000\n\nfull\n\n`50000basesr2-full`\n\n50000\n\nfull\n\n`56000basecr4-full`\n\n56000\n\nfull\n\n`56000basekr4-full`\n\n56000\n\nfull\n\n`56000baselr4-full`\n\n56000\n\nfull\n\n`56000basesr4-full`\n\n56000\n\nfull\n\n`100000basecr-full`\n\n100000\n\nfull\n\n`100000basecr2-full`\n\n100000\n\nfull\n\n`100000basecr4-full`\n\n100000\n\nfull\n\n`100000basedr-full`\n\n100000\n\nfull\n\n`100000basedr2-full`\n\n100000\n\nfull\n\n`100000basekr-full`\n\n100000\n\nfull\n\n`100000basekr2-full`\n\n100000\n\nfull\n\n`100000basekr4-full`\n\n100000\n\nfull\n\n`100000baselr-er-fr-full`\n\n100000\n\nfull\n\n`100000baselr2-er2-fr2-full`\n\n100000\n\nfull\n\n`100000baselr4-er4-full`\n\n100000\n\nfull\n\n`100000basesr-full`\n\n100000\n\nfull\n\n`100000basesr2-full`\n\n100000\n\nfull\n\n`100000basesr4-full`\n\n100000\n\nfull\n\n`200000basecr2-full`\n\n200000\n\nfull\n\n`200000basecr4-full`\n\n200000\n\nfull\n\n`200000basedr2-full`\n\n200000\n\nfull\n\n`200000basedr4-full`\n\n200000\n\nfull\n\n`200000basekr2-full`\n\n200000\n\nfull\n\n`200000basekr4-full`\n\n200000\n\nfull\n\n`200000baselr2-er2-fr2-full`\n\n200000\n\nfull\n\n`200000baselr4-er4-fr4-full`\n\n200000\n\nfull\n\n`200000basesr2-full`\n\n200000\n\nfull\n\n`200000basesr4-full`\n\n200000\n\nfull\n\n`400000basecr4-full`\n\n400000\n\nfull\n\n`400000basecr8-full`\n\n400000\n\nfull\n\n`400000basedr4-full`\n\n400000\n\nfull\n\n`400000basedr8-full`\n\n400000\n\nfull\n\n`400000basekr4-full`\n\n400000\n\nfull\n\n`400000basekr8-full`\n\n400000\n\nfull\n\n`400000baselr4-er4-fr4-full`\n\n400000\n\nfull\n\n`400000baselr8-er8-fr8-full`\n\n400000\n\nfull\n\n`400000basesr4-full`\n\n400000\n\nfull\n\n`400000basesr8-full`\n\n400000\n\nfull\n\n`800000basecr8-full`\n\n800000\n\nfull\n\n`800000basedr8-2-full`\n\n800000\n\nfull\n\n`800000basedr8-full`\n\n800000\n\nfull\n\n`800000basekr8-full`\n\n800000\n\nfull\n\n`800000basesr8-full`\n\n800000\n\nfull\n\n`800000basevr8-full`\n\n800000\n\nfull\n\n`asym-pause`\n\n \n\n \n\n`aui`\n\n \n\n \n\n`autonegotiation`\n\n \n\n \n\n`backplane`\n\n \n\n \n\n`bnc`\n\n \n\n \n\n`fec-baser`\n\n \n\n \n\n`fec-llrs`\n\n \n\n \n\n`fec-none`\n\n \n\n \n\n`fec-rs`\n\n \n\n \n\n`fibre`\n\n \n\n \n\n`mii`\n\n \n\n \n\n`pause`\n\n \n\n \n\n`tp`\n\n \n\n \n\n  \nBy default this is unset, i.e. all possible modes will be advertised. This option may be specified more than once, in which case all specified speeds and modes are advertised. If the empty string is assigned to this option, the list is reset, and all prior assignments have no effect.\n\nAdded in version 240.","#Advertise="],
[4,35,"Takes a boolean. If set to true, hardware offload for checksumming of ingress network packets is enabled. When unset, the kernel's default will be used.\n\nAdded in version 245.","#ReceiveChecksumOffload="],
[4,36,"Takes a boolean. If set to true, hardware offload for checksumming of egress network packets is enabled. When unset, the kernel's default will be used.\n\nAdded in version 245.","#TransmitChecksumOffload="],
[4,37,"Takes a boolean. If set to true, TCP Segmentation Offload (TSO) is enabled. When unset, the kernel's default will be used.\n\nAdded in version 232.","#TCPSegmentationOffload="],
[4,38,"Takes a boolean. If set to true, TCP6 Segmentation Offload (tx-tcp6-segmentation) is enabled. When unset, the kernel's default will be used.\n\nAdded in version 235.","#TCP6SegmentationOffload="],
[4,39,"Takes a boolean. If set to true, Generic Segmentation Offload (GSO) is enabled. When unset, the kernel's default will be used.\n\nAdded in version 232.","#GenericSegmentationOffload="],
[4,40,"Takes a boolean. If set to true, Generic Receive Offload (GRO) is enabled. When unset, the kernel's default will be used.\n\nAdded in version 232.","#GenericReceiveOffload="],
[4,41,"Takes a boolean. If set to true, hardware accelerated Generic Receive Offload (GRO) is enabled. When unset, the kernel's default will be used.\n\nAdded in version 250.","#GenericReceiveOffloadHardware="],
[4,42,"Takes a boolean. If set to true, Large Receive Offload (LRO) is enabled. When unset, the kernel's default will be used.\n\nAdded in version 232.","#LargeReceiveOffload="],
[4,43,"Takes a boolean. If set to true, receive VLAN CTAG hardware acceleration is enabled. When unset, the kernel's default will be used.\n\nAdded in version 250.","#ReceiveVLANCTAGHardwareAcceleration="],
[4,44,"Takes a boolean. If set to true, transmit VLAN CTAG hardware acceleration is enabled. When unset, the kernel's default will be used.\n\nAdded in version 250.","#TransmitVLANCTAGHardwareAcceleration="],
[4,45,"Takes a boolean. If set to true, receive filtering on VLAN CTAGs is enabled. When unset, the kernel's default will be used.\n\nAdded in version 250.","#ReceiveVLANCTAGFilter="],
[4,46,"Takes a boolean. If set to true, transmit VLAN STAG hardware acceleration is enabled. When unset, the kernel's default will be used.\n\nAdded in version 250.","#TransmitVLANSTAGHardwareAcceleration="],
[4,47,"Takes a boolean. If set to true, receive N-tuple filters and actions are enabled. When unset, the kernel's default will be used.\n\nAdded in version 250.","#NTupleFilter="],
[4,48,"Specifies the number of receive, transmit, other, or combined channels, respectively. Takes an unsigned integer in the range 1…4294967295 or \"`max`\". If set to \"`max`\", the advertised maximum value of the hardware will be used. When unset, the number will not be changed. Defaults to unset.\n\nAdded in version 239.","#RxChannels="],
[4,49,"Specifies the maximum number of pending packets in the NIC receive buffer, mini receive buffer, jumbo receive buffer, or transmit buffer, respectively. Takes an unsigned integer in the range 1…4294967295 or \"`max`\". If set to \"`max`\", the advertised maximum value of the hardware will be used. When unset, the number will not be changed. Defaults to unset.\n\nAdded in version 244.","#RxBufferSize="],
[4,50,"Takes a boolean. When set, enables receive flow control, also known as the ethernet receive PAUSE message (generate and send ethernet PAUSE frames). When unset, the kernel's default will be used.\n\nAdded in version 246.","#RxFlowControl="],
[4,51,"Takes a boolean. When set, enables transmit flow control, also known as the ethernet transmit PAUSE message (respond to received ethernet PAUSE frames). When unset, the kernel's default will be used.\n\nAdded in version 246.","#TxFlowControl="],
[4,52,"Takes a boolean. When set, auto negotiation enables the interface to exchange state advertisements with the connected peer so that the two devices can agree on the ethernet PAUSE configuration. When unset, the kernel's default will be used.\n\nAdded in version 246.","#AutoNegotiationFlowControl="],
[4,53,"Specifies the maximum size of a Generic Segment Offload (GSO) packet the device should accept. The usual suffixes K, M, G are supported and are understood to the base of 1024. An unsigned integer in the range 1…65536. Defaults to unset.\n\nAdded in version 248.","#GenericSegmentOffloadMaxBytes="],
[4,54,"Specifies the maximum number of Generic Segment Offload (GSO) segments the device should accept. An unsigned integer in the range 1…65535. Defaults to unset.\n\nAdded in version 248.","#GenericSegmentOffloadMaxSegments="],
[4,55,"Boolean properties that, when set, enable/disable adaptive Rx/Tx coalescing if the hardware supports it. When unset, the kernel's default will be used.\n\nAdded in version 250.","#UseAdaptiveRxCoalesce="],
[4,56,"These properties configure the delay before Rx/Tx interrupts are generated after a packet is sent/received. The \"`Irq`\" properties come into effect when the host is servicing an IRQ. The \"`Low`\" and \"`High`\" properties come into effect when the packet rate drops below the low packet rate threshold or exceeds the high packet rate threshold respectively if adaptive Rx/Tx coalescing is enabled. When unset, the kernel's defaults will be used.\n\nAdded in version 250.","#RxCoalesceSec="],
[4,57,"These properties configure the maximum number of frames that are sent/received before a Rx/Tx interrupt is generated. The \"`Irq`\" properties come into effect when the host is servicing an IRQ. The \"`Low`\" and \"`High`\" properties come into effect when the packet rate drops below the low packet rate threshold or exceeds the high packet rate threshold respectively if adaptive Rx/Tx coalescing is enabled. When unset, the kernel's defaults will be used.\n\nAdded in version 250.","#RxMaxCoalescedFrames="],
[4,58,"These properties configure the low and high packet rate (expressed in packets per second) threshold respectively and are used to determine when the corresponding coalescing settings for low and high packet rates come into effect if adaptive Rx/Tx coalescing is enabled. If unset, the kernel's defaults will be used.\n\nAdded in version 250.","#CoalescePacketRateLow="],
[4,59,"Configures how often to sample the packet rate used for adaptive Rx/Tx coalescing. This property cannot be zero. This lowest time granularity supported by this property is seconds. Partial seconds will be rounded up before being passed to the kernel. If unset, the kernel's default will be used.\n\nAdded in version 250.","#CoalescePacketRateSampleIntervalSec="],
[4,60,"How long to delay driver in-memory statistics block updates. If the driver does not have an in-memory statistic block, this property is ignored. This property cannot be zero. If unset, the kernel's default will be used.\n\nAdded in version 250.","#StatisticsBlockCoalesceSec="],
[4,61,"Specifies the medium dependent interface (MDI) mode for the interface. A MDI describes the interface from a physical layer implementation to the physical medium used to carry the transmission. Takes one of the following words: \"`straight`\" (or equivalently: \"`mdi`\"), \"`crossover`\" (or equivalently: \"`mdi-x`\", \"`mdix`\"), and \"`auto`\". When \"`straight`\", the MDI straight through mode will be used. When \"`crossover`\", the MDI crossover (MDI-X) mode will be used. When \"`auto`\", the MDI status is automatically detected. Defaults to unset, and the kernel's default will be used.\n\nAdded in version 251.","#MDI="],
[4,62,"Specifies the number of SR-IOV virtual functions. Takes an integer in the range 0…2147483647. Defaults to unset, and automatically determined from the values specified in the `VirtualFunction=` settings in the \\[SR-IOV\\] sections.\n\nAdded in version 251.","#SR-IOVVirtualFunctions="],
[4,63,"Specifies a Virtual Function (VF), lightweight PCIe function designed solely to move data in and out. Takes an integer in the range 0…2147483646. This option is compulsory.\n\nAdded in version 251.","#VirtualFunction="],
[4,64,"Specifies VLAN ID of the virtual function. Takes an integer in the range 1…4095.\n\nAdded in version 251.","#VLANId="],
[4,65,"Specifies quality of service of the virtual function. Takes an integer in the range 1…4294967294.\n\nAdded in version 251.","#QualityOfService="],
[4,66,"Specifies VLAN protocol of the virtual function. Takes \"`802.1Q`\" or \"`802.1ad`\".\n\nAdded in version 251.","#VLANProtocol="],
[4,67,"Takes a boolean. Controls the MAC spoof checking. When unset, the kernel's default will be used.\n\nAdded in version 251.","#MACSpoofCheck="],
[4,68,"Takes a boolean. Toggle the ability of querying the receive side scaling (RSS) configuration of the virtual function (VF). The VF RSS information like RSS hash key may be considered sensitive on some devices where this information is shared between VF and the physical function (PF). When unset, the kernel's default will be used.\n\nAdded in version 251.","#QueryReceiveSideScaling="],
[4,69,"Takes a boolean. Allows one to set trust mode of the virtual function (VF). When set, VF users can set a specific feature which may impact security and/or performance. When unset, the kernel's default will be used.\n\nAdded in version 251.","#Trust="],
[4,70,"Allows one to set the link state of the virtual function (VF). Takes a boolean or a special value \"`auto`\". Setting to \"`auto`\" means a reflection of the physical function (PF) link state, \"`yes`\" lets the VF to communicate with other VFs on this host even if the PF link state is down, \"`no`\" causes the hardware to drop any packets sent by the VF. When unset, the kernel's default will be used.\n\nAdded in version 251.","#LinkState="],
[4,71,"Specifies the MAC address for the virtual function.\n\nAdded in version 251.","#MACAddress=2"],
[2,"Advertise","",34,39,2],
[2,"Alias","",17,39,2],
[2,"AlternativeName","",23,39,2],
[2,"AlternativeNamesPolicy","",22,39,2],
[2,"Architecture","",14,39,1],
[2,"AutoNegotiation","",30,39,2],
[2,"AutoNegotiationFlowControl","",52,39,2],
[2,"BitsPerSecond","",28,39,2],
[2,"CoalescePacketRateHigh","",58,39,2],
[2,"CoalescePacketRateLow","",58,39,2],
[2,"CoalescePacketRateSampleIntervalSec","",59,39,2],
[2,"CombinedChannels","",48,39,2],
[2,"Credential","",13,39,1],
[2,"Description","",16,39,2],
[2,"Driver","",4,39,1],
[2,"Duplex","",29,39,2],
[2,"Firmware","",15,39,1],
[2,"GenericReceiveOffload","",40,39,2],
[2,"GenericReceiveOffloadHardware","",41,39,2],
[2,"GenericSegmentOffloadMaxBytes","",53,39,2],
[2,"GenericSegmentOffloadMaxSegments","",54,39,2],
[2,"GenericSegmentationOffload","",39,39,2],
[2,"Host","",9,39,1],
[2,"KernelCommandLine","",11,39,1],
[2,"KernelVersion","",12,39,1],
[2,"Kind","",6,39,1],
[2,"LargeReceiveOffload","",42,39,2],
[2,"LinkState","",70,39,3],
[2,"MACAddress","",71,39,3],
[2,"MACAddress","",19,39,2],
[2,"MACAddress","",1,39,1],
[2,"MACAddressPolicy","",18,39,2],
[2,"MACSpoofCheck","",67,39,3],
[2,"MDI","",61,39,2],
[2,"MTUBytes","",27,39,2],
[2,"NTupleFilter","",47,39,2],
[2,"Name","",21,39,2],
[2,"NamePolicy","",20,39,2],
[2,"OriginalName","",8,39,1],
[2,"OtherChannels","",48,39,2],
[2,"Path","",3,39,1],
[2,"PermanentMACAddress","",2,39,1],
[2,"Port","",33,39,2],
[2,"Property","",7,39,1],
[2,"QualityOfService","",65,39,3],
[2,"QueryReceiveSideScaling","",68,39,3],
[2,"ReceiveChecksumOffload","",35,39,2],
[2,"ReceiveQueues","",25,39,2],
[2,"ReceiveVLANCTAGFilter","",45,39,2],
[2,"ReceiveVLANCTAGHardwareAcceleration","",43,39,2],
[2,"RxBufferSize","",49,39,2],
[2,"RxChannels","",48,39,2],
[2,"RxCoalesceHighSec","",56,39,2],
[2,"RxCoalesceIrqSec","",56,39,2],
[2,"RxCoalesceLowSec","",56,39,2],
[2,"RxCoalesceSec","",56,39,2],
[2,"RxFlowControl","",50,39,2],
[2,"RxJumboBufferSize","",49,39,2],
[2,"RxMaxCoalescedFrames","",57,39,2],
[2,"RxMaxCoalescedHighFrames","",57,39,2],
[2,"RxMaxCoalescedIrqFrames","",57,39,2],
[2,"RxMaxCoalescedLowFrames","",57,39,2],
[2,"RxMiniBufferSize","",49,39,2],
[2,"SR-IOVVirtualFunctions","",62,39,2],
[2,"StatisticsBlockCoalesceSec","",60,39,2],
[2,"TCP6SegmentationOffload","",38,39,2],
[2,"TCPSegmentationOffload","",37,39,2],
[2,"TransmitChecksumOffload","",36,39,2],
[2,"TransmitQueueLength","",26,39,2],
[2,"TransmitQueues","",24,39,2],
[2,"TransmitVLANCTAGHardwareAcceleration","",44,39,2],
[2,"TransmitVLANSTAGHardwareAcceleration","",46,39,2],
[2,"Trust","",69,39,3],
[2,"TxBufferSize","",49,39,2],
[2,"TxChannels","",48,39,2],
[2,"TxCoalesceHighSec","",56,39,2],
[2,"TxCoalesceIrqSec","",56,39,2],
[2,"TxCoalesceLowSec","",56,39,2],
[2,"TxCoalesceSec","",56,39,2],
[2,"TxFlowControl","",51,39,2],
[2,"TxMaxCoalescedFrames","",57,39,2],
[2,"TxMaxCoalescedHighFrames","",57,39,2],
[2,"TxMaxCoalescedIrqFrames","",57,39,2],
[2,"TxMaxCoalescedLowFrames","",57,39,2],
[2,"Type","",5,39,1],
[2,"UseAdaptiveRxCoalesce","",55,39,2],
[2,"UseAdaptiveTxCoalesce","",55,39,2],
[2,"VLANId","",64,39,3],
[2,"VLANProtocol","",66,39,3],
[2,"VirtualFunction","",63,39,3],
[2,"Virtualization","",10,39,1],
[2,"WakeOnLan","",31,39,2],
[2,"WakeOnLanPassword","",32,39,2]
]