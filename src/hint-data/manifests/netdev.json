[
[3,48,"systemd.netdev(5)","systemd.netdev — Virtual Network Device configuration","systemd.netdev.html"],
[6,1,"Match"],
[6,2,"NetDev"],
[6,3,"Bridge"],
[6,4,"VLAN"],
[6,5,"MACVLAN"],
[6,6,"MACVTAP"],
[6,7,"IPVLAN"],
[6,8,"IPVTAP"],
[6,9,"VXLAN"],
[6,10,"GENEVE"],
[6,11,"BareUDP"],
[6,12,"L2TP"],
[6,13,"L2TPSession"],
[6,14,"MACsec"],
[6,15,"MACsecReceiveChannel"],
[6,16,"MACsecTransmitAssociation"],
[6,17,"MACsecReceiveAssociation"],
[6,18,"Tunnel"],
[6,19,"FooOverUDP"],
[6,20,"Peer"],
[6,21,"VXCAN"],
[6,22,"Tun"],
[6,23,"Tap"],
[6,24,"WireGuard"],
[6,25,"WireGuardPeer"],
[6,26,"Bond"],
[6,27,"Xfrm"],
[6,28,"VRF"],
[6,29,"BatmanAdvanced"],
[6,30,"IPoIB"],
[6,31,"WLAN"],
[4,1,"Matches against the hostname or machine ID of the host. See `ConditionHost=` in [systemd.unit(5)](systemd.unit.html) for details. When prefixed with an exclamation mark (\"`!`\"), the result is negated. If an empty string is assigned, the previously assigned value is cleared.","#Host=",211],
[4,2,"Checks whether the system is executed in a virtualized environment and optionally test whether it is a specific implementation. See `ConditionVirtualization=` in [systemd.unit(5)](systemd.unit.html) for details. When prefixed with an exclamation mark (\"`!`\"), the result is negated. If an empty string is assigned, the previously assigned value is cleared.","#Virtualization=",211],
[4,3,"Checks whether a specific kernel command line option is set. See `ConditionKernelCommandLine=` in [systemd.unit(5)](systemd.unit.html) for details. When prefixed with an exclamation mark (\"`!`\"), the result is negated. If an empty string is assigned, the previously assigned value is cleared.","#KernelCommandLine=",211],
[4,4,"Checks whether the kernel version (as reported by **uname -r**) matches a certain expression. See `ConditionKernelVersion=` in [systemd.unit(5)](systemd.unit.html) for details. When prefixed with an exclamation mark (\"`!`\"), the result is negated. If an empty string is assigned, the previously assigned value is cleared.","#KernelVersion=",237],
[4,5,"Checks whether the specified credential was passed to the `systemd-udevd.service` service. See [System and Service Credentials](https://systemd.io/CREDENTIALS) for details. When prefixed with an exclamation mark (\"`!`\"), the result is negated. If an empty string is assigned, the previously assigned value is cleared.","#Credential=",252],
[4,6,"Checks whether the system is running on a specific architecture. See `ConditionArchitecture=` in [systemd.unit(5)](systemd.unit.html) for details. When prefixed with an exclamation mark (\"`!`\"), the result is negated. If an empty string is assigned, the previously assigned value is cleared.","#Architecture=",211],
[4,7,"Checks whether the system is running on a machine with the specified firmware. See `ConditionFirmware=` in [systemd.unit(5)](systemd.unit.html) for details. When prefixed with an exclamation mark (\"`!`\"), the result is negated. If an empty string is assigned, the previously assigned value is cleared.","#Firmware=",249],
[4,8,"A free-form description of the netdev.","#Description=",215],
[4,9,"The interface name used when creating the netdev. This setting is compulsory.","#Name=",211],
[4,10,"The netdev kind. This setting is compulsory. See the \"`Supported netdev kinds`\" section for the valid keys.","#Kind=",211],
[4,11,"The maximum transmission unit in bytes to set for the device. The usual suffixes K, M, G are supported and are understood to the base of 1024. For \"`tun`\" or \"`tap`\" devices, `MTUBytes=` setting is not currently supported in \\[NetDev\\] section. Please specify it in \\[Link\\] section of corresponding [systemd.network(5)](systemd.network.html) files.","#MTUBytes=",215],
[4,12,"Specifies the MAC address to use for the device, or takes the special value \"`none`\". When \"`none`\", **systemd-networkd** does not request the MAC address for the device, and the kernel will assign a random MAC address. For \"`tun`\", \"`tap`\", or \"`l2tp`\" devices, the `MACAddress=` setting in the \\[NetDev\\] section is not supported and will be ignored. Please specify it in the \\[Link\\] section of the corresponding [systemd.network(5)](systemd.network.html) file. If this option is not set, \"`vlan`\" device inherits the MAC address of the master interface. For other kind of netdevs, if this option is not set, then the MAC address is generated based on the interface name and the [machine-id(5)](machine-id.html).\n\nNote, even if \"`none`\" is specified, **systemd-udevd** will assign the persistent MAC address for the device, as `99-default.link` has `MACAddressPolicy=persistent`. So, it is also necessary to create a custom .link file for the device, if the MAC address assignment is not desired.","#MACAddress=",215],
[4,13,"HelloTimeSec specifies the number of seconds between two hello packets sent out by the root bridge and the designated bridges. Hello packets are used to communicate information about the topology throughout the entire bridged local area network.","#HelloTimeSec=",227],
[4,14,"MaxAgeSec specifies the number of seconds of maximum message age. If the last seen (received) hello packet is more than this number of seconds old, the bridge in question will start the takeover procedure in attempt to become the Root Bridge itself.","#MaxAgeSec=",227],
[4,15,"ForwardDelaySec specifies the number of seconds spent in each of the Listening and Learning states before the Forwarding state is entered.","#ForwardDelaySec=",227],
[4,16,"This specifies the number of seconds a MAC Address will be kept in the forwarding database after having a packet received from this MAC Address.","#AgeingTimeSec=",232],
[4,17,"The priority of the bridge. An integer between 0 and 65535. A lower value means higher priority. The bridge having the lowest priority will be elected as root bridge.","#Priority=",232],
[4,18,"A 16-bit bitmask represented as an integer which allows forwarding of link local frames with 802.1D reserved addresses (01:80:C2:00:00:0X). A logical AND is performed between the specified bitmask and the exponentiation of 2^X, the lower nibble of the last octet of the MAC address. For example, a value of 8 would allow forwarding of frames addressed to 01:80:C2:00:00:03 (802.1X PAE).","#GroupForwardMask=",235],
[4,19,"This specifies the default port VLAN ID of a newly attached bridge port. Set this to an integer in the range 1…4094 or \"`none`\" to disable the PVID.","#DefaultPVID=",232],
[4,20,"Takes a boolean. This setting controls the IFLA\\_BR\\_MCAST\\_QUERIER option in the kernel. If enabled, the kernel will send general ICMP queries from a zero source address. This feature should allow faster convergence on startup, but it causes some multicast-aware switches to misbehave and disrupt forwarding of multicast packets. When unset, the kernel's default will be used.","#MulticastQuerier=",230],
[4,21,"Takes a boolean. This setting controls the IFLA\\_BR\\_MCAST\\_SNOOPING option in the kernel. If enabled, IGMP snooping monitors the Internet Group Management Protocol (IGMP) traffic between hosts and multicast routers. When unset, the kernel's default will be used.","#MulticastSnooping=",230],
[4,22,"Takes a boolean. This setting controls the IFLA\\_BR\\_VLAN\\_FILTERING option in the kernel. If enabled, the bridge will be started in VLAN-filtering mode. When unset, the kernel's default will be used.","#VLANFiltering=",231],
[4,23,"Allows setting the protocol used for VLAN filtering. Takes `802.1q` or, `802.1ad`, and defaults to unset and kernel's default is used.","#VLANProtocol=",246],
[4,24,"Takes a boolean. This enables the bridge's Spanning Tree Protocol (STP). When unset, the kernel's default will be used.","#STP=",232],
[4,25,"Allows changing bridge's multicast Internet Group Management Protocol (IGMP) version. Takes an integer 2 or 3. When unset, the kernel's default will be used.","#MulticastIGMPVersion=",243],
[4,26,"The VLAN ID to use. An integer in the range 0…4094. This setting is compulsory.","#Id=",211],
[4,27,"Allows setting the protocol used for the VLAN interface. Takes \"`802.1q`\" or, \"`802.1ad`\", and defaults to unset and kernel's default is used.","#Protocol=",248],
[4,28,"Takes a boolean. The Generic VLAN Registration Protocol (GVRP) is a protocol that allows automatic learning of VLANs on a network. When unset, the kernel's default will be used.","#GVRP=",234],
[4,29,"Takes a boolean. Multiple VLAN Registration Protocol (MVRP) formerly known as GARP VLAN Registration Protocol (GVRP) is a standards-based Layer 2 network protocol, for automatic configuration of VLAN information on switches. It was defined in the 802.1ak amendment to 802.1Q-2005. When unset, the kernel's default will be used.","#MVRP=",234],
[4,30,"Takes a boolean. The VLAN loose binding mode, in which only the operational state is passed from the parent to the associated VLANs, but the VLAN device state is not changed. When unset, the kernel's default will be used.","#LooseBinding=",234],
[4,31,"Takes a boolean. When enabled, the VLAN reorder header is used and VLAN interfaces behave like physical interfaces. When unset, the kernel's default will be used.","#ReorderHeader=",234],
[4,32,"Defines a mapping of Linux internal packet priority (`SO_PRIORITY`) to VLAN header PCP field for outgoing and incoming frames, respectively. Takes a whitespace-separated list of integer pairs, where each integer must be in the range 1…4294967294, in the format \"`from`\"-\"`to`\", e.g., \"`21-7 45-5`\". Note that \"`from`\" must be greater than or equal to \"`to`\". When unset, the kernel's default will be used.","#EgressQOSMaps=",248],
[4,33,"The MACVLAN mode to use. The supported options are \"`private`\", \"`vepa`\", \"`bridge`\", \"`passthru`\", and \"`source`\".","#Mode=",211],
[4,34,"A whitespace-separated list of remote hardware addresses allowed on the MACVLAN. This option only has an effect in source mode. Use full colon-, hyphen- or dot-delimited hexadecimal. This option may appear more than once, in which case the lists are merged. If the empty string is assigned to this option, the list of hardware addresses defined prior to this is reset. Defaults to unset.","#SourceMACAddress=",246],
[4,35,"Specifies the length of the receive queue for broadcast/multicast packets. An unsigned integer in the range 0…4294967294. Defaults to unset.","#BroadcastMulticastQueueLength=",248],
[4,36,"The IPVLAN mode to use. The supported options are \"`L2`\",\"`L3`\" and \"`L3S`\".","#Mode=1",219],
[4,37,"The IPVLAN flags to use. The supported options are \"`bridge`\",\"`private`\" and \"`vepa`\".","#Flags=",237],
[4,38,"The VXLAN Network Identifier (or VXLAN Segment ID). Takes a number in the range 1…16777215.","#VNI=",243],
[4,39,"Configures destination IP address.","#Remote=",233],
[4,40,"Configures local IP address. It must be an address on the underlying interface of the VXLAN interface, or one of the special values \"`ipv4_link_local`\", \"`ipv6_link_local`\", \"`dhcp4`\", \"`dhcp6`\", and \"`slaac`\". If one of the special values is specified, an address which matches the corresponding type on the underlying interface will be used. Defaults to unset.","#Local=",233],
[4,41,"Configures VXLAN multicast group IP address. All members of a VXLAN must use the same multicast group address.","#Group=",243],
[4,42,"The Type Of Service byte value for a vxlan interface.","#TOS=",215],
[4,43,"A fixed Time To Live N on Virtual eXtensible Local Area Network packets. Takes \"`inherit`\" or a number in the range 0…255. 0 is a special value meaning inherit the inner protocol's TTL value. \"`inherit`\" means that it will inherit the outer protocol's TTL value.","#TTL=",215],
[4,44,"Takes a boolean. When true, enables dynamic MAC learning to discover remote MAC addresses.","#MacLearning=",215],
[4,45,"The lifetime of Forwarding Database entry learnt by the kernel, in seconds.","#FDBAgeingSec=",218],
[4,46,"Configures maximum number of FDB entries.","#MaximumFDBEntries=",228],
[4,47,"Takes a boolean. When true, bridge-connected VXLAN tunnel endpoint answers ARP requests from the local bridge on behalf of remote [Distributed Overlay Virtual Ethernet (DOVE)](https://en.wikipedia.org/wiki/Distributed_Overlay_Virtual_Ethernet) clients. Defaults to false.","#ReduceARPProxy=",233],
[4,48,"Takes a boolean. When true, enables netlink LLADDR miss notifications.","#L2MissNotification=",218],
[4,49,"Takes a boolean. When true, enables netlink IP address miss notifications.","#L3MissNotification=",218],
[4,50,"Takes a boolean. When true, route short circuiting is turned on.","#RouteShortCircuit=",218],
[4,51,"Takes a boolean. When true, transmitting UDP checksums when doing VXLAN/IPv4 is turned on.","#UDPChecksum=",220],
[4,52,"Takes a boolean. When true, sending zero checksums in VXLAN/IPv6 is turned on.","#UDP6ZeroChecksumTx=",220],
[4,53,"Takes a boolean. When true, receiving zero checksums in VXLAN/IPv6 is turned on.","#UDP6ZeroChecksumRx=",220],
[4,54,"Takes a boolean. When true, remote transmit checksum offload of VXLAN is turned on.","#RemoteChecksumTx=",232],
[4,55,"Takes a boolean. When true, remote receive checksum offload in VXLAN is turned on.","#RemoteChecksumRx=",232],
[4,56,"Takes a boolean. When true, it enables Group Policy VXLAN extension security label mechanism across network peers based on VXLAN. For details about the Group Policy VXLAN, see the [VXLAN Group Policy](https://tools.ietf.org/html/draft-smith-vxlan-group-policy) document. Defaults to false.","#GroupPolicyExtension=",224],
[4,57,"Takes a boolean. When true, Generic Protocol Extension extends the existing VXLAN protocol to provide protocol typing, OAM, and versioning capabilities. For details about the VXLAN GPE Header, see the [Generic Protocol Extension for VXLAN](https://tools.ietf.org/html/draft-ietf-nvo3-vxlan-gpe-07) document. If destination port is not specified and Generic Protocol Extension is set then default port of 4790 is used. Defaults to false.","#GenericProtocolExtension=",243],
[4,58,"Configures the default destination UDP port. If the destination port is not specified then Linux kernel default will be used. Set to 4789 to get the IANA assigned value.","#DestinationPort=",229],
[4,59,"Configures the source port range for the VXLAN. The kernel assigns the source UDP port based on the flow to help the receiver to do load balancing. When this option is not set, the normal range of local UDP ports is used.","#PortRange=",229],
[4,60,"Specifies the flow label to use in outgoing packets. The valid range is 0-1048575.","#FlowLabel=",234],
[4,61,"Allows setting the IPv4 Do not Fragment (DF) bit in outgoing packets, or to inherit its value from the IPv4 inner header. Takes a boolean value, or \"`inherit`\". Set to \"`inherit`\" if the encapsulated protocol is IPv6. When unset, the kernel's default will be used.","#IPDoNotFragment=",243],
[4,62,"Takes a boolean. When true, the vxlan interface is created without any underlying network interface. Defaults to false, which means that a .network file that requests this VXLAN interface using `VXLAN=` is required for the VXLAN to be created.","#Independent=",247],
[4,63,"Specifies the Virtual Network Identifier (VNI) to use, a number between 0 and 16777215. This field is mandatory.","#Id=1",234],
[4,64,"Specifies the unicast destination IP address to use in outgoing packets.","#Remote=1",234],
[4,65,"Specifies the TOS value to use in outgoing packets. Takes a number between 1 and 255.","#TOS=1",234],
[4,66,"Accepts the same values as in the \\[VXLAN\\] section, except that when unset or set to 0, the kernel's default will be used, meaning that packet TTL will be set from `/proc/sys/net/ipv4/ip_default_ttl`.","#TTL=1",234],
[4,67,"Takes a boolean. When true, specifies that UDP checksum is calculated for transmitted packets over IPv4.","#UDPChecksum=1",234],
[4,68,"Takes a boolean. When true, skip UDP checksum calculation for transmitted packets over IPv6.","#UDP6ZeroChecksumTx=1",234],
[4,69,"Takes a boolean. When true, allows incoming UDP packets over IPv6 with zero checksum field.","#UDP6ZeroChecksumRx=1",234],
[4,70,"Specifies destination port. Defaults to 6081. If not set or assigned the empty string, the default port of 6081 is used.","#DestinationPort=1",234],
[4,71,"Specifies the flow label to use in outgoing packets.","#FlowLabel=1",234],
[4,72,"Accepts the same key as in \\[VXLAN\\] section.","#IPDoNotFragment=1",243],
[4,73,"Takes a boolean. When true, inner Layer 3 protocol is set as Protocol Type in the GENEVE header instead of Ethernet. Defaults to false.","#InheritInnerProtocol=",254],
[4,74,"Specifies the destination UDP port (in range 1…65535). This is mandatory.","#DestinationPort=2",247],
[4,75,"Specifies the L3 protocol. Takes one of \"`ipv4`\", \"`ipv6`\", \"`mpls-uc`\" or \"`mpls-mc`\". This is mandatory.","#EtherType=",247],
[4,76,"Specifies the tunnel identifier. Takes an number in the range 1…4294967295. The value used must match the \"`PeerTunnelId=`\" value being used at the peer. This setting is compulsory.","#TunnelId=",242],
[4,77,"Specifies the peer tunnel id. Takes a number in the range 1…4294967295. The value used must match the \"`TunnelId=`\" value being used at the peer. This setting is compulsory.","#PeerTunnelId=",242],
[4,78,"Specifies the IP address of the remote peer. This setting is compulsory.","#Remote=2",242],
[4,79,"Specifies the IP address of a local interface. Takes an IP address, or the special values \"`auto`\", \"`static`\", or \"`dynamic`\". Optionally a name of a local interface can be specified after \"`@`\", e.g. \"`192.168.0.1@eth0`\" or \"`auto@eth0`\". When an address is specified, then a local or specified interface must have the address, and the remote address must be accessible through the local address. If \"`auto`\", then one of the addresses on a local or specified interface which is accessible to the remote address will be used. Similarly, if \"`static`\" or \"`dynamic`\" is set, then one of the static or dynamic addresses will be used. Defaults to \"`auto`\".","#Local=1",242],
[4,80,"Specifies the encapsulation type of the tunnel. Takes one of \"`udp`\" or \"`ip`\".","#EncapsulationType=",242],
[4,81,"Specifies the UDP source port to be used for the tunnel. When UDP encapsulation is selected it's mandatory. Ignored when IP encapsulation is selected.","#UDPSourcePort=",242],
[4,82,"Specifies destination port. When UDP encapsulation is selected it's mandatory. Ignored when IP encapsulation is selected.","#UDPDestinationPort=",245],
[4,83,"Takes a boolean. When true, specifies that UDP checksum is calculated for transmitted packets over IPv4.","#UDPChecksum=2",242],
[4,84,"Takes a boolean. When true, skip UDP checksum calculation for transmitted packets over IPv6.","#UDP6ZeroChecksumTx=2",242],
[4,85,"Takes a boolean. When true, allows incoming UDP packets over IPv6 with zero checksum field.","#UDP6ZeroChecksumRx=2",242],
[4,86,"Specifies the name of the session. This setting is compulsory.","#Name=1",242],
[4,87,"Specifies the session identifier. Takes an number in the range 1…4294967295. The value used must match the \"`SessionId=`\" value being used at the peer. This setting is compulsory.","#SessionId=",242],
[4,88,"Specifies the peer session identifier. Takes an number in the range 1…4294967295. The value used must match the \"`PeerSessionId=`\" value being used at the peer. This setting is compulsory.","#PeerSessionId=",242],
[4,89,"Specifies layer2specific header type of the session. One of \"`none`\" or \"`default`\". Defaults to \"`default`\".","#Layer2SpecificHeader=",242],
[4,90,"Specifies the port to be used for the MACsec transmit channel. The port is used to make secure channel identifier (SCI). Takes a value between 1 and 65535. Defaults to unset.","#Port=",243],
[4,91,"Takes a boolean. When true, enable encryption. Defaults to unset.","#Encrypt=",243],
[4,92,"Specifies the port to be used for the MACsec receive channel. The port is used to make secure channel identifier (SCI). Takes a value between 1 and 65535. This option is compulsory, and is not set by default.","#Port=1",243],
[4,93,"Specifies the MAC address to be used for the MACsec receive channel. The MAC address used to make secure channel identifier (SCI). This setting is compulsory, and is not set by default.","#MACAddress=1",243],
[4,94,"Specifies the packet number to be used for replay protection and the construction of the initialization vector (along with the secure channel identifier \\[SCI\\]). Takes a value between 1-4,294,967,295. Defaults to unset.","#PacketNumber=",243],
[4,95,"Specifies the identification for the key. Takes a number between 0-255. This option is compulsory, and is not set by default.","#KeyId=",243],
[4,96,"Specifies the encryption key used in the transmission channel. The same key must be configured on the peer’s matching receive channel. This setting is compulsory, and is not set by default. Takes a 128-bit key encoded in a hexadecimal string, for example \"`dffafc8d7b9a43d5b9a3dfbbf6a30c16`\".","#Key=",243],
[4,97,"Takes an absolute path to a file which contains a 128-bit key encoded in a hexadecimal string, which will be used in the transmission channel. When this option is specified, `Key=` is ignored. Note that the file must be readable by the user \"`systemd-network`\", so it should be, e.g., owned by \"`root:systemd-network`\" with a \"`0640`\" file mode. If the path refers to an `AF_UNIX` stream socket in the file system a connection is made to it and the key read from it.","#KeyFile=",243],
[4,98,"Takes a boolean. If enabled, then the security association is activated. Defaults to unset.","#Activate=",243],
[4,99,"Takes a boolean. If enabled, then the security association is used for encoding. Only one \\[MACsecTransmitAssociation\\] section can enable this option. When enabled, `Activate=yes` is implied. Defaults to unset.","#UseForEncoding=",243],
[4,100,"Accepts the same key as in \\[MACsecReceiveChannel\\] section.","#Port=2",243],
[4,101,"Accepts the same key as in \\[MACsecReceiveChannel\\] section.","#MACAddress=2",243],
[4,102,"Accepts the same key as in \\[MACsecTransmitAssociation\\] section.","#PacketNumber=1",243],
[4,103,"Accepts the same key as in \\[MACsecTransmitAssociation\\] section.","#KeyId=1",243],
[4,104,"Accepts the same key as in \\[MACsecTransmitAssociation\\] section.","#Key=1",243],
[4,105,"Accepts the same key as in \\[MACsecTransmitAssociation\\] section.","#KeyFile=1",243],
[4,106,"Accepts the same key as in \\[MACsecTransmitAssociation\\] section.","#Activate=1",243],
[4,107,"Takes a boolean value. When true, then the tunnel is externally controlled, which is also known as collect metadata mode, and most settings below like `Local=` or `Remote=` are ignored. This implies `Independent=`. Defaults to false.","#External=",251],
[4,108,"A static local address for tunneled packets. It must be an address on another interface of this host, or one of the special values \"`any`\", \"`ipv4_link_local`\", \"`ipv6_link_local`\", \"`dhcp4`\", \"`dhcp6`\", and \"`slaac`\". If one of the special values except for \"`any`\" is specified, an address which matches the corresponding type on the underlying interface will be used. Defaults to \"`any`\".","#Local=2",215],
[4,109,"The remote endpoint of the tunnel. Takes an IP address or the special value \"`any`\".","#Remote=3",215],
[4,110,"The Type Of Service byte value for a tunnel interface. For details about the TOS, see the [Type of Service in the Internet Protocol Suite](http://tools.ietf.org/html/rfc1349) document.","#TOS=2",215],
[4,111,"A fixed Time To Live N on tunneled packets. N is a number in the range 1…255. 0 is a special value meaning that packets inherit the TTL value. The default value for IPv4 tunnels is 0 (inherit). The default value for IPv6 tunnels is 64.","#TTL=2",215],
[4,112,"Takes a boolean. When true, enables Path MTU Discovery on the tunnel. When `IgnoreDontFragment=` is enabled, defaults to false. Otherwise, defaults to true.","#DiscoverPathMTU=",215],
[4,113,"Takes a boolean. When true, enables IPv4 Don't Fragment (DF) suppression on the tunnel. Defaults to false. Note that if `IgnoreDontFragment=` is set to true, `DiscoverPathMTU=` cannot be set to true. Only applicable to GRE, GRETAP, and ERSPAN tunnels.","#IgnoreDontFragment=",254],
[4,114,"Configures the 20-bit flow label (see [RFC 6437](https://tools.ietf.org/html/rfc6437)) field in the IPv6 header (see [RFC 2460](https://tools.ietf.org/html/rfc2460)), which is used by a node to label packets of a flow. It is only used for IPv6 tunnels. A flow label of zero is used to indicate packets that have not been labeled. It can be configured to a value in the range 0…0xFFFFF, or be set to \"`inherit`\", in which case the original flowlabel is used.","#IPv6FlowLabel=",223],
[4,115,"Takes a boolean. When true, the Differentiated Service Code Point (DSCP) field will be copied to the inner header from outer header during the decapsulation of an IPv6 tunnel packet. DSCP is a field in an IP packet that enables different levels of service to be assigned to network traffic. Defaults to \"`no`\".","#CopyDSCP=",223],
[4,116,"The Tunnel Encapsulation Limit option specifies how many additional levels of encapsulation are permitted to be prepended to the packet. For example, a Tunnel Encapsulation Limit option containing a limit value of zero means that a packet carrying that option may not enter another tunnel before exiting the current tunnel. (see [RFC 2473](https://tools.ietf.org/html/rfc2473#section-4.1.1)). The valid range is 0…255 and \"`none`\". Defaults to 4.","#EncapsulationLimit=",226],
[4,117,"The `Key=` parameter specifies the same key to use in both directions (`InputKey=` and `OutputKey=`). The `Key=` is either a number or an IPv4 address-like dotted quad. It is used as mark-configured SAD/SPD entry as part of the lookup key (both in data and control path) in IP XFRM (framework used to implement IPsec protocol). See [ip-xfrm — transform configuration](https://man7.org/linux/man-pages/man8/ip-xfrm.8.html) for details. It is only used for VTI/VTI6, GRE, GRETAP, and ERSPAN tunnels.","#Key=2",231],
[4,118,"The `InputKey=` parameter specifies the key to use for input. The format is same as `Key=`. It is only used for VTI/VTI6, GRE, GRETAP, and ERSPAN tunnels.","#InputKey=",231],
[4,119,"The `OutputKey=` parameter specifies the key to use for output. The format is same as `Key=`. It is only used for VTI/VTI6, GRE, GRETAP, and ERSPAN tunnels.","#OutputKey=",231],
[4,120,"An \"`ip6tnl`\" tunnel can be in one of three modes \"`ip6ip6`\" for IPv6 over IPv6, \"`ipip6`\" for IPv4 over IPv6 or \"`any`\" for either.","#Mode=2",219],
[4,121,"Takes a boolean. When false (the default), the tunnel is always created over some network device, and a .network file that requests this tunnel using `Tunnel=` is required for the tunnel to be created. When true, the tunnel is created independently of any network as \"tunnel@NONE\".","#Independent=1",235],
[4,122,"Takes a boolean. If set to \"`yes`\", the loopback interface \"`lo`\" is used as the underlying device of the tunnel interface. Defaults to \"`no`\".","#AssignToLoopback=",243],
[4,123,"Takes a boolean. When true allows tunnel traffic on `ip6tnl` devices where the remote endpoint is a local host address. When unset, the kernel's default will be used.","#AllowLocalRemote=",237],
[4,124,"Takes a boolean. Specifies whether `FooOverUDP=` tunnel is to be configured. Defaults to false. This takes effects only for IPIP, SIT, GRE, and GRETAP tunnels. For more detail information see [Foo over UDP](https://lwn.net/Articles/614348)","#FooOverUDP=",240],
[4,125,"This setting specifies the UDP destination port for encapsulation. This field is mandatory when `FooOverUDP=yes`, and is not set by default.","#FOUDestinationPort=",240],
[4,126,"This setting specifies the UDP source port for encapsulation. Defaults to `0` — that is, the source port for packets is left to the network stack to decide.","#FOUSourcePort=",240],
[4,127,"Accepts the same key as in the \\[FooOverUDP\\] section.","#Encapsulation=",240],
[4,128,"Reconfigure the tunnel for [IPv6 Rapid Deployment](https://tools.ietf.org/html/rfc5569), also known as 6rd. The value is an ISP-specific IPv6 prefix with a non-zero length. Only applicable to SIT tunnels.","#IPv6RapidDeploymentPrefix=",240],
[4,129,"Takes a boolean. If set, configures the tunnel as Intra-Site Automatic Tunnel Addressing Protocol (ISATAP) tunnel. Only applicable to SIT tunnels. When unset, the kernel's default will be used.","#ISATAP=",240],
[4,130,"Takes a boolean. If set to yes, then packets are serialized. Only applies for GRE, GRETAP, and ERSPAN tunnels. When unset, the kernel's default will be used.","#SerializeTunneledPackets=",240],
[4,131,"Specifies the ERSPAN version number. Takes 0 for version 0 (a.k.a. type I), 1 for version 1 (a.k.a. type II), or 2 for version 2 (a.k.a. type III). Defaults to 1.","#ERSPANVersion=",252],
[4,132,"Specifies the ERSPAN v1 index field for the interface. Takes an integer in the range 0…1048575, which is associated with the ERSPAN traffic's source port and direction. Only used when `ERSPANVersion=1`. Defaults to 0.","#ERSPANIndex=",240],
[4,133,"Specifies the ERSPAN v2 mirrored traffic's direction. Takes \"`ingress`\" or \"`egress`\". Only used when `ERSPANVersion=2`. Defaults to \"`ingress`\".","#ERSPANDirection=",252],
[4,134,"Specifies an unique identifier of the ERSPAN v2 engine. Takes an integer in the range 0…63. Only used when `ERSPANVersion=2`. Defaults to 0.","#ERSPANHardwareId=",252],
[4,135,"Specifies the encapsulation mechanism used to store networking packets of various protocols inside the UDP packets. Supports the following values: \"`FooOverUDP`\" provides the simplest no-frills model of UDP encapsulation, it simply encapsulates packets directly in the UDP payload. \"`GenericUDPEncapsulation`\" is a generic and extensible encapsulation, it allows encapsulation of packets for any IP protocol and optional data as part of the encapsulation. For more detailed information see [Generic UDP Encapsulation](https://lwn.net/Articles/615044). Defaults to \"`FooOverUDP`\".","#Encapsulation=1",240],
[4,136,"Specifies the port number where the encapsulated packets will arrive. Those packets will be removed and manually fed back into the network stack with the encapsulation removed to be sent to the real destination. This option is mandatory.","#Port=3",240],
[4,137,"Specifies the peer port number. Defaults to unset. Note that when peer port is set \"`Peer=`\" address is mandatory.","#PeerPort=",243],
[4,138,"The `Protocol=` specifies the protocol number of the packets arriving at the UDP port. When `Encapsulation=FooOverUDP`, this field is mandatory and is not set by default. Takes an IP protocol name such as \"`gre`\" or \"`ipip`\", or an integer within the range 1…255. When `Encapsulation=GenericUDPEncapsulation`, this must not be specified.","#Protocol=1",240],
[4,139,"Configures peer IP address. Note that when peer address is set \"`PeerPort=`\" is mandatory.","#Peer=",243],
[4,140,"Configures local IP address.","#Local=3",243],
[4,141,"The interface name used when creating the netdev. This setting is compulsory.","#Name=2",215],
[4,142,"The peer MACAddress, if not set, it is generated in the same way as the MAC address of the main interface.","#MACAddress=3",215],
[4,143,"The peer interface name used when creating the netdev. This setting is compulsory.","#Peer=1",236],
[4,144,"Takes a boolean. Configures whether to use multiple file descriptors (queues) to parallelize packets sending and receiving. Defaults to \"`no`\".","#MultiQueue=",215],
[4,145,"Takes a boolean. Configures whether packets should be prepended with four extra bytes (two flag bytes and two protocol bytes). If disabled, it indicates that the packets will be pure IP packets. Defaults to \"`no`\".","#PacketInfo=",215],
[4,146,"Takes a boolean. Configures IFF\\_VNET\\_HDR flag for a tun or tap device. It allows sending and receiving larger Generic Segmentation Offload (GSO) packets. This may increase throughput significantly. Defaults to \"`no`\".","#VNetHeader=",223],
[4,147,"User to grant access to the `/dev/net/tun` device.","#User=",215],
[4,148,"Group to grant access to the `/dev/net/tun` device.","#Group=1",215],
[4,149,"Takes a boolean. If enabled, to make the interface maintain its carrier status, the file descriptor of the interface is kept open. This may be useful to keep the interface in running state, for example while the backing process is temporarily shutdown. Defaults to \"`no`\".","#KeepCarrier=",252],
[4,150,"The Base64 encoded private key for the interface. It can be generated using the **wg genkey** command (see [wg(8)](https://git.zx2c4.com/WireGuard/about/src/tools/wg.8)). This option or `PrivateKeyFile=` is mandatory to use WireGuard. Note that because this information is secret, you may want to set the permissions of the .netdev file to be owned by \"`root:systemd-network`\" with a \"`0640`\" file mode.","#PrivateKey=",237],
[4,151,"Takes an absolute path to a file which contains the Base64 encoded private key for the interface. When this option is specified, then `PrivateKey=` is ignored. Note that the file must be readable by the user \"`systemd-network`\", so it should be, e.g., owned by \"`root:systemd-network`\" with a \"`0640`\" file mode. If the path refers to an `AF_UNIX` stream socket in the file system a connection is made to it and the key read from it.","#PrivateKeyFile=",242],
[4,152,"Sets UDP port for listening. Takes either value between 1 and 65535 or \"`auto`\". If \"`auto`\" is specified, the port is automatically generated based on interface name. Defaults to \"`auto`\".","#ListenPort=",237],
[4,153,"Sets a firewall mark on outgoing WireGuard packets from this interface. Takes a number between 1 and 4294967295.","#FirewallMark=",243],
[4,154,"The table identifier for the routes to the addresses specified in the `AllowedIPs=`. Takes a negative boolean value, one of the predefined names \"`default`\", \"`main`\", and \"`local`\", names defined in `RouteTable=` in [networkd.conf(5)](networkd.conf.html), or a number in the range 1…4294967295. When \"`off`\" the routes to the addresses specified in the `AllowedIPs=` setting will not be configured. Defaults to false. This setting will be ignored when the same setting is specified in the \\[WireGuardPeer\\] section.","#RouteTable=",250],
[4,155,"The priority of the routes to the addresses specified in the `AllowedIPs=`. Takes an integer in the range 0…4294967295. Defaults to 0 for IPv4 addresses, and 1024 for IPv6 addresses. This setting will be ignored when the same setting is specified in the \\[WireGuardPeer\\] section.","#RouteMetric=",250],
[4,156,"Sets a Base64 encoded public key calculated by **wg pubkey** (see [wg(8)](https://git.zx2c4.com/WireGuard/about/src/tools/wg.8)) from a private key, and usually transmitted out of band to the author of the configuration file. This option is mandatory for this section.","#PublicKey=",237],
[4,157,"Optional preshared key for the interface. It can be generated by the **wg genpsk** command. This option adds an additional layer of symmetric-key cryptography to be mixed into the already existing public-key cryptography, for post-quantum resistance. Note that because this information is secret, you may want to set the permissions of the .netdev file to be owned by \"`root:systemd-network`\" with a \"`0640`\" file mode.","#PresharedKey=",237],
[4,158,"Takes an absolute path to a file which contains the Base64 encoded preshared key for the peer. When this option is specified, then `PresharedKey=` is ignored. Note that the file must be readable by the user \"`systemd-network`\", so it should be, e.g., owned by \"`root:systemd-network`\" with a \"`0640`\" file mode. If the path refers to an `AF_UNIX` stream socket in the file system a connection is made to it and the key read from it.","#PresharedKeyFile=",242],
[4,159,"Sets a comma-separated list of IP (v4 or v6) addresses with CIDR masks from which this peer is allowed to send incoming traffic and to which outgoing traffic for this peer is directed. This setting can be specified multiple times. If an empty string is assigned, then the all previous assignments are cleared.\n\nThe catch-all 0.0.0.0/0 may be specified for matching all IPv4 addresses, and ::/0 may be specified for matching all IPv6 addresses.\n\nNote that this only affects _routing inside the network interface itself_, i.e. the packets that pass through the tunnel itself. To cause packets to be sent via the tunnel in the first place, an appropriate route needs to be added as well — either in the \"`[Routes]`\" section on the \"`.network`\" matching the wireguard interface, or externally to `systemd-networkd`.","#AllowedIPs=",237],
[4,160,"Sets an endpoint IP address or hostname, followed by a colon, and then a port number. IPv6 address must be in the square brackets. For example, \"`111.222.333.444:51820`\" for IPv4 and \"`[1111:2222::3333]:51820`\" for IPv6 address. This endpoint will be updated automatically once to the most recent source IP address and port of correctly authenticated packets from the peer at configuration time.","#Endpoint=",237],
[4,161,"Sets a seconds interval, between 1 and 65535 inclusive, of how often to send an authenticated empty packet to the peer for the purpose of keeping a stateful firewall or NAT mapping valid persistently. For example, if the interface very rarely sends traffic, but it might at anytime receive traffic from a peer, and it is behind NAT, the interface might benefit from having a persistent keepalive interval of 25 seconds. If set to 0 or \"off\", this option is disabled. By default or when unspecified, this option is off. Most users will not need this.","#PersistentKeepalive=",237],
[4,162,"The table identifier for the routes to the addresses specified in the `AllowedIPs=`. Takes a negative boolean value, one of the predefined names \"`default`\", \"`main`\", and \"`local`\", names defined in `RouteTable=` in [networkd.conf(5)](networkd.conf.html), or a number in the range 1…4294967295. Defaults to unset, and the value specified in the same setting in the \\[WireGuard\\] section will be used.","#RouteTable=1",250],
[4,163,"The priority of the routes to the addresses specified in the `AllowedIPs=`. Takes an integer in the range 0…4294967295. Defaults to unset, and the value specified in the same setting in the \\[WireGuard\\] section will be used.","#RouteMetric=1",250],
[4,164,"Specifies one of the bonding policies. The default is \"`balance-rr`\" (round robin). Possible values are \"`balance-rr`\", \"`active-backup`\", \"`balance-xor`\", \"`broadcast`\", \"`802.3ad`\", \"`balance-tlb`\", and \"`balance-alb`\".","#Mode=3",216],
[4,165,"Selects the transmit hash policy to use for slave selection in balance-xor, 802.3ad, and tlb modes. Possible values are \"`layer2`\", \"`layer3+4`\", \"`layer2+3`\", \"`encap2+3`\", and \"`encap3+4`\".","#TransmitHashPolicy=",216],
[4,166,"Specifies the rate with which link partner transmits Link Aggregation Control Protocol Data Unit packets in 802.3ad mode. Possible values are \"`slow`\", which requests partner to transmit LACPDUs every 30 seconds, and \"`fast`\", which requests partner to transmit LACPDUs every second. The default value is \"`slow`\".","#LACPTransmitRate=",216],
[4,167,"Specifies the frequency that Media Independent Interface link monitoring will occur. A value of zero disables MII link monitoring. This value is rounded down to the nearest millisecond. The default value is 0.","#MIIMonitorSec=",216],
[4,168,"Specifies the delay before a link is enabled after a link up status has been detected. This value is rounded down to a multiple of `MIIMonitorSec=`. The default value is 0.","#UpDelaySec=",216],
[4,169,"Specifies the delay before a link is disabled after a link down status has been detected. This value is rounded down to a multiple of `MIIMonitorSec=`. The default value is 0.","#DownDelaySec=",216],
[4,170,"Specifies the number of seconds between instances where the bonding driver sends learning packets to each slave peer switch. The valid range is 1…0x7fffffff; the default value is 1. This option has an effect only for the balance-tlb and balance-alb modes.","#LearnPacketIntervalSec=",220],
[4,171,"Specifies the 802.3ad aggregation selection logic to use. Possible values are \"`stable`\", \"`bandwidth`\" and \"`count`\".","#AdSelect=",220],
[4,172,"Specifies the 802.3ad actor system priority. Takes a number in the range 1…65535.","#AdActorSystemPriority=",240],
[4,173,"Specifies the 802.3ad user defined portion of the port key. Takes a number in the range 0…1023.","#AdUserPortKey=",240],
[4,174,"Specifies the 802.3ad system MAC address. This cannot be a null or multicast address.","#AdActorSystem=",240],
[4,175,"Specifies whether the active-backup mode should set all slaves to the same MAC address at the time of enslavement or, when enabled, to perform special handling of the bond's MAC address in accordance with the selected policy. The default policy is none. Possible values are \"`none`\", \"`active`\" and \"`follow`\".","#FailOverMACPolicy=",220],
[4,176,"Specifies whether or not ARP probes and replies should be validated in any mode that supports ARP monitoring, or whether non-ARP traffic should be filtered (disregarded) for link monitoring purposes. Possible values are \"`none`\", \"`active`\", \"`backup`\" and \"`all`\".","#ARPValidate=",220],
[4,177,"Specifies the ARP link monitoring frequency. A value of 0 disables ARP monitoring. The default value is 0, and the default unit seconds.","#ARPIntervalSec=",220],
[4,178,"Specifies the IP addresses to use as ARP monitoring peers when `ARPIntervalSec=` is greater than 0. These are the targets of the ARP request sent to determine the health of the link to the targets. Specify these values in IPv4 dotted decimal format. At least one IP address must be given for ARP monitoring to function. The maximum number of targets that can be specified is 16. The default value is no IP addresses.","#ARPIPTargets=",220],
[4,179,"Specifies the quantity of `ARPIPTargets=` that must be reachable in order for the ARP monitor to consider a slave as being up. This option affects only active-backup mode for slaves with ARPValidate enabled. Possible values are \"`any`\" and \"`all`\".","#ARPAllTargets=",220],
[4,180,"Specifies the reselection policy for the primary slave. This affects how the primary slave is chosen to become the active slave when failure of the active slave or recovery of the primary slave occurs. This option is designed to prevent flip-flopping between the primary slave and other slaves. Possible values are \"`always`\", \"`better`\" and \"`failure`\".","#PrimaryReselectPolicy=",220],
[4,181,"Specifies the number of IGMP membership reports to be issued after a failover event. One membership report is issued immediately after the failover, subsequent packets are sent in each 200ms interval. The valid range is 0…255. Defaults to 1. A value of 0 prevents the IGMP membership report from being issued in response to the failover event.","#ResendIGMP=",220],
[4,182,"Specify the number of packets to transmit through a slave before moving to the next one. When set to 0, then a slave is chosen at random. The valid range is 0…65535. Defaults to 1. This option only has effect when in balance-rr mode.","#PacketsPerSlave=",220],
[4,183,"Specify the number of peer notifications (gratuitous ARPs and unsolicited IPv6 Neighbor Advertisements) to be issued after a failover event. As soon as the link is up on the new slave, a peer notification is sent on the bonding device and each VLAN sub-device. This is repeated at each link monitor interval (ARPIntervalSec or MIIMonitorSec, whichever is active) if the number is greater than 1. The valid range is 0…255. The default value is 1. These options affect only the active-backup mode.","#GratuitousARP=",220],
[4,184,"Takes a boolean. Specifies that duplicate frames (received on inactive ports) should be dropped when false, or delivered when true. Normally, bonding will drop duplicate frames (received on inactive ports), which is desirable for most users. But there are some times it is nice to allow duplicate frames to be delivered. The default value is false (drop duplicate frames received on inactive ports).","#AllSlavesActive=",220],
[4,185,"Takes a boolean. Specifies if dynamic shuffling of flows is enabled. Applies only for balance-tlb mode. Defaults to unset.","#DynamicTransmitLoadBalancing=",240],
[4,186,"Specifies the minimum number of links that must be active before asserting carrier. The default value is 0.","#MinLinks=",220],
[4,187,"Sets the ID/key of the xfrm interface which needs to be associated with a SA/policy. Can be decimal or hexadecimal, valid range is 1-0xffffffff. This is mandatory.","#InterfaceId=",243],
[4,188,"Takes a boolean. If false (the default), the xfrm interface must have an underlying device which can be used for hardware offloading.","#Independent=2",243],
[4,189,"The numeric routing table identifier. This setting is compulsory.","#Table=",243],
[4,190,"Takes one of \"`off`\", \"`server`\", or \"`client`\". A batman-adv node can either run in server mode (sharing its internet connection with the mesh) or in client mode (searching for the most suitable internet connection in the mesh) or having the gateway support turned off entirely (which is the default setting).","#GatewayMode=",248],
[4,191,"Takes a boolean value. Enables or disables aggregation of originator messages. Defaults to true.","#Aggregation=",248],
[4,192,"Takes a boolean value. Enables or disables avoidance of loops on bridges. Defaults to true.","#BridgeLoopAvoidance=",248],
[4,193,"Takes a boolean value. Enables or disables the distributed ARP table. Defaults to true.","#DistributedArpTable=",248],
[4,194,"Takes a boolean value. Enables or disables fragmentation. Defaults to true.","#Fragmentation=",248],
[4,195,"The hop penalty setting allows one to modify [batctl(8)](https://www.mankier.com/8/batctl) preference for multihop routes vs. short routes. This integer value is applied to the TQ (Transmit Quality) of each forwarded OGM (Originator Message), thereby propagating the cost of an extra hop (the packet has to be received and retransmitted which costs airtime). A higher hop penalty will make it more unlikely that other nodes will choose this node as intermediate hop towards any given destination. The default hop penalty of '15' is a reasonable value for most setups and probably does not need to be changed. However, mobile nodes could choose a value of 255 (maximum value) to avoid being chosen as a router by other nodes. The minimum value is 0.","#HopPenalty=",248],
[4,196,"The value specifies the interval in seconds, unless another time unit is specified in which batman-adv floods the network with its protocol information. See [systemd.time(7)](systemd.time.html) for more information.","#OriginatorIntervalSec=",248],
[4,197,"If the node is a server, this parameter is used to inform other nodes in the network about this node's internet connection download bandwidth in bits per second. Just enter any number suffixed with K, M, G or T (base 1000) and the batman-adv module will propagate the entered value in the mesh.","#GatewayBandwidthDown=",248],
[4,198,"If the node is a server, this parameter is used to inform other nodes in the network about this node's internet connection upload bandwidth in bits per second. Just enter any number suffixed with K, M, G or T (base 1000) and the batman-adv module will propagate the entered value in the mesh.","#GatewayBandwidthUp=",248],
[4,199,"This can be either \"`batman-v`\" or \"`batman-iv`\" and describes which routing\\_algo of [batctl(8)](https://www.mankier.com/8/batctl) to use. The algorithm cannot be changed after interface creation. Defaults to \"`batman-v`\".","#RoutingAlgorithm=",248],
[4,200,"Takes an integer in the range 1…0xffff, except for 0x8000. Defaults to unset, and the kernel's default is used.","#PartitionKey=",250],
[4,201,"Takes one of the special values \"`datagram`\" or \"`connected`\". Defaults to unset, and the kernel's default is used.\n\nWhen \"`datagram`\", the Infiniband unreliable datagram (UD) transport is used, and so the interface MTU is equal to the IB L2 MTU minus the IPoIB encapsulation header (4 bytes). For example, in a typical IB fabric with a 2K MTU, the IPoIB MTU will be 2048 - 4 = 2044 bytes.\n\nWhen \"`connected`\", the Infiniband reliable connected (RC) transport is used. Connected mode takes advantage of the connected nature of the IB transport and allows an MTU up to the maximal IP packet size of 64K, which reduces the number of IP packets needed for handling large UDP datagrams, TCP segments, etc and increases the performance for large messages.","#Mode=4",250],
[4,202,"Takes an boolean value. When true, the kernel ignores multicast groups handled by userspace. Defaults to unset, and the kernel's default is used.","#IgnoreUserspaceMulticastGroup=",250],
[4,203,"Specifies the name or index of the physical WLAN device (e.g. \"`0`\" or \"`phy0`\"). The list of the physical WLAN devices that exist on the host can be obtained by **iw phy** command. This option is mandatory.","#PhysicalDevice=",251],
[4,204,"Specifies the type of the interface. Takes one of the \"`ad-hoc`\", \"`station`\", \"`ap`\", \"`ap-vlan`\", \"`wds`\", \"`monitor`\", \"`mesh-point`\", \"`p2p-client`\", \"`p2p-go`\", \"`p2p-device`\", \"`ocb`\", and \"`nan`\". This option is mandatory.","#Type=",251],
[4,205,"Enables the Wireless Distribution System (WDS) mode on the interface. The mode is also known as the \"`4 address mode`\". Takes a boolean value. Defaults to unset, and the kernel's default will be used.","#WDS=",251],
[2,"ARPAllTargets",[],179,48,26],
[2,"ARPIPTargets",[],178,48,26],
[2,"ARPIntervalSec",[],177,48,26],
[2,"ARPValidate",[],176,48,26],
[2,"Activate",[],106,48,17],
[2,"Activate","b",98,48,16],
[2,"AdActorSystem",[],174,48,26],
[2,"AdActorSystemPriority",[],172,48,26],
[2,"AdSelect",[],171,48,26],
[2,"AdUserPortKey",[],173,48,26],
[2,"AgeingTimeSec",[],16,48,3],
[2,"Aggregation","b",191,48,29],
[2,"AllSlavesActive","b",184,48,26],
[2,"AllowLocalRemote","b",123,48,18],
[2,"AllowedIPs",[],159,48,25],
[2,"Architecture",[],6,48,1],
[2,"AssignToLoopback","b",122,48,18],
[2,"BridgeLoopAvoidance","b",192,48,29],
[2,"BroadcastMulticastQueueLength",[],35,48,5],
[2,"CopyDSCP","b",115,48,18],
[2,"Credential",[],5,48,1],
[2,"DefaultPVID",[],19,48,3],
[2,"Description",[],8,48,2],
[2,"DestinationPort",[],74,48,11],
[2,"DestinationPort",[],70,48,10],
[2,"DestinationPort",[],58,48,9],
[2,"DiscoverPathMTU","b",112,48,18],
[2,"DistributedArpTable","b",193,48,29],
[2,"DownDelaySec",[],169,48,26],
[2,"DynamicTransmitLoadBalancing","b",185,48,26],
[2,"ERSPANDirection",[],133,48,18],
[2,"ERSPANHardwareId",[],134,48,18],
[2,"ERSPANIndex",[],132,48,18],
[2,"ERSPANVersion",[],131,48,18],
[2,"EgressQOSMaps",[],32,48,4],
[2,"Encapsulation",[],135,48,19],
[2,"Encapsulation",[],127,48,18],
[2,"EncapsulationLimit",[],116,48,18],
[2,"EncapsulationType",[],80,48,12],
[2,"Encrypt","b",91,48,14],
[2,"Endpoint",[],160,48,25],
[2,"EtherType",[],75,48,11],
[2,"External","b",107,48,18],
[2,"FDBAgeingSec",[],45,48,9],
[2,"FOUDestinationPort",[],125,48,18],
[2,"FOUSourcePort",[],126,48,18],
[2,"FailOverMACPolicy",[],175,48,26],
[2,"FirewallMark",[],153,48,24],
[2,"Firmware",[],7,48,1],
[2,"Flags",[],37,48,7],
[2,"FlowLabel",[],71,48,10],
[2,"FlowLabel",[],60,48,9],
[2,"FooOverUDP","b",124,48,18],
[2,"ForwardDelaySec",[],15,48,3],
[2,"Fragmentation","b",194,48,29],
[2,"GVRP","b",28,48,4],
[2,"GatewayBandwidthDown",[],197,48,29],
[2,"GatewayBandwidthUp",[],198,48,29],
[2,"GatewayMode",[],190,48,29],
[2,"GenericProtocolExtension","b",57,48,9],
[2,"GratuitousARP",[],183,48,26],
[2,"Group",[],148,48,22],
[2,"Group",[],41,48,9],
[2,"GroupForwardMask",[],18,48,3],
[2,"GroupPolicyExtension","b",56,48,9],
[2,"HelloTimeSec",[],13,48,3],
[2,"HopPenalty",[],195,48,29],
[2,"Host",[],1,48,1],
[2,"IPDoNotFragment",[],72,48,10],
[2,"IPDoNotFragment","b",61,48,9],
[2,"IPv6FlowLabel",[],114,48,18],
[2,"IPv6RapidDeploymentPrefix",[],128,48,18],
[2,"ISATAP","b",129,48,18],
[2,"Id",[],63,48,10],
[2,"Id",[],26,48,4],
[2,"IgnoreDontFragment","b",113,48,18],
[2,"IgnoreUserspaceMulticastGroup","b",202,48,30],
[2,"Independent","b",188,48,27],
[2,"Independent","b",121,48,18],
[2,"Independent","b",62,48,9],
[2,"IngressQOSMaps",[],32,48,4],
[2,"InheritInnerProtocol","b",73,48,10],
[2,"InputKey",[],118,48,18],
[2,"InterfaceId",[],187,48,27],
[2,"KeepCarrier","b",149,48,22],
[2,"KernelCommandLine",[],3,48,1],
[2,"KernelVersion",[],4,48,1],
[2,"Key",[],117,48,18],
[2,"Key",[],104,48,17],
[2,"Key",[],96,48,16],
[2,"KeyFile",[],105,48,17],
[2,"KeyFile",[],97,48,16],
[2,"KeyId",[],103,48,17],
[2,"KeyId",[],95,48,16],
[2,"Kind",[],10,48,2],
[2,"L2MissNotification","b",48,48,9],
[2,"L3MissNotification","b",49,48,9],
[2,"LACPTransmitRate",[],166,48,26],
[2,"Layer2SpecificHeader",[],89,48,13],
[2,"LearnPacketIntervalSec",[],170,48,26],
[2,"ListenPort",[],152,48,24],
[2,"Local",[],140,48,19],
[2,"Local",[],108,48,18],
[2,"Local",[],79,48,12],
[2,"Local",[],40,48,9],
[2,"LooseBinding","b",30,48,4],
[2,"MACAddress",[],142,48,20],
[2,"MACAddress",[],101,48,17],
[2,"MACAddress",[],93,48,15],
[2,"MACAddress",[],12,48,2],
[2,"MIIMonitorSec",[],167,48,26],
[2,"MTUBytes",[],11,48,2],
[2,"MVRP","b",29,48,4],
[2,"MacLearning","b",44,48,9],
[2,"MaxAgeSec",[],14,48,3],
[2,"MaximumFDBEntries",[],46,48,9],
[2,"MinLinks",[],186,48,26],
[2,"Mode",[],201,48,30],
[2,"Mode",[],164,48,26],
[2,"Mode",[],120,48,18],
[2,"Mode",[],36,48,7],
[2,"Mode",[],33,48,5],
[2,"MultiQueue","b",144,48,22],
[2,"MulticastIGMPVersion",[],25,48,3],
[2,"MulticastQuerier","b",20,48,3],
[2,"MulticastSnooping","b",21,48,3],
[2,"Name",[],141,48,20],
[2,"Name",[],86,48,13],
[2,"Name",[],9,48,2],
[2,"OriginatorIntervalSec",[],196,48,29],
[2,"OutputKey",[],119,48,18],
[2,"PacketInfo","b",145,48,22],
[2,"PacketNumber",[],102,48,17],
[2,"PacketNumber",[],94,48,16],
[2,"PacketsPerSlave",[],182,48,26],
[2,"PartitionKey",[],200,48,30],
[2,"Peer",[],143,48,21],
[2,"Peer",[],139,48,19],
[2,"PeerPort",[],137,48,19],
[2,"PeerSessionId",[],88,48,13],
[2,"PeerTunnelId",[],77,48,12],
[2,"PersistentKeepalive",[],161,48,25],
[2,"PhysicalDevice",[],203,48,31],
[2,"Port",[],136,48,19],
[2,"Port",[],100,48,17],
[2,"Port",[],92,48,15],
[2,"Port",[],90,48,14],
[2,"PortRange",[],59,48,9],
[2,"PresharedKey",[],157,48,25],
[2,"PresharedKeyFile",[],158,48,25],
[2,"PrimaryReselectPolicy",[],180,48,26],
[2,"Priority",[],17,48,3],
[2,"PrivateKey",[],150,48,24],
[2,"PrivateKeyFile",[],151,48,24],
[2,"Protocol",[],138,48,19],
[2,"Protocol",[],27,48,4],
[2,"PublicKey",[],156,48,25],
[2,"ReduceARPProxy","b",47,48,9],
[2,"Remote",[],109,48,18],
[2,"Remote",[],78,48,12],
[2,"Remote",[],64,48,10],
[2,"Remote",[],39,48,9],
[2,"RemoteChecksumRx","b",55,48,9],
[2,"RemoteChecksumTx","b",54,48,9],
[2,"ReorderHeader","b",31,48,4],
[2,"ResendIGMP",[],181,48,26],
[2,"RouteMetric",[],163,48,25],
[2,"RouteMetric",[],155,48,24],
[2,"RouteShortCircuit","b",50,48,9],
[2,"RouteTable",[],162,48,25],
[2,"RouteTable",[],154,48,24],
[2,"RoutingAlgorithm",[],199,48,29],
[2,"STP","b",24,48,3],
[2,"SerializeTunneledPackets","b",130,48,18],
[2,"SessionId",[],87,48,13],
[2,"SourceMACAddress",[],34,48,5],
[2,"TOS",[],110,48,18],
[2,"TOS",[],65,48,10],
[2,"TOS",[],42,48,9],
[2,"TTL",[],111,48,18],
[2,"TTL",[],66,48,10],
[2,"TTL",[],43,48,9],
[2,"Table",[],189,48,28],
[2,"TransmitHashPolicy",[],165,48,26],
[2,"TunnelId",[],76,48,12],
[2,"Type",[],204,48,31],
[2,"UDP6ZeroChecksumRx","b",85,48,12],
[2,"UDP6ZeroChecksumRx","b",69,48,10],
[2,"UDP6ZeroChecksumRx","b",53,48,9],
[2,"UDP6ZeroChecksumTx","b",84,48,12],
[2,"UDP6ZeroChecksumTx","b",68,48,10],
[2,"UDP6ZeroChecksumTx","b",52,48,9],
[2,"UDPChecksum","b",83,48,12],
[2,"UDPChecksum","b",67,48,10],
[2,"UDPChecksum","b",51,48,9],
[2,"UDPDestinationPort",[],82,48,12],
[2,"UDPSourcePort",[],81,48,12],
[2,"UpDelaySec",[],168,48,26],
[2,"UseForEncoding","b",99,48,16],
[2,"User",[],147,48,22],
[2,"VLANFiltering","b",22,48,3],
[2,"VLANProtocol",[],23,48,3],
[2,"VNI",[],38,48,9],
[2,"VNetHeader","b",146,48,22],
[2,"Virtualization",[],2,48,1],
[2,"WDS","b",205,48,31]
]