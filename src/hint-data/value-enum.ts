import { SystemdFileType } from "../parser/file-info";
import { PredefinedSignature } from "./types-manifest";

export type SystemdValueEnum = {
    directive: string;
    values: string[];
    extends?: PredefinedSignature;
    desc?: Record<string, string>;
    section?: string;
    file?: SystemdFileType;
    manPage?: string;
    /** Separators */
    sep?: " " | ",";
    /** Supported prefixes */
    prefixes?: string[];
};

/** https://www.freedesktop.org/software/systemd/man/latest/systemd.network.html#WLANInterfaceType= */
const wlanInterfaceType: string[] = [
    "ad-hoc",
    "station",
    "ap",
    "ap-vlan",
    "wds",
    "monitor",
    "mesh-point",
    "p2p-client",
    "p2p-go",
    "p2p-device",
    "ocb",
    "nan",
];

/** https://www.freedesktop.org/software/systemd/man/latest/systemd.network.html#%5BNetworkEmulator%5D%20Section%20Options */
const qdsicParentEnum4 = {
    values: ["root", "ingress", "clsact", "${class_identifier}"],
    desc: {
        root: "default",
    },
};
/** https://www.freedesktop.org/software/systemd/man/latest/systemd.network.html#%5BHierarchyTokenBucketClass%5D%20Section%20Options */
const qdsicParentEnum2 = {
    values: ["root", "${qdisc_identifier}"],
    desc: {
        root: "default",
    },
};

export const systemdValueEnum: ReadonlyArray<SystemdValueEnum> = [
    {
        directive: "BindIPv6Only",
        section: "Socket",
        file: SystemdFileType.socket,
        values: ["default", "both", "ipv6-only"],
    },
    {
        directive: "IPTOS",
        section: "Socket",
        file: SystemdFileType.socket,
        values: ["low-delay", "throughput", "reliability", "low-cost"],
    },
    {
        directive: "SocketProtocol",
        section: "Socket",
        file: SystemdFileType.socket,
        values: ["udplite", "sctp"],
    },
    {
        directive: "TCPCongestion",
        section: "Socket",
        file: SystemdFileType.socket,
        values: ["westwood", "veno", "cubic", "lp"],
    },
    {
        directive: "Timestamping",
        section: "Socket",
        file: SystemdFileType.socket,
        values: ["off", "us", "usec", "Î¼s", "ns", "nsec"],
    },
    {
        directive: "CollectMode",
        section: "Unit",
        values: ["inactive", "inactive-or-failed"],
    },
    {
        directive: "ConditionArchitecture",
        section: "Unit",
        values: [
            "x86",
            "x86-64",
            "ppc",
            "ppc-le",
            "ppc64",
            "ppc64-le",
            "ia64",
            "parisc",
            "parisc64",
            "s390",
            "s390x",
            "sparc",
            "sparc64",
            "mips",
            "mips-le",
            "mips64",
            "mips64-le",
            "alpha",
            "arm",
            "arm-be",
            "arm64",
            "arm64-be",
            "sh",
            "sh64",
            "m68k",
            "tilegx",
            "cris",
            "arc",
            "arc-be",
            "native",
        ],
    },
    {
        directive: "ConditionVirtualization",
        section: "Unit",
        values: ["vm", "container"],
    },
    {
        directive: "FailureAction",
        section: "Unit",
        values: [
            "none",
            "reboot",
            "reboot-force",
            "reboot-immediate",
            "poweroff",
            "poweroff-force",
            "poweroff-immediate",
            "exit",
            "exit-force",
            "soft-reboot",
            "soft-reboot-force",
            "kexec",
            "kexec-force",
            "halt",
            "halt-force",
            "halt-immediate",
        ],
    },
    {
        directive: "BPFProgram",
        manPage: "systemd.resource-control(5)",
        values: [
            "egress",
            "ingress",
            "sock_create",
            "sock_ops",
            "device",
            "bind4",
            "bind6",
            "connect4",
            "connect6",
            "post_bind4",
            "post_bind6",
            "sendmsg4",
            "sendmsg6",
            "sysctl",
            "recvmsg4",
            "recvmsg6",
            "getsockopt",
            "setsockopt",
        ].map((it) => `${it}:\${program_path}`),
    },
    {
        directive: "MemoryPressureWatch",
        manPage: "systemd.resource-control(5)",
        values: ["off", "on", "auto", "skip"],
    },
    {
        directive: "CPUSchedulingPolicy",
        manPage: "systemd.exec(5)",
        values: ["other", "batch", "idle", "fifo", "rr"],
    },
    {
        directive: "IOSchedulingClass",
        manPage: "systemd.exec(5)",
        values: ["realtime", "best-effort", "idle"],
    },
    {
        directive: "KeyringMode",
        manPage: "systemd.exec(5)",
        values: ["inherit", "private", "shared"],
    },
    {
        directive: "Personality",
        manPage: "systemd.exec(5)",
        values: [
            "arm64",
            "arm64-be",
            "arm",
            "arm-be",
            "x86",
            "x86-64",
            "ppc",
            "ppc-le",
            "ppc64",
            "ppc64-le",
            "s390",
            "s390x",
        ],
    },
    {
        directive: "ProcSubset",
        manPage: "systemd.exec(5)",
        values: ["all", "pid"],
    },
    {
        directive: "ProtectProc",
        manPage: "systemd.exec(5)",
        values: ["noaccess", "invisible", "ptraceable", "default"],
    },
    {
        directive: "StandardInput",
        manPage: "systemd.exec(5)",
        values: ["null", "tty", "tty-force", "tty-fail", "data", "file:${path}", "socket", "fd:${name}"],
    },
    {
        directive: "StandardOutput",
        manPage: "systemd.exec(5)",
        values: [
            "inherit",
            "null",
            "tty",
            "journal",
            "kmsg",
            "journal+console",
            "kmsg+console",
            "file:${path}",
            "append:${path}",
            "truncate:${path}",
            "socket",
            "fd:${name}",
        ],
    },
    {
        directive: "SyslogFacility",
        manPage: "systemd.exec(5)",
        values: [
            "kern",
            "user",
            "mail",
            "daemon",
            "auth",
            "syslog",
            "lpr",
            "news",
            "uucp",
            "cron",
            "authpriv",
            "ftp",
            "local0",
            "local1",
            "local2",
            "local3",
            "local4",
            "local5",
            "local6",
            "local7",
        ],
    },
    {
        directive: "SyslogLevel",
        manPage: "systemd.exec(5)",
        values: ["emerg", "alert", "crit", "err", "warning", "notice", "info", "debug"],
    },
    {
        directive: "UtmpMode",
        manPage: "systemd.exec(5)",
        values: ["init", "login", "user"],
    },
    {
        directive: "ExitType",
        section: "Service",
        file: SystemdFileType.service,
        values: ["cgroup", "main"],
        desc: {
            main: "(the default) The service manager will consider the unit stopped when the main process, which is determined according to the `Type=`, exits. Consequently, it cannot be used with `Type=oneshot`.",
            cgroup: "The service will be considered running as long as at least one process in the cgroup has not exited.",
        },
    },
    {
        directive: "FileDescriptorStorePreserve",
        section: "Service",
        file: SystemdFileType.service,
        values: ["no", "yes", "restart"],
    },
    {
        directive: "NotifyAccess",
        section: "Service",
        file: SystemdFileType.service,
        values: ["none", "main", "exec", "all"],
    },
    {
        directive: "OOMPolicy",
        section: "Service",
        file: SystemdFileType.service,
        values: ["continue", "stop", "kill"],
    },
    {
        directive: "Restart",
        section: "Service",
        file: SystemdFileType.service,
        values: ["no", "on-success", "on-failure", "on-abnormal", "on-watchdog", "on-abort", "always"],
    },
    {
        directive: "RestartMode",
        file: SystemdFileType.service,
        values: ["normal", "direct"],
    },
    {
        directive: "TimeoutStartFailureMode",
        section: "Service",
        file: SystemdFileType.service,
        values: ["terminate", "abort", "kill"],
    },
    {
        directive: "Type",
        section: "Service",
        file: SystemdFileType.service,
        values: ["simple", "exec", "forking", "oneshot", "dbus", "notify", "notify-reload", "idle"],
        desc: {
            //#region
            // these help text are extarcted from
            // https://www.freedesktop.org/software/systemd/man/latest/systemd.service.html#
            // by the author
            simple: "*Typically, `Type=exec` is the better choice* (the default if `ExecStart=` is specified but neither `Type=` nor `BusName=` are). The service manager will consider the unit started immediately after the main service process has been forked off",
            exec: "The `exec` type is similar to simple, but the service manager will consider the unit started immediately after the main service binary has been executed.",
            forking:
                "*The use of this type is discouraged, use `notify`, `notify-reload`, or `dbus` instead.* The manager will consider the unit started immediately after the binary that forked off by the manager exits.",
            oneshot:
                "Behavior of `oneshot` is similar to `simple`; however, the service manager will consider the unit up after the main process exits",
            dbus: "(the default is `BusName=` is specified) Behavior of `dbus` is similar to `simple`; however, units of this type must have the `BusName=` specified and the service manager will consider the unit up when the specified bus name has been acquired.",
            notify: 'It is expected that the service sends a "READY=1" notification message via sd_notify(3) or an equivalent call when it has finished starting up.',
            "notify-reload":
                "Behavior of `notify-reload` is similar to `notify`, with one difference: the `SIGHUP` UNIX process signal is sent to the service's main process when the service is asked to reload and the manager will wait for a notification about the reload being finished.",
            idle: "Behavior of `idle` is very similar to `simple`; however, actual execution of the service program is delayed until all active jobs are dispatched. This may be used to avoid interleaving of output of shell services with the status output on the console. Note that this type is useful only to improve console output, it is not useful as a general unit ordering tool, and the effect of this service type is subject to a 5s timeout, after which the service program is invoked anyway.",
            //#endregion
        },
    },
    {
        directive: "OOMPolicy",
        manPage: "systemd.scope(5)",
        values: ["continue", "stop", "kill"],
    },
    {
        directive: "systemd.default_standard_error",
        manPage: "systemd(1)",
        values: ["inherit", "null", "tty", "journal", "journal+console", "kmsg", "kmsg+console"],
    },
    {
        directive: "DefaultFileSystemType",
        section: "Home",
        manPage: "homed.conf(5)",
        values: ["btrfs", "ext4", "xfs"],
    },
    {
        directive: "DefaultStorage",
        section: "Home",
        manPage: "homed.conf(5)",
        values: ["luks", "fscrypt", "directory", "subvolume", "cifs"],
    },
    {
        directive: "ActivationPolicy",
        section: "Link",
        file: SystemdFileType.network,
        values: ["up", "always-up", "manual", "always-down", "down", "bound"],
    },
    {
        directive: "AssociatedWith",
        section: "BridgeFDB",
        file: SystemdFileType.network,
        values: ["use", "self", "master", "router"],
    },
    {
        directive: "ClientIdentifier",
        section: "DHCPv4",
        file: SystemdFileType.network,
        values: ["mac", "duid"],
    },
    {
        directive: "CompensationMode",
        section: "CAKE",
        file: SystemdFileType.network,
        values: ["none", "atm", "ptm"],
    },
    {
        directive: "DuplicateAddressDetection",
        section: "Address",
        file: SystemdFileType.network,
        values: ["ipv4", "ipv6", "both", "none"],
    },
    {
        directive: "FallbackLeaseLifetimeSec",
        section: "DHCPv4",
        file: SystemdFileType.network,
        values: ["forever", "infinity"],
    },
    {
        directive: "Family",
        section: "NextHop",
        file: SystemdFileType.network,
        values: ["ipv4", "ipv6"],
    },
    {
        directive: "WLANInterfaceType",
        section: "Match",
        file: SystemdFileType.network,
        values: wlanInterfaceType,
        sep: " ",
        prefixes: ["!"],
    },
    {
        directive: "DHCP",
        section: "Network",
        file: SystemdFileType.network,
        values: ["yes", "no", "ipv4", "ipv6"],
        desc: { no: "default" },
    },
    {
        directive: "LinkLocalAddressing",
        section: "Network",
        file: SystemdFileType.network,
        values: ["yes", "no", "ipv4", "ipv6"],
    },
    {
        directive: "VLANId",
        section: "SR-IOV",
        file: SystemdFileType.network,
        values: ["802.1Q", "802.1ad"],
    },
    {
        directive: "LinkState",
        section: "SR-IOV",
        file: SystemdFileType.network,
        values: ["auto"],
        extends: PredefinedSignature.Boolean,
    },

    {
        directive: "LLMNR",
        section: "Network",
        file: SystemdFileType.network,
        values: ["resolve"],
        extends: PredefinedSignature.Boolean,
    },
    {
        directive: "MulticastDNS",
        section: "Network",
        file: SystemdFileType.network,
        values: ["resolve"],
        extends: PredefinedSignature.Boolean,
    },
    {
        directive: "DNSOverTLS",
        section: "Network",
        file: SystemdFileType.network,
        values: ["opportunistic"],
        extends: PredefinedSignature.Boolean,
    },
    {
        directive: "DNSSEC",
        section: "Network",
        file: SystemdFileType.network,
        values: ["allow-downgrade"],
        extends: PredefinedSignature.Boolean,
    },
    {
        directive: "IPForward",
        section: "Network",
        file: SystemdFileType.network,
        values: ["ipv4", "ipv6"],
        extends: PredefinedSignature.Boolean,
    },
    {
        directive: "IPMasquerade",
        section: "Network",
        file: SystemdFileType.network,
        values: ["ipv4", "ipv6", "both", "no"],
    },
    {
        directive: "IPServiceType",
        section: "DHCPv4",
        file: SystemdFileType.network,
        values: ["none", "CS6", "CS4"],
    },
    {
        directive: "IPv4ReversePathFilter",
        section: "Network",
        file: SystemdFileType.network,
        values: ["no", "strict", "loose"],
    },
    {
        directive: "IPv6LinkLocalAddressGenerationMode",
        section: "Network",
        file: SystemdFileType.network,
        values: ["eui64", "none", "stable-privacy", "random"],
    },
    {
        directive: "Mode",
        section: "IPoIB",
        file: SystemdFileType.network,
        values: ["datagram", "connected"],
    },
    {
        directive: "IPv6Preference",
        section: "Route",
        file: SystemdFileType.network,
        values: ["low", "medium", "high"],
    },
    {
        directive: "KeepConfiguration",
        section: "Network",
        file: SystemdFileType.network,
        values: ["static", "dhcp-on-stop", "dhcp"],
        extends: PredefinedSignature.Boolean,
    },
    {
        directive: "MulticastRouter",
        section: "Bridge",
        file: SystemdFileType.network,
        values: ["no", "query", "permanent", "temporary"],
    },
    {
        directive: "FlowIsolationMode",
        section: "CAKE",
        file: SystemdFileType.network,
        values: [],
        desc: {
            none: "The flow isolation is disabled, and all traffic passes through a single queue",
            "src-host":
                'Flows are defined only by source address. Equivalent to the "`srchost`" option for **tc qdisc** command',
            "dst-host":
                'Flows are defined only by destination address. Equivalent to the "`dsthost`" option for **tc qdisc** command',
            hosts: "Flows are defined by source-destination host pairs. Equivalent to the same option for **tc qdisc** command",
            flows: "Flows are defined by the entire 5-tuple of source address, destination address, transport protocol, source port and destination port. Equivalent to the same option for **tc qdisc** command",
            "dual-src-host":
                'Flows are defined by the 5-tuple (see "`flows`"), and fairness is applied first over source addresses, then over individual flows. Equivalent to the "`dual-srchost`" option for **tc qdisc** command',
            "dual-dst-host":
                'Flows are defined by the 5-tuple (see "`flows`"), and fairness is applied first over destination addresses, then over individual flows. Equivalent to the "`dual-dsthost`" option for **tc qdisc** command',
            triple: 'Flows are defined by the 5-tuple (see "`flows`"), and fairness is applied over source and destination addresses, and also over individual flows. Equivalent to the "`triple-isolate`" option for **tc qdisc** command',
        },
    },
    {
        directive: "Parent",
        section: "QuickFairQueueingClass",
        file: SystemdFileType.network,
        ...qdsicParentEnum2,
    },
    {
        directive: "Parent",
        section: "QuickFairQueueing",
        file: SystemdFileType.network,
        ...qdsicParentEnum4,
    },
    {
        directive: "Parent",
        section: "HeavyHitterFilter",
        file: SystemdFileType.network,
        ...qdsicParentEnum4,
    },
    {
        directive: "Parent",
        section: "HierarchyTokenBucketClass",
        file: SystemdFileType.network,
        ...qdsicParentEnum2,
    },
    {
        directive: "Parent",
        section: "HierarchyTokenBucket",
        file: SystemdFileType.network,
        ...qdsicParentEnum4,
    },
    {
        directive: "Parent",
        section: "TrivialLinkEqualizer",
        file: SystemdFileType.network,
        ...qdsicParentEnum4,
    },
    {
        directive: "Parent",
        section: "FairQueueing",
        file: SystemdFileType.network,
        ...qdsicParentEnum4,
    },
    {
        directive: "Parent",
        section: "FairQueueingControlledDelay",
        file: SystemdFileType.network,
        ...qdsicParentEnum4,
    },
    {
        directive: "Parent",
        section: "GenericRandomEarlyDetection",
        file: SystemdFileType.network,
        ...qdsicParentEnum4,
    },
    {
        directive: "Parent",
        section: "EnhancedTransmissionSelection",
        file: SystemdFileType.network,
        ...qdsicParentEnum4,
    },
    {
        directive: "Parent",
        section: "DeficitRoundRobinSchedulerClass",
        file: SystemdFileType.network,
        ...qdsicParentEnum2,
    },
    {
        directive: "Parent",
        section: "DeficitRoundRobinScheduler",
        file: SystemdFileType.network,
        ...qdsicParentEnum4,
    },
    {
        directive: "Parent",
        section: "ControlledDelay",
        file: SystemdFileType.network,
        ...qdsicParentEnum4,
    },
    {
        directive: "Parent",
        section: "CAKE",
        file: SystemdFileType.network,
        ...qdsicParentEnum4,
    },
    {
        directive: "Parent",
        section: "PFIFOFast",
        file: SystemdFileType.network,
        ...qdsicParentEnum4,
    },
    {
        directive: "Parent",
        section: "PFIFOHeadDrop",
        file: SystemdFileType.network,
        ...qdsicParentEnum4,
    },
    {
        directive: "Parent",
        section: "PFIFO",
        file: SystemdFileType.network,
        ...qdsicParentEnum4,
    },
    {
        directive: "Parent",
        section: "BFIFO",
        file: SystemdFileType.network,
        ...qdsicParentEnum4,
    },
    {
        directive: "Parent",
        section: "StochasticFairnessQueueing",
        file: SystemdFileType.network,
        ...qdsicParentEnum4,
    },
    {
        directive: "Parent",
        section: "StochasticFairBlue",
        file: SystemdFileType.network,
        ...qdsicParentEnum4,
    },
    {
        directive: "Parent",
        section: "FlowQueuePIE",
        file: SystemdFileType.network,
        ...qdsicParentEnum4,
    },
    {
        directive: "Parent",
        section: "PIE",
        file: SystemdFileType.network,
        ...qdsicParentEnum4,
    },
    {
        directive: "Parent",
        section: "TokenBucketFilter",
        file: SystemdFileType.network,
        ...qdsicParentEnum4,
    },
    {
        directive: "Parent",
        section: "NetworkEmulator",
        file: SystemdFileType.network,
        ...qdsicParentEnum4,
    },
    {
        directive: "Parent",
        section: "QDisc",
        file: SystemdFileType.network,
        values: ["clsact", "ingress"],
    },
    {
        directive: "RequiredFamilyForOnline",
        section: "Link",
        file: SystemdFileType.network,
        values: ["ipv4", "ipv6", "both", "any"],
    },
    {
        directive: "RouteTable",
        section: "IPv6AcceptRA",
        file: SystemdFileType.network,
        values: ["default", "main", "local"],
    },
    {
        directive: "RouteTable",
        section: "DHCPv4",
        file: SystemdFileType.network,
        values: ["default", "main", "local"],
    },
    {
        directive: "SendOption",
        section: "DHCPServer",
        file: SystemdFileType.network,
        values: ["uint8", "uint16", "uint32", "ipv4address", "ipv6address", "string"],
    },
    {
        directive: "SendOption",
        section: "DHCPv4",
        file: SystemdFileType.network,
        values: ["uint8", "uint16", "uint32", "ipv4address", "string"],
    },
    {
        directive: "SendVendorOption",
        section: "DHCPServer",
        file: SystemdFileType.network,
        values: ["uint8", "uint16", "uint32", "ipv4address", "string"],
    },
    {
        directive: "SendVendorOption",
        section: "DHCPv6",
        file: SystemdFileType.network,
        values: ["uint8", "uint16", "uint32", "ipv4address", "ipv6address", "string"],
    },
    {
        directive: "SendVendorOption",
        section: "DHCPv4",
        file: SystemdFileType.network,
        values: ["uint8", "uint16", "uint32", "ipv4address", "string"],
    },
    {
        directive: "Table",
        section: "Route",
        file: SystemdFileType.network,
        values: ["default", "main", "local"],
    },
    {
        directive: "Table",
        section: "RoutingPolicyRule",
        file: SystemdFileType.network,
        values: ["default", "main", "local"],
    },
    {
        directive: "Type",
        section: "Route",
        file: SystemdFileType.network,
        values: [
            "unicast",
            "local",
            "broadcast",
            "anycast",
            "multicast",
            "blackhole",
            "unreachable",
            "prohibit",
            "throw",
            "nat",
            "xresolve",
        ],
    },
    {
        directive: "Type",
        section: "RoutingPolicyRule",
        file: SystemdFileType.network,
        values: ["blackhole", "unreachable", "prohibit"],
    },
    {
        directive: "WithoutRA",
        section: "DHCPv6",
        file: SystemdFileType.network,
        values: ["no", "solicit", "information-request"],
    },
    {
        directive: "EncapsulationType",
        section: "L2TP",
        file: SystemdFileType.netdev,
        values: ["udp", "ip"],
    },
    {
        directive: "EtherType",
        section: "BareUDP",
        file: SystemdFileType.netdev,
        values: ["ipv4", "ipv6", "mpls-uc", "mpls-mc"],
    },
    {
        directive: "GatewayMode",
        section: "BatmanAdvanced",
        file: SystemdFileType.netdev,
        values: ["off", "server", "client"],
    },
    {
        directive: "Layer2SpecificHeader",
        section: "L2TPSession",
        file: SystemdFileType.netdev,
        values: ["none", "default"],
    },
    {
        directive: "Local",
        section: "Tunnel",
        file: SystemdFileType.netdev,
        values: ["any", "ipv4_link_local", "ipv6_link_local", "dhcp4", "dhcp6", "slaac"],
    },
    {
        directive: "Local",
        section: "VXLAN",
        file: SystemdFileType.netdev,
        values: ["ipv4_link_local", "ipv6_link_local", "dhcp4", "dhcp6", "slaac"],
    },
    {
        directive: "RouteTable",
        section: "WireGuardPeer",
        file: SystemdFileType.netdev,
        values: ["default", "main", "local"],
    },
    {
        directive: "RouteTable",
        section: "WireGuard",
        file: SystemdFileType.netdev,
        values: ["default", "main", "local"],
    },
    {
        directive: "Type",
        section: "WLAN",
        file: SystemdFileType.netdev,
        values: wlanInterfaceType,
        sep: " ",
        prefixes: ["!"],
    },
    {
        directive: "MDI",
        section: "Link",
        manPage: "systemd.link(5)",
        values: ["straight", "mdi", "crossover", "mdi-x", "mdix", "auto"],
    },
    {
        directive: "DNSStubListener",
        section: "Resolve",
        manPage: "resolved.conf(5)",
        values: ["udp", "tcp"],
    },
    {
        directive: "_LINE_BREAK",
        manPage: "systemd.journal-fields(7)",
        values: ["nul", "line-max", "eof", "pid-change"],
    },
    {
        directive: "class",
        manPage: "pam_systemd(8)",
        values: ["user", "greeter", "lock-screen", "background"],
    },
    {
        directive: "type",
        manPage: "pam_systemd(8)",
        values: ["unspecified", "tty", "x11", "wayland", "mir"],
    },
    {
        directive: "MaxLevelConsole",
        section: "Journal",
        manPage: "journald.conf(5)",
        values: ["emerg", "alert", "crit", "err", "warning", "notice", "info", "debug"],
    },
    {
        directive: "Storage",
        section: "Journal",
        manPage: "journald.conf(5)",
        values: ["volatile", "persistent", "auto", "none"],
    },
    {
        directive: "Storage",
        section: "Coredump",
        manPage: "coredump.conf(5)",
        values: ["none", "external", "journal"],
    },
    {
        directive: "HandleHibernateKey",
        section: "Login",
        manPage: "logind.conf(5)",
        values: [
            "ignore",
            "poweroff",
            "reboot",
            "halt",
            "kexec",
            "suspend",
            "hibernate",
            "hybrid-sleep",
            "suspend-then-hibernate",
            "lock",
            "factory-reset",
        ],
    },
    {
        directive: "IdleAction",
        section: "Login",
        manPage: "logind.conf(5)",
        values: [
            "ignore",
            "poweroff",
            "reboot",
            "halt",
            "kexec",
            "suspend",
            "hibernate",
            "hybrid-sleep",
            "suspend-then-hibernate",
            "lock",
        ],
    },
    {
        directive: "Storage",
        section: "PStore",
        manPage: "pstore.conf(5)",
        values: ["none", "external", "journal"],
    },
    {
        directive: "Encrypt",
        section: "Partition",
        manPage: "repart.d(5)",
        values: ["off", "key-file", "tpm2", "key-file+tpm2"],
    },
    {
        directive: "Minimize",
        section: "Partition",
        manPage: "repart.d(5)",
        values: ["off", "best", "guess"],
    },
    {
        directive: "Type",
        section: "Partition",
        manPage: "repart.d(5)",
        values: [
            "alpha",
            "arc",
            "arm",
            "arm64",
            "ia64",
            "loongarch64",
            "mips-le",
            "mips64-le",
            "parisc",
            "ppc",
            "ppc64",
            "ppc64-le",
            "riscv32",
            "riscv64",
            "s390",
            "s390x",
            "tilegx",
            "x86",
            "x86-64",
        ],
    },
    {
        directive: "Verity",
        section: "Partition",
        manPage: "repart.d(5)",
        values: ["off", "data", "hash", "signature"],
    },
    {
        directive: "PathRelativeTo",
        section: "Target",
        manPage: "sysupdate.d(5)",
        values: ["root", "esp", "xbootldr", "boot"],
    },
    {
        directive: "Type",
        section: "Target",
        manPage: "sysupdate.d(5)",
        values: ["partition", "regular-file", "directory", "subvolume"],
    },
    {
        directive: "Type",
        section: "Source",
        manPage: "sysupdate.d(5)",
        values: ["url-file", "url-tar", "tar", "regular-file", "directory", "subvolume"],
    },
    {
        directive: "KillMode",
        values: ["control-group", "mixed", "process" /*"none"*/],
        manPage: "systemd.kill(5)",
    },
    {
        directive: "ConditionSecurity",
        values: [
            "selinux",
            "apparmor",
            "tomoyo",
            "smack",
            "ima",
            "audit",
            "uefi-secureboot",
            "tpm2",
            "cvm",
            "measured-uki",
        ],
        desc: {
            selinux: "SELinux MAC",
            apparmor: "AppArmor MAC",
            tomoyo: "Tomoyo MAC",
            smack: "SMACK MAC",
            ima: "Integrity Measurement Architecture (IMA)",
            audit: "Linux Audit Framework",
            "uefi-secureboot": "UEFI SecureBoot",
            tpm2: "Trusted Platform Module 2.0 (TPM2)",
            cvm: "Confidential virtual machine (SEV/TDX)",
            "measured-uki":
                "Unified Kernel Image with PCR 11 Measurements, as per [systemd-stub(7)](systemd-stub.html).\nAdded in version 255.",
        },
        manPage: "systemd.unit(5)",
    },
    {
        directive: "ManagedOOMSwap",
        values: ["auto", "kill"],
        manPage: "systemd.resource-control(5)",
    },
    {
        directive: "ManagedOOMMemoryPressure",
        values: ["auto", "kill"],
        manPage: "systemd.resource-control(5)",
    },
    {
        directive: "ManagedOOMPreference",
        values: ["none", "avoid", "omit"],
        manPage: "systemd.resource-control(5)",
    },
];
